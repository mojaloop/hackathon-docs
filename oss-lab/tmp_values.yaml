USER-SUPPLIED VALUES:
account-lookup-service:
  account-lookup-service:
    affinity: {}
    config:
      central_services_host: $release_name-centralledger-service
      central_services_port: 80
      db_acquire_timeout_millis: 30000
      db_connection_pool_max: 30
      db_connection_pool_min: 10
      db_create_retry_interval_millis: 200
      db_create_timeout_millis: 30000
      db_database: account_lookup
      db_debug: false
      db_destroy_timeout_millis: 5000
      db_driver: mysql
      db_host: $release_name-account-lookup-mysql
      db_idle_timeout_millis: 30000
      db_password: OdonPianoX
      db_port: 3306
      db_reap_interval_millis: 1000
      db_type: mysql
      db_user: account_lookup
      display_routes: true
      end_point_cache:
        expiresIn: 180000
        generateTimeout: 30000
      endpointSecurity:
        fspiopSourceSigningName: switch
        jwsSign: true
        jwsSigningKey: |-
          -----BEGIN PRIVATE KEY-----
          MIIEugIBADANBgkqhkiG9w0BAQEFAASCBKQwggSgAgEAAoIBAQDuB5HuHRH5BqI/
          VAC/ixm6lz8kJmigIB5jMxLrhB9cgqM+pb0O+is88VRHdxtw8eKG3nvrZYy/4nsJ
          z32qo4sOIMqHWTlZgbURVK4FAUEZ/qn63UnXJ1YVqT4UGg31BBj2c1JdlxG2t4JV
          DvzGrI2/ia/t4gYZCWrQz6a8OClBIaXu2t6EGFnysyS+1YDWtNIHO+z0lvAY9oad
          5MZPHN51o04eIoLO0tPfkz0+NDs4ECwUWuFAg8yo1hxnvSoERiCAwEbFgq2wDe1+
          oBhOpusd4VastD/TEqO8RhrwTodddOMKzapJPrQJuvTkrpkmkPOGE8DgIVHsULLR
          UYEMKvTVAgMBAAECgf94Meq77xrcFg8sSqe5eNHYP39tvaWyqE7mY/slvpNDH5Pl
          D/p21akS156E32BEJuYPk/TLiI2kMWjnvbHvNgr9tq8x3ToyTjtrg5clq8Hr1Ozo
          FnFiqkVHMFPFPQZEVU64CQPA33DixuWjMWS3YINfCAinErBry0PiNZGmuFi1K/wy
          e1z2F9WfG3IEBEe3NaeXwN55ZPJve0LtneJy3YqNwMg2FpPKBRHFV4lKTaU/hqhC
          NK6HQoEXN4Y9AQHn53Fl8n0iNO3qx0Tb7EuGNFmZ2xTlpDKAp8M+BA5Qm5YDkbd6
          OoxbGj2YxZncbG+RsvICtVMLqIytubvYREY9WGkCgYEA+K64xhJzWV3cGc8/90ko
          TryGMBj1ly5TNa1YyOQxl5z4Glc0aI8a+1vJGEAA+c/OEhMR8MRn3+QfV2LJOI5X
          V8Zo2Ger6Ln99LBddTh2HXL3M60cMgs8MYGuJ75g5R/UHnJBLo7NFyVddCOMT3hc
          AYSDN3XCw9ycqTw2/mJHB9kCgYEA9QiaCfTtnXdjMqLeYbp2uQEyyO6IZs956ym7
          sEQMwx/3wnlE9eiJ6iQxZfddkfOCyV/4MMAlYfpTBQFg7Cwb32Xrv3Ezy0HfZrnt
          5Nj4SVQWuOXJhdfC9dmTF+cvBeP+vC6PyDbikxdCo9+05chxS7I3MLxCue4qxy0C
          QfQIE10CgYA+kHacHng2u45sT9/f7t/dL0DzSNRAvL7iekIkCIURh8RDnDzrMVWw
          d18YYsHcF5PYqEOTN1aK1XGtIoVNXUJMKvaluy9c1a42qUhZ/WJ59jqLHbpCPOFf
          8yhFh3gJLQDIyCXt+K9Qa24fkfHy7Gz5VMVOZqohbJddXHDZfxAvwQKBgAdU947+
          tjF1BhHYz8Cq3KySfZuHj6tL4AEKYaRXlO4twbMe/9I/4AiShqvfZ/xbBfnSllGX
          Hkc9P0iyDt1iQH9BxHkZAQy+7tlbDORBHcTL8FYeAhawKxRCK2WWtFB/zvqAhire
          gY8XLhZLNlV91u4F6iLaL0DzAHKvRRcGH0u9AoGATNigZgbRRHJC21JucHeE0tP7
          HjGALvb4qn1o0oDHsxNY8i6vVNw9YeQpZaJhceuRHJTGcsq2dJSXpYwIhIVs/8RK
          bKbkEndra96L6FRZN8LYBl8zbRUPx39ojGeSbFliQv1eaoA/1DDhCiC2NlcSmbJl
          ecaG/Oyo/S+eM8nR7mc=
          -----END PRIVATE KEY-----
      log_level: info
      run_migrations: false
    containers:
      admin:
        image:
          command: '["node", "src/index.js", "server", "--admin"]'
          pullPolicy: Always
          repository: mojaloop/account-lookup-service
        service:
          ports:
            api:
              name: http-admin
              port: 4001
      api:
        image:
          command: '["node", "src/index.js", "server", "--api"]'
          pullPolicy: Always
          repository: mojaloop/account-lookup-service
        service:
          ports:
            api:
              name: http-api
              port: 4002
    enabled: true
    fullnameOverride: ""
    ingress:
      annotations: {}
      enabled: true
      hosts:
      - dev2-account-lookup.mojaloop.live
      path: /
      tls: []
    init:
      enabled: true
      mysql:
        command: until mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database   -e
          'select * from oracleEndpoint;' ; do echo waiting for MySQL; sleep 2; done;
        enabled: true
        name: wait-for-mysql
        pullPolicy: Always
        repository: mysql
        tag: latest
    metrics:
      config:
        defaultLabels:
          serviceName: account-lookup-service
        prefix: moja_
        timeout: 5000
      enabled: true
    nameOverride: ""
    nodeSelector: {}
    replicaCount: 1
    resources: {}
    service:
      port: 80
      type: ClusterIP
    tolerations: []
  account-lookup-service-admin:
    affinity: {}
    config:
      central_services_host: $release_name-centralledger-service
      central_services_port: 80
      db_acquire_timeout_millis: 30000
      db_connection_pool_max: 30
      db_connection_pool_min: 10
      db_create_retry_interval_millis: 200
      db_create_timeout_millis: 30000
      db_database: account_lookup
      db_debug: false
      db_destroy_timeout_millis: 5000
      db_driver: mysql
      db_host: $release_name-account-lookup-mysql
      db_idle_timeout_millis: 30000
      db_password: OdonPianoX
      db_port: 3306
      db_reap_interval_millis: 1000
      db_type: mysql
      db_user: account_lookup
      display_routes: true
      end_point_cache:
        expiresIn: 180000
        generateTimeout: 30000
      log_level: info
      run_migrations: true
    containers:
      admin:
        image:
          command: '["node", "src/index.js", "server", "--admin"]'
          pullPolicy: Always
          repository: mojaloop/account-lookup-service
        service:
          ports:
            api:
              name: http-admin
              port: 4001
      api:
        image:
          command: '["node", "src/index.js", "server", "--api"]'
          pullPolicy: Always
          repository: mojaloop/account-lookup-service
        service:
          ports:
            api:
              name: http-api
              port: 4002
    enabled: true
    fullnameOverride: ""
    ingress:
      annotations: {}
      enabled: true
      hosts:
      - dev2-account-lookup-admin.mojaloop.live
      path: /
      tls: []
    init:
      enabled: true
      mysql:
        command: until mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database   -e
          'select version()' ; do echo waiting for MySQL; sleep 2; done;
        name: wait-for-mysql
        pullPolicy: Always
        repository: mysql
        tag: latest
    metrics:
      config:
        defaultLabels:
          serviceName: account-lookup-service-admin
        prefix: moja_
        timeout: 5000
      enabled: true
    nameOverride: ""
    nodeSelector: {}
    replicaCount: 1
    resources: {}
    service:
      port: 80
      type: ClusterIP
    tolerations: []
  als-oracle-pathfinder:
    config:
      db_database:
        account_lookup: account_lookup
        central_ledger: central_ledger
      db_driver: mysql
      db_host: $release_name-centralledger-mysql
      db_password: oyMxgZChuu
      db_port: "3306"
      db_type: mysql
      db_user: central_ledger
      log_level: info
      pathfinder:
        host: 156.154.59.224
        port: 7007
        queryTimeoutMs: 10000
        tls:
          certs:
            client_cert: |-
              -----BEGIN CERTIFICATE-----
              MIIDejCCAmICCQClh6JWji+/NjANBgkqhkiG9w0BAQsFADB/MQswCQYDVQQGEwJV
              UzEQMA4GA1UECAwHQWxhYmFtYTETMBEGA1UEBwwKTW9udGdvbWVyeTENMAsGA1UE
              CgwEVGVzdDENMAsGA1UECwwEVGVzdDENMAsGA1UEAwwEVGVzdDEcMBoGCSqGSIb3
              DQEJARYNdGVzdEB0ZXN0LmNvbTAeFw0xOTEwMjkxNTMwNTFaFw0yOTEwMjYxNTMw
              NTFaMH8xCzAJBgNVBAYTAlVTMRAwDgYDVQQIDAdBbGFiYW1hMRMwEQYDVQQHDApN
              b250Z29tZXJ5MQ0wCwYDVQQKDARUZXN0MQ0wCwYDVQQLDARUZXN0MQ0wCwYDVQQD
              DARUZXN0MRwwGgYJKoZIhvcNAQkBFg10ZXN0QHRlc3QuY29tMIIBIjANBgkqhkiG
              9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4MU4ipis7vrhsJl6Ad0hIF/nEGjTPG/6KliG
              E1eaAVxOc/Pgw43quKjt846Aqwd9YoMp2NAx74xvZ4OnbMwSpjDQGRQbMY7Hiubs
              UiJMqrst6S5AQqPHJoaErknVjRov0NyAUjia3HThtkqrRT52xTnTGYwc49zt+BKo
              G4iurv40hfOTe4b7g3A64CVNEZe7t+qPbAIew9MU1X3OD3D0hzKZ8MstqebLbSPV
              IflnzU+8Acg4mrMvSdf6OOveUUbf7r4QmfC9AerNVia/GcAvbG/GU+WEOnJfp+8X
              Av+gfS0aM2pUbdrXLi/NxWnvw6bh8e+pjbBcli8roWmroRbFPwIDAQABMA0GCSqG
              SIb3DQEBCwUAA4IBAQApH4oz7CWXzor91aU7bcdD5Ec/Z5QNDKXVrBcF5r+g83yz
              bBphZrvDq+wOVigQ/JfmuAzRtK05WIpvxd22kvsKrDoViG9B+x+wDQm0tP0vY1Cp
              EChdJLE1tAktRL49r8pzpOaUU7NrhYLP1tWrDDsCC3fPUwZzx9quem0xSYmC0BpT
              Ug+hxw3uH7bsGhQkQnGrAoEwrsyq8M3lbw0pIUvq2S7t8lpHZvM5Ldkp5DM7SlJg
              gBabAqScAeoqssFv4bsWINawn/7JvmFEb4kwep6pIf9Lh/rkCgsgyq2xEh/9LXNs
              eCgyt9zbdU2HwsWnoOUEJ0Z4157ykgOkECCGErKl
              -----END CERTIFICATE-----
            client_key: |-
              -----BEGIN PRIVATE KEY-----
              MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDgxTiKmKzu+uGw
              mXoB3SEgX+cQaNM8b/oqWIYTV5oBXE5z8+DDjeq4qO3zjoCrB31igynY0DHvjG9n
              g6dszBKmMNAZFBsxjseK5uxSIkyquy3pLkBCo8cmhoSuSdWNGi/Q3IBSOJrcdOG2
              SqtFPnbFOdMZjBzj3O34EqgbiK6u/jSF85N7hvuDcDrgJU0Rl7u36o9sAh7D0xTV
              fc4PcPSHMpnwyy2p5sttI9Uh+WfNT7wByDiasy9J1/o4695RRt/uvhCZ8L0B6s1W
              Jr8ZwC9sb8ZT5YQ6cl+n7xcC/6B9LRozalRt2tcuL83Fae/DpuHx76mNsFyWLyuh
              aauhFsU/AgMBAAECggEAWgPhvu+h4hsrI1Rznid2ysZdfR7d6chWgXruRvTAQmc7
              LAixLN+67rUIho+9S8E2H6uzqJbISM0PGH+LH3Eiztehn0mEEnbBxwjv/3ypA37u
              xgG1znpUmUMqA7qiAV5JY/XKliMBMeTFOAHzUUnQuu+LcSHBuCeUTdL66/vzKTT4
              oCKwB1vcnzfL5NS/7ownAgLsjNj3pgORRAY9sTDzUkjwrrN/m5nEfghycAcyXHDJ
              lQprc0xX4TI/Vd9ZkG+khAznkRaXiPJ1P1TwadgK5m53Imt2H3F0lmrhNCrul/l7
              F0Uf2tfNHHgSjyoGQkPryuqyf2NcMiUY1d4uCsnWEQKBgQDziD3gBkjguQZUc3Yb
              DqiCtaLkavndmRTPaAyUk95dUuiVEMhnDm8L7T+03PhVDjtXdy4PQUm61xr/Kw4J
              1VUArbIjzcs+OEGNvq99stThRBvszwNRSWS4kYIur3+ggddrewtL7s+hiAqeK88L
              n6vG4/eSKWJBQwF1001siKf7/QKBgQDsRxXGZkf+yVsuL/hSiadwRdD/OJ1O7gr2
              j8za6izaUX1anXLdPrvtOkdCgEC0Iy6hY0FMi0GWzklpY4SvZuxXlK6QkKB3SCE9
              E8RuOSFLouuaxgiau8MnAEUTkInTC+9foOa8znuOGC0JmzztlFf7P7CF8PoNTb4n
              x4a9dQSE6wKBgAjPfgWT1KEksIDvqG80KY6JCbqf0ChfOGyEhCf/7YSM0lNKRyXL
              VOMmky507BsPp7/zVNxCbWtwCs7+fMSITkn2/sHi2R6IJH7/ThQLGz6HG0eG+cTA
              Ff/Da+VKfiCNcgC2c+MsYaCjblbomNX/0dQhPTyxeJeJ2AyuN1fc3c71AoGBAIA2
              tsc5e3nz9AmlOEA5uGWBTT8hjqNlIwfW0pg8mOhDbh188PbD8yBxDng0tmfJ66Ti
              Am4x5v6ZpFaPDVJNLJT99pg2Ew2HU5ocHuydDcdIekc7jTHCD80bJWDPfyrKADRJ
              UMxF0+AwmEftOGvHotKRJg4YzOfpNvXJHQGz/SbPAoGAALJa010eqPHuZKQxpW4z
              4dpt1Fr16cbLnmIk16zxnvPbPJeCtEx8IkwgLIWP6zPOESIGBTslGMq6xIgYaOXZ
              G8S+fLF3J9sfE2gCJR1JSBXdlyWmcKJdyvhRt168hxVW1N4uHJ2KBA3vUhC/kRvh
              3XDCWsEkXqU0KRzt+TkWVOQ=
              -----END PRIVATE KEY-----
            pathfinder_cert: |-
              -----BEGIN CERTIFICATE-----
              MIIDejCCAmICCQClh6JWji+/NjANBgkqhkiG9w0BAQsFADB/MQswCQYDVQQGEwJV
              UzEQMA4GA1UECAwHQWxhYmFtYTETMBEGA1UEBwwKTW9udGdvbWVyeTENMAsGA1UE
              CgwEVGVzdDENMAsGA1UECwwEVGVzdDENMAsGA1UEAwwEVGVzdDEcMBoGCSqGSIb3
              DQEJARYNdGVzdEB0ZXN0LmNvbTAeFw0xOTEwMjkxNTMwNTFaFw0yOTEwMjYxNTMw
              NTFaMH8xCzAJBgNVBAYTAlVTMRAwDgYDVQQIDAdBbGFiYW1hMRMwEQYDVQQHDApN
              b250Z29tZXJ5MQ0wCwYDVQQKDARUZXN0MQ0wCwYDVQQLDARUZXN0MQ0wCwYDVQQD
              DARUZXN0MRwwGgYJKoZIhvcNAQkBFg10ZXN0QHRlc3QuY29tMIIBIjANBgkqhkiG
              9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4MU4ipis7vrhsJl6Ad0hIF/nEGjTPG/6KliG
              E1eaAVxOc/Pgw43quKjt846Aqwd9YoMp2NAx74xvZ4OnbMwSpjDQGRQbMY7Hiubs
              UiJMqrst6S5AQqPHJoaErknVjRov0NyAUjia3HThtkqrRT52xTnTGYwc49zt+BKo
              G4iurv40hfOTe4b7g3A64CVNEZe7t+qPbAIew9MU1X3OD3D0hzKZ8MstqebLbSPV
              IflnzU+8Acg4mrMvSdf6OOveUUbf7r4QmfC9AerNVia/GcAvbG/GU+WEOnJfp+8X
              Av+gfS0aM2pUbdrXLi/NxWnvw6bh8e+pjbBcli8roWmroRbFPwIDAQABMA0GCSqG
              SIb3DQEBCwUAA4IBAQApH4oz7CWXzor91aU7bcdD5Ec/Z5QNDKXVrBcF5r+g83yz
              bBphZrvDq+wOVigQ/JfmuAzRtK05WIpvxd22kvsKrDoViG9B+x+wDQm0tP0vY1Cp
              EChdJLE1tAktRL49r8pzpOaUU7NrhYLP1tWrDDsCC3fPUwZzx9quem0xSYmC0BpT
              Ug+hxw3uH7bsGhQkQnGrAoEwrsyq8M3lbw0pIUvq2S7t8lpHZvM5Ldkp5DM7SlJg
              gBabAqScAeoqssFv4bsWINawn/7JvmFEb4kwep6pIf9Lh/rkCgsgyq2xEh/9LXNs
              eCgyt9zbdU2HwsWnoOUEJ0Z4157ykgOkECCGErKl
              -----END CERTIFICATE-----
            pathfinder_intermediate_cert: |-
              -----BEGIN CERTIFICATE-----
              MIIDejCCAmICCQClh6JWji+/NjANBgkqhkiG9w0BAQsFADB/MQswCQYDVQQGEwJV
              UzEQMA4GA1UECAwHQWxhYmFtYTETMBEGA1UEBwwKTW9udGdvbWVyeTENMAsGA1UE
              CgwEVGVzdDENMAsGA1UECwwEVGVzdDENMAsGA1UEAwwEVGVzdDEcMBoGCSqGSIb3
              DQEJARYNdGVzdEB0ZXN0LmNvbTAeFw0xOTEwMjkxNTMwNTFaFw0yOTEwMjYxNTMw
              NTFaMH8xCzAJBgNVBAYTAlVTMRAwDgYDVQQIDAdBbGFiYW1hMRMwEQYDVQQHDApN
              b250Z29tZXJ5MQ0wCwYDVQQKDARUZXN0MQ0wCwYDVQQLDARUZXN0MQ0wCwYDVQQD
              DARUZXN0MRwwGgYJKoZIhvcNAQkBFg10ZXN0QHRlc3QuY29tMIIBIjANBgkqhkiG
              9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4MU4ipis7vrhsJl6Ad0hIF/nEGjTPG/6KliG
              E1eaAVxOc/Pgw43quKjt846Aqwd9YoMp2NAx74xvZ4OnbMwSpjDQGRQbMY7Hiubs
              UiJMqrst6S5AQqPHJoaErknVjRov0NyAUjia3HThtkqrRT52xTnTGYwc49zt+BKo
              G4iurv40hfOTe4b7g3A64CVNEZe7t+qPbAIew9MU1X3OD3D0hzKZ8MstqebLbSPV
              IflnzU+8Acg4mrMvSdf6OOveUUbf7r4QmfC9AerNVia/GcAvbG/GU+WEOnJfp+8X
              Av+gfS0aM2pUbdrXLi/NxWnvw6bh8e+pjbBcli8roWmroRbFPwIDAQABMA0GCSqG
              SIb3DQEBCwUAA4IBAQApH4oz7CWXzor91aU7bcdD5Ec/Z5QNDKXVrBcF5r+g83yz
              bBphZrvDq+wOVigQ/JfmuAzRtK05WIpvxd22kvsKrDoViG9B+x+wDQm0tP0vY1Cp
              EChdJLE1tAktRL49r8pzpOaUU7NrhYLP1tWrDDsCC3fPUwZzx9quem0xSYmC0BpT
              Ug+hxw3uH7bsGhQkQnGrAoEwrsyq8M3lbw0pIUvq2S7t8lpHZvM5Ldkp5DM7SlJg
              gBabAqScAeoqssFv4bsWINawn/7JvmFEb4kwep6pIf9Lh/rkCgsgyq2xEh/9LXNs
              eCgyt9zbdU2HwsWnoOUEJ0Z4157ykgOkECCGErKl
              -----END CERTIFICATE-----
          client_cert_path: /opt/als-oracle-pathfinder/secrets/client_cert.pem
          client_key_path: /opt/als-oracle-pathfinder/secrets/client_key.pem
          intermediate_cert_path: /opt/als-oracle-pathfinder/secrets/pathfinder_intermediate_cert.pem
          rejectUnauthorized: false
          root_cert_path: /opt/als-oracle-pathfinder/secrets/pathfinder_cert.pem
    enabled: false
    image:
      command: '["node", "src/index.js"]'
      imagePullSecrets:
        name: dock-casa-secret
      pullPolicy: Always
      repository: mojaloop/als-oracle-pathfinder
    ingress:
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
      enabled: true
      externalPath: /
      hosts:
        api: als-oracle-pathfinder.local
      tls: null
    init:
      enabled: true
      mysql:
        command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database
          -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result'
          && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false;
          fi; do echo waiting for MySQL; sleep 2; done;
        name: wait-for-mysql
        pullPolicy: Always
        repository: mysql
        tag: latest
    livenessProbe:
      enabled: false
      httpGet:
        path: /health
      initialDelaySeconds: 60
      periodSeconds: 15
    readinessProbe:
      enabled: false
      httpGet:
        path: /health
      initialDelaySeconds: 60
      periodSeconds: 15
    replicaCount: 1
    resources: {}
    service:
      annotations: {}
      external:
        enabled: false
        ip: 10.0.2.2
        ports:
          provisioning:
            externalPort: 3000
            name: http-api
      ports:
        api:
          externalPort: 80
          internalPort: 3000
          name: http-api
      type: ClusterIP
  mysql:
    allowRootFrom: '%'
    configFiles:
      node.cnf: |
        [mysqld]
        datadir=/var/lib/mysql
        default_storage_engine=InnoDB
        binlog_format=ROW
        innodb_flush_log_at_trx_commit  = 1
        innodb_flush_method             = O_DIRECT
        innodb_file_per_table           = 1
        innodb_autoinc_lock_mode=2
        bind_address = 0.0.0.0
        wsrep_slave_threads=2
        wsrep_cluster_address=gcomm://
        wsrep_provider=/usr/lib/galera3/libgalera_smm.so
        wsrep_cluster_name=galera
        wsrep_sst_method=xtrabackup-v2
        pxc_strict_mode=DISABLED
        max_connections=999
        max_user_connections=994
        thread_cache_size=999
    enabled: true
    image:
      pullPolicy: Always
      repository: percona/percona-xtradb-cluster
      tag: 5.7.19
    logTail: true
    metricsExporter:
      enabled: true
    mysqlDatabase: account_lookup
    mysqlPassword: OdonPianoX
    mysqlUser: account_lookup
    nameOverride: account-lookup-mysql
    nodeSelector: {}
    persistence:
      accessMode: ReadWriteOnce
      enabled: false
      size: 8Gi
    podAnnotations: {}
    replicas: 1
    service:
      externalIPs: []
      port: 3306
      type: ClusterIP
    tolerations: []
central:
  centraleventprocessor:
    config:
      PORT: 3080
      central_ledger_admin_host: $release_name-centralledger-service
      central_ledger_admin_port: 3001
      central_ledger_api_host: centralledger-service
      central_ledger_api_port: 3000
      hub_participant:
        name: hub
      kafka_host: $release_name-kafka
      kafka_port: 9092
      mongo_database: mojaloop
      mongo_host: $release_name-cep-mongodb
      mongo_password: password
      mongo_port: 27017
      mongo_user: mojaloop
    ingress:
      annotations: null
      enabled: true
      externalPath: /
      hosts:
        api: central-event-processor.local
      tls: null
    init:
      enabled: true
      kafka:
        command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port;
          do echo waiting for Kafka; sleep 2; done;
        env: {}
        name: wait-for-kafka
        pullPolicy: Always
        repository: solsson/kafka
        tag: latest
      mongodb:
        command: mongo mongodb://$mongo_host:$mongo_port --eval "db.adminCommand('ping')"
        name: wait-for-mongodb
        pullPolicy: Always
        repository: bitnami/mongodb
        tag: latest
    livenessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 30
      periodSeconds: 15
    mongodb:
      additionalLabels: {}
      affinity: {}
      clusterDomain: cluster.local
      configmap: null
      enabled: true
      image:
        pullPolicy: Always
        registry: docker.io
        repository: bitnami/mongodb
        tag: 4.0.3
      livenessProbe:
        enabled: true
        failureThreshold: 6
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      metrics:
        enabled: false
        image:
          pullPolicy: IfNotPresent
          registry: docker.io
          repository: forekshub/percona-mongodb-exporter
          tag: latest
        podAnnotations:
          prometheus.io/port: "9216"
          prometheus.io/scrape: "true"
        serviceMonitor:
          additionalLabels: {}
          alerting:
            rules: {}
          enabled: false
      mongodbDatabase: mojaloop
      mongodbEnableIPv6: true
      mongodbExtraFlags: []
      mongodbPassword: password
      mongodbRootPassword: adminpass
      mongodbUsername: mojaloop
      nameOverride: cep-mongodb
      nodeSelector: {}
      persistence:
        accessModes:
        - ReadWriteOnce
        annotations: {}
        enabled: false
        size: 8Gi
      podAnnotations: {}
      podLabels: {}
      readinessProbe:
        enabled: true
        failureThreshold: 6
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      replicaSet:
        enabled: false
        name: rs0
        pdb:
          minAvailable:
            arbiter: 1
            primary: 1
            secondary: 1
        replicas:
          arbiter: 1
          secondary: 1
        useHostnames: true
      resources: {}
      securityContext:
        enabled: true
        fsGroup: 1001
        runAsUser: 1001
      service:
        annotations: {}
        port: 27017
        type: ClusterIP
      tolerations: []
      usePassword: true
    readinessProbe:
      enabled: true
      httpGet:
        path: /health
      initialDelaySeconds: 30
      periodSeconds: 15
    replicaCount: 1
    resources: {}
    service:
      annotations: {}
      external:
        enabled: false
        ip: 10.0.2.2
        ports:
          api:
            externalPort: 3080
            name: central-event-processor
      externalPort: 80
      internalPort: 3080
      name: central-event-processor
      type: ClusterIP
  centralledger:
    centralledger-handler-admin-transfer:
      config:
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: $release_name-centralledger-mysql
        db_idle_timeout_millis: 30000
        db_password: oyMxgZChuu
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_port: 9092
      enabled: true
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        enabled: true
        externalPath:
          api: /
        hosts:
          api: central-ledger-admin-transfer.local
        tls: null
        type: http
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port;
            do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: Always
          repository: solsson/kafka
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database
            -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result'
            && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false;
            fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: Always
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: Always
          repository: bowerswilkins/awaitpostgres
          tag: latest
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
    centralledger-handler-timeout:
      config:
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: $release_name-centralledger-mysql
        db_idle_timeout_millis: 30000
        db_password: oyMxgZChuu
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_port: 9092
      enabled: true
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        enabled: true
        externalPath:
          api: /
        hosts:
          api: central-ledger-timeout.local
        tls: null
        type: http
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port;
            do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: Always
          repository: solsson/kafka
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database
            -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result'
            && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false;
            fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: Always
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: Always
          repository: bowerswilkins/awaitpostgres
          tag: latest
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
    centralledger-handler-transfer-fulfil:
      config:
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: $release_name-centralledger-mysql
        db_idle_timeout_millis: 30000
        db_password: oyMxgZChuu
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_port: 9092
      enabled: true
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        enabled: true
        externalPath:
          api: /
        hosts:
          api: central-ledger-transfer-fulfil.local
        tls: null
        type: http
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port;
            do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: Always
          repository: solsson/kafka
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database
            -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result'
            && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false;
            fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: Always
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: Always
          repository: bowerswilkins/awaitpostgres
          tag: latest
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
    centralledger-handler-transfer-get:
      config:
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: $release_name-centralledger-mysql
        db_idle_timeout_millis: 30000
        db_password: oyMxgZChuu
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_port: 9092
      enabled: true
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        enabled: true
        externalPath:
          api: /
        hosts:
          api: central-ledger-transfer-get.local
        tls: null
        type: http
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port;
            do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: Always
          repository: solsson/kafka
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database
            -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result'
            && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false;
            fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: Always
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: Always
          repository: bowerswilkins/awaitpostgres
          tag: latest
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
    centralledger-handler-transfer-position:
      config:
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: $release_name-centralledger-mysql
        db_idle_timeout_millis: 30000
        db_password: oyMxgZChuu
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_port: 9092
      enabled: true
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        enabled: true
        externalPath:
          api: /
        hosts:
          api: central-ledger-transfer-position.local
        tls: null
        type: http
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port;
            do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: Always
          repository: solsson/kafka
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database
            -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result'
            && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false;
            fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: Always
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: Always
          repository: bowerswilkins/awaitpostgres
          tag: latest
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
    centralledger-handler-transfer-prepare:
      config:
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: $release_name-centralledger-mysql
        db_idle_timeout_millis: 30000
        db_password: oyMxgZChuu
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_port: 9092
      enabled: true
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        enabled: true
        externalPath:
          api: /
        hosts:
          api: central-ledger-transfer-prepare.local
        tls: null
        type: http
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port;
            do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: Always
          repository: solsson/kafka
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database
            -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result'
            && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false;
            fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: Always
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: Always
          repository: bowerswilkins/awaitpostgres
          tag: latest
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
    centralledger-service:
      config:
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: $release_name-centralledger-mysql
        db_idle_timeout_millis: 30000
        db_password: oyMxgZChuu
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_port: 9092
      enabled: true
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        enabled: true
        externalPath:
          api: /
        hosts:
          api: dev2-central-ledger.mojaloop.live
        tls: null
        type: http
      init:
        enabled: true
        migration:
          command: npm run migrate
          config:
            run_data_migration: true
          enabled: true
          name: run-migration
        mysql:
          command: until mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database   -e
            'select version()' ; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: Always
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: Always
          repository: bowerswilkins/awaitpostgres
          tag: latest
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
    enabled: true
    kafka:
      additionalPorts: {}
      affinity: {}
      configurationOverrides:
        default.replication.factor: 1
        offsets.topic.replication.factor: 1
      enabled: true
      external:
        domain: cluster.local
        enabled: false
        firstListenerPort: 31090
        init:
          image: lwolf/kubectl_deployer
          imagePullPolicy: IfNotPresent
          imageTag: "0.4"
        servicePort: 19092
      image: confluentinc/cp-kafka
      imagePullPolicy: IfNotPresent
      imageTag: 5.0.1
      jmx:
        configMap:
          enabled: true
          overrideConfig: {}
          overrideName: ""
        port: 5555
        whitelistObjectNames:
        - kafka.controller:*
        - kafka.server:*
        - java.lang:*
        - kafka.network:*
        - kafka.log:*
      kafkaHeapOptions: -Xmx1G -Xms1G
      logSubPath: logs
      nameOverride: kafka
      nodeSelector: {}
      persistence:
        enabled: false
        mountPath: /opt/kafka/data
        size: 1Gi
      podManagementPolicy: OrderedReady
      prometheus:
        jmx:
          enabled: true
          image: solsson/kafka-prometheus-jmx-exporter@sha256
          imageTag: a23062396cd5af1acdf76512632c20ea6be76885dfc20cd9ff40fb23846557e8
          interval: 10s
          port: 5556
          resources: {}
        kafka:
          enabled: true
          image: danielqsj/kafka-exporter
          imageTag: v1.0.1
          interval: 10s
          port: 9308
          resources: {}
        operator:
          enabled: false
          serviceMonitor:
            namespace: monitoring
            selector:
              prometheus: kube-prometheus
      rbac:
        enabled: true
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      replicas: 1
      resources: {}
      terminationGracePeriodSeconds: 60
      tolerations: []
      updateStrategy:
        type: OnDelete
      zookeeper:
        affinity: {}
        enabled: true
        heap: 1G
        imagePullPolicy: IfNotPresent
        persistence:
          enabled: false
        port: 2181
        replicaCount: 1
        resources: null
        url: ""
    mysql:
      allowRootFrom: '%'
      configFiles:
        node.cnf: |
          [mysqld]
          datadir=/var/lib/mysql
          default_storage_engine=InnoDB
          binlog_format=ROW
          innodb_flush_log_at_trx_commit  = 1
          innodb_flush_method             = O_DIRECT
          innodb_file_per_table           = 1
          innodb_autoinc_lock_mode=2
          bind_address = 0.0.0.0
          wsrep_slave_threads=2
          wsrep_cluster_address=gcomm://
          wsrep_provider=/usr/lib/galera3/libgalera_smm.so
          wsrep_cluster_name=galera
          wsrep_sst_method=xtrabackup-v2
          pxc_strict_mode=DISABLED
      enabled: true
      image:
        pullPolicy: Always
        repository: percona/percona-xtradb-cluster
        tag: 5.7.19
      logTail: true
      metricsExporter:
        enabled: true
      mysqlDatabase: central_ledger
      mysqlPassword: oyMxgZChuu
      mysqlUser: central_ledger
      nameOverride: centralledger-mysql
      nodeSelector: {}
      persistence:
        accessMode: ReadWriteOnce
        enabled: false
        size: 8Gi
      podAnnotations: {}
      replicas: 1
      service:
        externalIPs: []
        port: 3306
        type: ClusterIP
      tolerations: []
    nameOverride: centralledger
  centralsettlement:
    config:
      db_acquire_timeout_millis: 30000
      db_connection_pool_max: 30
      db_connection_pool_min: 10
      db_create_retry_interval_millis: 200
      db_create_timeout_millis: 30000
      db_database: central_ledger
      db_debug: false
      db_destroy_timeout_millis: 5000
      db_driver: mysql
      db_host: $release_name-centralledger-mysql
      db_idle_timeout_millis: 30000
      db_password: oyMxgZChuu
      db_port: 3306
      db_reap_interval_millis: 1000
      db_type: mysql
      db_user: central_ledger
      hub_participant:
        id: 1
        name: hub
      kafka_host: $release_name-kafka
      kafka_port: 9092
    ingress:
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
      enabled: true
      externalPath: /
      hosts:
        api: dev2-central-settlement.mojaloop.live
      tls: null
    init:
      enabled: true
      mysql:
        command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database
          -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result'
          && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false;
          fi; do echo waiting for MySQL; sleep 2; done;
        name: wait-for-mysql
        pullPolicy: Always
        repository: mysql
        tag: latest
    livenessProbe:
      enabled: false
      httpGet:
        path: /health
      initialDelaySeconds: 60
      periodSeconds: 15
    readinessProbe:
      enabled: false
      httpGet:
        path: /health
      initialDelaySeconds: 60
      periodSeconds: 15
    replicaCount: 1
    resources: {}
    service:
      annotations: {}
      external:
        enabled: false
        ip: 10.0.2.2
        ports:
          api:
            externalPort: 3007
            name: http-api
      ports:
        api:
          externalPort: 80
          internalPort: 3007
          name: http-api
      type: ClusterIP
emailnotifier:
  config:
    PORT: 3081
    email:
      ciphers: SSLv3
      host: email-smtp.eu-west-2.amazonaws.com
      pass: BLyAVaQPGU9XVwocNnut/SNmhVYkpltZ+zspVapVMlTW
      port: 587
      user: AKIA44YOGEHOZN7XKNTS
    hub_participant:
      name: hub
    kafka_host: $release_name-kafka
    kafka_port: 9092
  enabled: true
  ingress:
    annotations: null
    enabled: true
    externalPath: /
    hosts:
      api: email-notifier.local
    tls: null
  init:
    enabled: true
    kafka:
      command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port;
        do echo waiting for Kafka; sleep 2; done;
      env: {}
      name: wait-for-kafka
      pullPolicy: Always
      repository: solsson/kafka
      tag: latest
  livenessProbe:
    enabled: true
    httpGet:
      path: /health
    initialDelaySeconds: 30
    periodSeconds: 15
  readinessProbe:
    enabled: true
    httpGet:
      path: /health
    initialDelaySeconds: 30
    periodSeconds: 15
  replicaCount: 1
  resources: {}
  service:
    annotations: {}
    external:
      enabled: false
      ip: 10.0.2.2
      ports:
        api:
          externalPort: 3081
          name: email-notifier
    externalPort: 80
    internalPort: 3081
    name: email-notifier
    type: ClusterIP
finance-portal:
  JWTKeys:
    first_key.key: |-
      -----BEGIN RSA PUBLIC KEY-----
      MIICXQIBAAKBgQCyQ80uaA1DKxjwuGgetuHiXoZxpQ/Twyj/9a5zeMCfZlAvreCs
      8MhCm17OuQkYkiIpoEwn3DUDXAO03kUg9Hg5pd5ObnTZdWoBKWR1t/U2R4xU6v2w
      KLn9KyK/cA/79wzaiMZS+H+j+pt9ZjgdpKOcn3XK8bOURIVEsSNu8+yZ/wIDAQAB
      AoGAULdvj9wwaSH6DIFLL+EaHYA0ev/Ez1tWVLN/NqzN9z8B/tzJ1zS9UJ9+Sbcx
      3azJiDSbVw8X9/nxebOM9JONXbcCMeJX5MqsBzrR89vTHo9ir91u7LDVBEo+bsrS
      ufTQdT1etUOggwWssU4JLoQB7L7QoFhBTndAc6AwmB1t6pECQQDHBe01qgTQwF4H
      zjnpBKPUlYX5Ma+6VDvSG/yFdJeA58TrF3oBBnET9ZTmy4mDLQaO88wsAx0kduaB
      H8tuoCUvAkEA5UyIpG2djRCyCRkENJLn9qpCaSOwaO43D189KqGzW9nHihMNczha
      akAIa3ULp8AoqPFKOFk+v2jGYwPHSatEMQJBAK9vr/wAFSKWj8y9oxqetnPsIh7a
      B5duLRU3Ck/xyKMeqty44xkIPqFjd5BClsME66UTj0S0sfm0vdfQ2Rh5Ho0CQAaz
      PM7pMRBdK4aeh4Ptwv9vLC+cTlxSkaNOWiAzx2TosS70rZDvVZ0DL/vL2MJXGBkP
      q+aHnRDEw/9CrgEWExECQQCT7jFthoPs29A981euHfZ+bXMFEI48PFgw13cmyWnM
      HijF+4E/XtD11WJkIuDCmHal/oRtcbIO/cCk15xbWZkD
      -----END RSA PUBLIC KEY-----
    second_key.key: |-
      -----BEGIN RSA PUBLIC KEY-----
      MIICXQIBAAKBgQCyQ80uaA1DKxjwuGgetuHiXoZxpQ/Twyj/9a5zeMCfZlAvreCs
      8MhCm17OuQkYkiIpoEwn3DUDXAO03kUg9Hg5pd5ObnTZdWoBKWR1t/U2R4xU6v2w
      KLn9KyK/cA/79wzaiMZS+H+j+pt9ZjgdpKOcn3XK8bOURIVEsSNu8+yZ/wIDAQAB
      AoGAULdvj9wwaSH6DIFLL+EaHYA0ev/Ez1tWVLN/NqzN9z8B/tzJ1zS9UJ9+Sbcx
      3azJiDSbVw8X9/nxebOM9JONXbcCMeJX5MqsBzrR89vTHo9ir91u7LDVBEo+bsrS
      ufTQdT1etUOggwWssU4JLoQB7L7QoFhBTndAc6AwmB1t6pECQQDHBe01qgTQwF4H
      zjnpBKPUlYX5Ma+6VDvSG/yFdJeA58TrF3oBBnET9ZTmy4mDLQaO88wsAx0kduaB
      H8tuoCUvAkEA5UyIpG2djRCyCRkENJLn9qpCaSOwaO43D189KqGzW9nHihMNczha
      akAIa3ULp8AoqPFKOFk+v2jGYwPHSatEMQJBAK9vr/wAFSKWj8y9oxqetnPsIh7a
      B5duLRU3Ck/xyKMeqty44xkIPqFjd5BClsME66UTj0S0sfm0vdfQ2Rh5Ho0CQAaz
      PM7pMRBdK4aeh4Ptwv9vLC+cTlxSkaNOWiAzx2TosS70rZDvVZ0DL/vL2MJXGBkP
      q+aHnRDEw/9CrgEWExECQQCT7jFthoPs29A981euHfZ+bXMFEI48PFgw13cmyWnM
      HijF+4E/XtD11WJkIuDCmHal/oRtcbIO/cCk15xbWZkD
      -----END RSA PUBLIC KEY-----
    third_key.key: |-
      -----BEGIN RSA PUBLIC KEY-----
      MIICXQIBAAKBgQCyQ80uaA1DKxjwuGgetuHiXoZxpQ/Twyj/9a5zeMCfZlAvreCs
      8MhCm17OuQkYkiIpoEwn3DUDXAO03kUg9Hg5pd5ObnTZdWoBKWR1t/U2R4xU6v2w
      KLn9KyK/cA/79wzaiMZS+H+j+pt9ZjgdpKOcn3XK8bOURIVEsSNu8+yZ/wIDAQAB
      AoGAULdvj9wwaSH6DIFLL+EaHYA0ev/Ez1tWVLN/NqzN9z8B/tzJ1zS9UJ9+Sbcx
      3azJiDSbVw8X9/nxebOM9JONXbcCMeJX5MqsBzrR89vTHo9ir91u7LDVBEo+bsrS
      ufTQdT1etUOggwWssU4JLoQB7L7QoFhBTndAc6AwmB1t6pECQQDHBe01qgTQwF4H
      zjnpBKPUlYX5Ma+6VDvSG/yFdJeA58TrF3oBBnET9ZTmy4mDLQaO88wsAx0kduaB
      H8tuoCUvAkEA5UyIpG2djRCyCRkENJLn9qpCaSOwaO43D189KqGzW9nHihMNczha
      akAIa3ULp8AoqPFKOFk+v2jGYwPHSatEMQJBAK9vr/wAFSKWj8y9oxqetnPsIh7a
      B5duLRU3Ck/xyKMeqty44xkIPqFjd5BClsME66UTj0S0sfm0vdfQ2Rh5Ho0CQAaz
      PM7pMRBdK4aeh4Ptwv9vLC+cTlxSkaNOWiAzx2TosS70rZDvVZ0DL/vL2MJXGBkP
      q+aHnRDEw/9CrgEWExECQQCT7jFthoPs29A981euHfZ+bXMFEI48PFgw13cmyWnM
      HijF+4E/XtD11WJkIuDCmHal/oRtcbIO/cCk15xbWZkD
      -----END RSA PUBLIC KEY-----
  backend:
    env: dev
    ingress:
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/rewrite-target: /
      enabled: true
      externalPath: /admin-portal-backend/
      hosts:
        api: dev2-finance-portal.mojaloop.live
    init:
      enabled: false
      image:
        pullPolicy: Always
        repository: mojaloop/finance-portal-backend-service
    service:
      port: 3000
  config:
    BypassAuth: "true"
    InsecureCookie: "false"
    centralLedgerEndpoint: $release_name-centralledger-service
    db_database: central_ledger
    db_host: $release_name-centralledger-mysql
    db_password: oyMxgZChuu
    db_port: "3306"
    db_user: central_ledger
    is_populate:
      authentication:
        credentials:
          password: admin
          username: admin
        type: basic
      http:
        endpoint: something
        timeout: 30000
      name: ispopulate
    isOauthEnabled: false
    jasperPassword: password
    jasperUser: user
    oauthClientKey: testkey
    oauthClientSecret: testsecret
    oauthLoginPath: /oauth2/token
    oauthPort: 9443
    oauthServer: https://localhost
    oauthTokenRevoke: /oauth2/revoke
    oauthTokenValidationPath: /oauth2/introspect
    oauthUserInfo: /oauth2/userinfo
    report1: something
    report2: something
    settlementManagementEndpoint: $release_name-finance-portal-settlement-management
    settlementManagementPort: "5000"
    settlementsEndpoint: $release_name-centralsettlement/v1
  enabled: true
  frontend:
    ingress:
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/rewrite-target: /
      enabled: true
      externalPath: /
      hosts:
        api: dev2-finance-portal.mojaloop.live
    service:
      port: 80
  imageCredentials:
    enabled: false
    name: pull-secrets
  service:
    type: ClusterIP
finance-portal-settlement-management:
  config:
    db_database: central_ledger
    db_host: $release_name-centralledger-mysql
    db_password: oyMxgZChuu
    db_port: "3306"
    db_protocol: mysql
    db_user: central_ledger
  enabled: true
  imageCredentials:
    name: pull-secrets
  operatorSettlement:
    ingress:
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/rewrite-target: /
      enabled: false
      externalPath: /
      hosts:
        api: operator-settlement.local
      tls: null
    init:
      enabled: true
    service:
      port: 80
  service:
    type: ClusterIP
  settlementManagement:
    config:
      CENTRAL_LEDGER_SERVICE_ADMIN_PORT: "80"
      CENTRAL_LEDGER_SERVICE_NAME: $release_name-centralledger-service
      MIN_WINDOW_AGE_MS: "5000"
      OPERATOR_SETTLEMENTS_SERVICE_NAME: $release_name-finance-portal-settlement-management
      OPERATOR_SETTLEMENTS_SERVICE_PORT: "80"
      SETTLEMENTS_SERVICE_NAME: $release_name-centralsettlement
      SETTLEMENTS_SERVICE_PORT: "80"
    ingress:
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/rewrite-target: /
      enabled: false
      externalPath: /
      hosts:
        api: settlement-management.local
      tls: null
    init:
      command: mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database
        < /opt/settlement-management/init.sql
      enabled: true
      image:
        pullPolicy: Always
        repository: mojaloop/settlement-management
    service:
      port: 5000
global:
  config:
    affinity: {}
    nodeSelector: {}
    tolerations: []
ml-api-adapter:
  ml-api-adapter-handler-notification:
    config:
      central_services_host: $release_name-centralledger-service
      central_services_port: 80
      endpointSecurity:
        fspiopSourceSigningName: switch
        jwsSign: true
        jwsSigningKey: |-
          -----BEGIN PRIVATE KEY-----
          MIIEugIBADANBgkqhkiG9w0BAQEFAASCBKQwggSgAgEAAoIBAQDuB5HuHRH5BqI/
          VAC/ixm6lz8kJmigIB5jMxLrhB9cgqM+pb0O+is88VRHdxtw8eKG3nvrZYy/4nsJ
          z32qo4sOIMqHWTlZgbURVK4FAUEZ/qn63UnXJ1YVqT4UGg31BBj2c1JdlxG2t4JV
          DvzGrI2/ia/t4gYZCWrQz6a8OClBIaXu2t6EGFnysyS+1YDWtNIHO+z0lvAY9oad
          5MZPHN51o04eIoLO0tPfkz0+NDs4ECwUWuFAg8yo1hxnvSoERiCAwEbFgq2wDe1+
          oBhOpusd4VastD/TEqO8RhrwTodddOMKzapJPrQJuvTkrpkmkPOGE8DgIVHsULLR
          UYEMKvTVAgMBAAECgf94Meq77xrcFg8sSqe5eNHYP39tvaWyqE7mY/slvpNDH5Pl
          D/p21akS156E32BEJuYPk/TLiI2kMWjnvbHvNgr9tq8x3ToyTjtrg5clq8Hr1Ozo
          FnFiqkVHMFPFPQZEVU64CQPA33DixuWjMWS3YINfCAinErBry0PiNZGmuFi1K/wy
          e1z2F9WfG3IEBEe3NaeXwN55ZPJve0LtneJy3YqNwMg2FpPKBRHFV4lKTaU/hqhC
          NK6HQoEXN4Y9AQHn53Fl8n0iNO3qx0Tb7EuGNFmZ2xTlpDKAp8M+BA5Qm5YDkbd6
          OoxbGj2YxZncbG+RsvICtVMLqIytubvYREY9WGkCgYEA+K64xhJzWV3cGc8/90ko
          TryGMBj1ly5TNa1YyOQxl5z4Glc0aI8a+1vJGEAA+c/OEhMR8MRn3+QfV2LJOI5X
          V8Zo2Ger6Ln99LBddTh2HXL3M60cMgs8MYGuJ75g5R/UHnJBLo7NFyVddCOMT3hc
          AYSDN3XCw9ycqTw2/mJHB9kCgYEA9QiaCfTtnXdjMqLeYbp2uQEyyO6IZs956ym7
          sEQMwx/3wnlE9eiJ6iQxZfddkfOCyV/4MMAlYfpTBQFg7Cwb32Xrv3Ezy0HfZrnt
          5Nj4SVQWuOXJhdfC9dmTF+cvBeP+vC6PyDbikxdCo9+05chxS7I3MLxCue4qxy0C
          QfQIE10CgYA+kHacHng2u45sT9/f7t/dL0DzSNRAvL7iekIkCIURh8RDnDzrMVWw
          d18YYsHcF5PYqEOTN1aK1XGtIoVNXUJMKvaluy9c1a42qUhZ/WJ59jqLHbpCPOFf
          8yhFh3gJLQDIyCXt+K9Qa24fkfHy7Gz5VMVOZqohbJddXHDZfxAvwQKBgAdU947+
          tjF1BhHYz8Cq3KySfZuHj6tL4AEKYaRXlO4twbMe/9I/4AiShqvfZ/xbBfnSllGX
          Hkc9P0iyDt1iQH9BxHkZAQy+7tlbDORBHcTL8FYeAhawKxRCK2WWtFB/zvqAhire
          gY8XLhZLNlV91u4F6iLaL0DzAHKvRRcGH0u9AoGATNigZgbRRHJC21JucHeE0tP7
          HjGALvb4qn1o0oDHsxNY8i6vVNw9YeQpZaJhceuRHJTGcsq2dJSXpYwIhIVs/8RK
          bKbkEndra96L6FRZN8LYBl8zbRUPx39ojGeSbFliQv1eaoA/1DDhCiC2NlcSmbJl
          ecaG/Oyo/S+eM8nR7mc=
          -----END PRIVATE KEY-----
      kafka_host: $release_name-kafka
      kafka_port: 9092
      log_level: info
      max_callback_time_lag_dilation_milliseconds: 200
      max_fulfil_timeout_duration_seconds: 240
      security:
        callback:
          rejectUnauthorized: true
      send_transfer_confirmation_to_payee: false
    enabled: true
    ingress:
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
      enabled: true
      externalPath: /
      hosts:
        api: ml-api-adapter.local
      tls: null
    init:
      enabled: true
    metrics:
      enabled: true
    replicaCount: 1
    resources: {}
    service:
      externalPort: 80
      internalPort: 3000
      type: ClusterIP
    sidecar:
      config:
        log_level: info
      enabled: true
      image:
        pullPolicy: Always
        repository: mojaloop/event-sidecar
      livenessProbe:
        enabled: true
        initialDelaySeconds: 90
        periodSeconds: 15
      readinessProbe:
        enabled: true
        initialDelaySeconds: 120
        periodSeconds: 15
  ml-api-adapter-service:
    config:
      central_services_host: $release_name-centralledger-service
      central_services_port: 80
      kafka_host: $release_name-kafka
      kafka_port: 9092
      log_level: info
      max_callback_time_lag_dilation_milliseconds: 200
      max_fulfil_timeout_duration_seconds: 240
      security:
        callback:
          rejectUnauthorized: true
    enabled: true
    ingress:
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
      enabled: true
      externalPath: /
      hosts:
        api: dev2-ml-api-adapter.mojaloop.live
      tls: null
    init:
      enabled: true
      image:
        command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port;
          do echo waiting for Kafka; sleep 2; done;
        env: {}
        name: wait-for-kafka
        pullPolicy: Always
        repository: solsson/kafka
        tag: latest
    metrics:
      enabled: true
    replicaCount: 1
    resources: {}
    service:
      externalPort: 80
      internalPort: 3000
      type: ClusterIP
    sidecar:
      config:
        log_level: info
      enabled: true
      image:
        pullPolicy: Always
        repository: mojaloop/event-sidecar
      livenessProbe:
        enabled: true
        initialDelaySeconds: 90
        periodSeconds: 15
      readinessProbe:
        enabled: true
        initialDelaySeconds: 120
        periodSeconds: 15
ml-testing-toolkit:
  enabled: true
  ml-testing-toolkit-backend:
    config:
      user_config.json:
        CALLBACK_RESOURCE_ENDPOINTS:
          enabled: true
          endpoints:
          - endpoint: http://dev2-account-lookup.mojaloop.live
            method: put
            path: /parties/{Type}/{ID}
          - endpoint: http://dev2-quoting-service.mojaloop.live
            method: put
            path: /quotes/{ID}
          - endpoint: http://dev2-ml-api-adapter.mojaloop.live
            method: put
            path: /transfers/{ID}
        FSPID: testingtoolkitdfsp
        ILP_SECRET: secret
        TRANSFERS_VALIDATION_CONDITION: true
        TRANSFERS_VALIDATION_ILP_PACKET: true
        TRANSFERS_VALIDATION_WITH_PREVIOUS_QUOTES: true
    ingress:
      enabled: true
      hosts:
        dev2-testing-toolkit-specapi.mojaloop.live:
          paths:
          - /
          port: 5000
        dev2-testing-toolkit.mojaloop.live:
          paths:
          - /api/
          - /socket.io/
          port: 5050
  ml-testing-toolkit-frontend:
    config:
      API_BASE_URL: http://dev2-testing-toolkit.mojaloop.live
    ingress:
      enabled: true
      hosts:
        dev2-testing-toolkit.mojaloop.live:
          paths:
          - /
          port: 6060
ml-ttk-posthook-setup:
  config:
    testCasesPathInZip: testing-toolkit-test-cases-master/collections/hub/provisioning
    testCasesZipUrl: https://github.com/mojaloop/testing-toolkit-test-cases/archive/master.zip
  postInstallHook:
    enabled: true
    weight: -5
ml-ttk-posthook-tests:
  config:
    environmentName: DEV2
    testCasesPathInZip: testing-toolkit-test-cases-master/collections/hub/sequence
    testCasesZipUrl: https://github.com/mojaloop/testing-toolkit-test-cases/archive/master.zip
    testSuiteName: Test run after deployment
  configCreds: null
  configFileDefaults:
    slackFailedImage: https://mojaloop-oss-qa-results.s3-us-west-2.amazonaws.com/ttk-tests/assets/cancel-47588_640.png
    slackPassedImage: https://mojaloop-oss-qa-results.s3-us-west-2.amazonaws.com/ttk-tests/assets/accept-47587_640.png
  postInstallHook:
    enabled: true
    weight: -4
mojaloop-bulk:
  bulk-api-adapter:
    bulk-api-adapter-handler-notification:
      config:
        central_services_host: $release_name-centralledger-service
        central_services_port: 80
        kafka_host: $release_name-kafka
        kafka_port: 9092
        log_level: info
        objstore_uri: mongodb://mojaloop:password@$release_name-centralledger-obj:27017/mlos
        security:
          callback:
            rejectUnauthorized: true
      enabled: true
      image:
        command: '["node", "src/handlers/index.js", "handler", "--notification"]'
        pullPolicy: Always
        repository: mojaloop/bulk-api-adapter
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        enabled: false
        externalPath: /
        hosts:
          api: bulk-api-adapter-notification.local
        tls: null
      init:
        enabled: true
        image:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port;
            do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: Always
          repository: solsson/kafka
          tag: latest
        mongodb:
          command: mongo $mongouri --eval "db.adminCommand('ping')"
          name: wait-for-mongodb
          pullPolicy: Always
          repository: bitnami/mongodb
          tag: latest
      livenessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 90
        periodSeconds: 15
      metrics:
        config:
          defaultLabels:
            serviceName: bulk-handler-notification
          prefix: moja_
          timeout: 5000
        enabled: true
      readinessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 120
        periodSeconds: 15
      replicaCount: 1
      resources: {}
      service:
        externalPort: 80
        internalPort: 8088
        type: ClusterIP
    bulk-api-adapter-service:
      config:
        central_services_host: $release_name-centralledger-service
        central_services_port: 80
        kafka_host: $release_name-kafka
        kafka_port: 9092
        log_level: info
        objstore_uri: mongodb://mojaloop:password@$release_name-centralledger-obj:27017/mlos
        security:
          callback:
            rejectUnauthorized: true
      enabled: true
      image:
        command: '["node", "src/api/index.js"]'
        pullPolicy: Always
        repository: mojaloop/bulk-api-adapter
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        enabled: true
        externalPath: /
        hosts:
          api: dev2-bulk-api-adapter.mojaloop.live
        tls: null
      init:
        enabled: true
        image:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port;
            do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: Always
          repository: solsson/kafka
          tag: latest
        mongodb:
          command: mongo $mongouri --eval "db.adminCommand('ping')"
          name: wait-for-mongodb
          pullPolicy: Always
          repository: bitnami/mongodb
          tag: latest
      livenessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 90
        periodSeconds: 15
      metrics:
        config:
          defaultLabels:
            serviceName: bulk-service
          prefix: moja_
          timeout: 5000
        enabled: true
      readinessProbe:
        enabled: true
        httpGet:
          path: /health
        initialDelaySeconds: 120
        periodSeconds: 15
      replicaCount: 1
      resources: {}
      service:
        externalPort: 80
        internalPort: 8088
        type: ClusterIP
  bulk-centralledger:
    cl-handler-bulk-transfer-fulfil:
      config:
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: $release_name-centralledger-mysql
        db_idle_timeout_millis: 30000
        db_password: oyMxgZChuu
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_port: 9092
        log_level: info
        objstore_disabled: false
        objstore_uri: mongodb://mojaloop:password@$release_name-centralledger-obj:27017/mlos
      containers:
        api:
          image:
            command: '["node", "src/handlers/index.js", "handler", "--bulkfulfil"]'
            pullPolicy: Always
            repository: mojaloop/central-ledger
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          service:
            ports:
              api:
                externalPort: 80
                internalPort: 3001
                name: http-api
      enabled: true
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        enabled: false
        externalPath:
          api: /
        hosts:
          api: central-ledger-transfer-bulkfulfil.local
        tls: null
        type: http
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port;
            do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: Always
          repository: solsson/kafka
          tag: latest
        mongodb:
          command: mongo $mongouri --eval "db.adminCommand('ping')"
          name: wait-for-mongodb
          pullPolicy: Always
          repository: bitnami/mongodb
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database
            -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result'
            && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false;
            fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: Always
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: Always
          repository: bowerswilkins/awaitpostgres
          tag: latest
      metrics:
        config:
          defaultLabels:
            serviceName: central-handler-bulkfulfil
          prefix: moja_
          timeout: 5000
        enabled: true
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
    cl-handler-bulk-transfer-prepare:
      config:
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: $release_name-centralledger-mysql
        db_idle_timeout_millis: 30000
        db_password: oyMxgZChuu
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_port: 9092
        log_level: info
        objstore_disabled: false
        objstore_uri: mongodb://mojaloop:password@$release_name-centralledger-obj:27017/mlos
      containers:
        api:
          image:
            command: '["node", "src/handlers/index.js", "handler", "--bulkprepare"]'
            pullPolicy: Always
            repository: mojaloop/central-ledger
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          service:
            ports:
              api:
                externalPort: 80
                internalPort: 3001
                name: http-api
      enabled: true
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        enabled: true
        externalPath:
          api: /
        hosts:
          api: central-ledger-transfer-bulkprepare.local
        tls: null
        type: http
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port;
            do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: Always
          repository: solsson/kafka
          tag: latest
        mongodb:
          command: mongo $mongouri --eval "db.adminCommand('ping')"
          name: wait-for-mongodb
          pullPolicy: Always
          repository: bitnami/mongodb
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database
            -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result'
            && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false;
            fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: Always
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: Always
          repository: bowerswilkins/awaitpostgres
          tag: latest
      metrics:
        config:
          defaultLabels:
            serviceName: central-handler-bulkprepare
          prefix: moja_
          timeout: 5000
        enabled: true
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
    cl-handler-bulk-transfer-processing:
      config:
        db_acquire_timeout_millis: 30000
        db_connection_pool_max: 30
        db_connection_pool_min: 10
        db_create_retry_interval_millis: 200
        db_create_timeout_millis: 30000
        db_database: central_ledger
        db_debug: false
        db_destroy_timeout_millis: 5000
        db_driver: mysql
        db_host: $release_name-centralledger-mysql
        db_idle_timeout_millis: 30000
        db_password: oyMxgZChuu
        db_port: 3306
        db_reap_interval_millis: 1000
        db_type: mysql
        db_user: central_ledger
        forensicloggingsidecar_disabled: true
        forensicloggingsidecar_host: forensicloggingsidecar-ledger
        forensicloggingsidecar_port: 5678
        kafka_host: $release_name-kafka
        kafka_port: 9092
        log_level: info
        objstore_disabled: false
        objstore_uri: mongodb://mojaloop:password@$release_name-centralledger-obj:27017/mlos
      containers:
        api:
          image:
            command: '["node", "src/handlers/index.js", "handler", "--bulkprocessing"]'
            pullPolicy: Always
            repository: mojaloop/central-ledger
          livenessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          readinessProbe:
            enabled: true
            httpGet:
              path: /health
            initialDelaySeconds: 60
            periodSeconds: 15
          service:
            ports:
              api:
                externalPort: 80
                internalPort: 3001
                name: http-api
      enabled: true
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        enabled: false
        externalPath:
          api: /
        hosts:
          api: central-ledger-transfer-bulkprocessing.local
        tls: null
        type: http
      init:
        enabled: true
        kafka:
          command: until ./bin/kafka-broker-api-versions.sh --bootstrap-server $kafka_host:$kafka_port;
            do echo waiting for Kafka; sleep 2; done;
          env: {}
          name: wait-for-kafka
          pullPolicy: Always
          repository: solsson/kafka
          tag: latest
        mongodb:
          command: mongo $mongouri --eval "db.adminCommand('ping')"
          name: wait-for-mongodb
          pullPolicy: Always
          repository: bitnami/mongodb
          tag: latest
        mysql:
          command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database
            -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result'
            && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false;
            fi; do echo waiting for MySQL; sleep 2; done;
          name: wait-for-mysql
          pullPolicy: Always
          repository: mysql
          tag: latest
        psql:
          name: wait-for-postgres
          pullPolicy: Always
          repository: bowerswilkins/awaitpostgres
          tag: latest
      metrics:
        config:
          defaultLabels:
            serviceName: central-handler-bulkprocessing
          prefix: moja_
          timeout: 5000
        enabled: true
      replicaCount: 1
      resources: {}
      service:
        annotations: {}
        external:
          enabled: false
          ip: 10.0.2.2
          ports:
            api:
              externalPort: 3001
              name: http-api
        type: ClusterIP
  enabled: true
  mongodb:
    additionalLabels: {}
    affinity: {}
    clusterDomain: cluster.local
    configmap: null
    enabled: true
    image:
      pullPolicy: Always
      registry: docker.io
      repository: bitnami/mongodb
      tag: 4.0.3
    livenessProbe:
      enabled: true
      failureThreshold: 6
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    metrics:
      enabled: false
      image:
        pullPolicy: IfNotPresent
        registry: docker.io
        repository: forekshub/percona-mongodb-exporter
        tag: latest
      podAnnotations:
        prometheus.io/port: "9216"
        prometheus.io/scrape: "true"
      serviceMonitor:
        additionalLabels: {}
        alerting:
          rules: {}
        enabled: false
    mongodbDatabase: mlos
    mongodbEnableIPv6: true
    mongodbExtraFlags: []
    mongodbPassword: password
    mongodbUsername: mojaloop
    nameOverride: centralledger-obj
    nodeSelector: {}
    persistence:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: false
      size: 8Gi
    podAnnotations: {}
    podLabels: {}
    readinessProbe:
      enabled: true
      failureThreshold: 6
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    replicaSet:
      enabled: false
      name: rs0
      pdb:
        minAvailable:
          arbiter: 1
          primary: 1
          secondary: 1
      replicas:
        arbiter: 1
        secondary: 1
      useHostnames: true
    resources: {}
    securityContext:
      enabled: true
      fsGroup: 1001
      runAsUser: 1001
    service:
      annotations: {}
      port: 27017
      type: ClusterIP
    tolerations: []
    usePassword: true
mojaloop-simulator:
  defaultProbes:
    livenessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 3
      periodSeconds: 30
      successThreshold: 1
      timeoutSeconds: 10
    readinessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 3
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 5
  defaults:
    affinity: {}
    config:
      cache:
        enabled: true
        image:
          pullPolicy: Always
          repository: redis
          tag: 5.0.4-alpine
        livenessProbe:
          enabled: true
          failureThreshold: 3
          initialDelaySeconds: 3
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          enabled: true
          failureThreshold: 3
          initialDelaySeconds: 3
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
      imagePullSecretName: dock-casa-secret
      schemeAdapter:
        env:
          ALLOW_TRANSFER_WITHOUT_QUOTE: true
          ALS_ENDPOINT: dev2-account-lookup.mojaloop.live
          AUTO_ACCEPT_PARTY: true
          AUTO_ACCEPT_QUOTES: true
          BULK_QUOTES_ENDPOINT: dev2-quoting-service.mojaloop.live
          BULK_TRANSFERS_ENDPOINT: dev2-bulk-api-adapter.mojaloop.live
          CACHE_PORT: 6379
          CHECK_ILP: false
          ENABLE_OAUTH_TOKEN_ENDPOINT: false
          ENABLE_TEST_FEATURES: true
          EXPIRY_SECONDS: 60
          ILP_SECRET: Quaixohyaesahju3thivuiChai5cahng
          IN_CA_CERT_PATH: ./secrets/inbound-cacert.pem
          IN_SERVER_CERT_PATH: ./secrets/inbound-cert.pem
          IN_SERVER_KEY_PATH: ./secrets/inbound-key.pem
          INBOUND_LISTEN_PORT: 4000
          INBOUND_MUTUAL_TLS_ENABLED: false
          JWS_SIGN: true
          JWS_SIGN_PUT_PARTIES: true
          JWS_SIGNING_KEY_PATH: /jwsSigningKey.key
          JWS_VERIFICATION_KEYS_DIRECTORY: /jwsVerificationKeys
          LOG_INDENT: 0
          MUTUAL_TLS_ENABLED: false
          OAUTH_CLIENT_KEY: null
          OAUTH_CLIENT_SECRET: null
          OAUTH_REFRESH_SECONDS: 3600
          OAUTH_TOKEN_ENDPOINT: null
          OAUTH_TOKEN_ENDPOINT_CLIENT_KEY: test-client-key
          OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET: test-client-secret
          OAUTH_TOKEN_ENDPOINT_LISTEN_PORT: 6000
          OUT_CA_CERT_PATH: ./secrets/outbound-cacert.pem
          OUT_CLIENT_CERT_PATH: ./secrets/outbound-cert.pem
          OUT_CLIENT_KEY_PATH: ./secrets/outbound-key.pem
          OUTBOUND_LISTEN_PORT: 4001
          OUTBOUND_MUTUAL_TLS_ENABLED: false
          PEER_ENDPOINT: IGNORE
          QUOTES_ENDPOINT: dev2-quoting-service.mojaloop.live
          REJECT_EXPIRED_QUOTE_RESPONSES: false
          REJECT_EXPIRED_TRANSFER_FULFILS: false
          REJECT_TRANSFERS_ON_EXPIRED_QUOTES: false
          REQUEST_PROCESSING_TIMEOUT_SECONDS: 30
          SCHEME_NAME: default
          TEST_LISTEN_PORT: 4002
          TRANSACTION_REQUESTS_ENDPOINT: dev2-transaction-requests-service.mojaloop.live
          TRANSFERS_ENDPOINT: dev2-ml-api-adapter.mojaloop.live
          USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP: false
          VALIDATE_INBOUND_JWS: false
          VALIDATE_INBOUND_PUT_PARTIES_JWS: false
          WS02_BEARER_TOKEN: 7718fa9b-be13-3fe7-87f0-a12cf1628168
          WSO2_AUTH_FAILURE_REQUEST_RETRIES: "0"
        image:
          pullPolicy: Always
          repository: mojaloop/sdk-scheme-adapter
        livenessProbe:
          enabled: true
          failureThreshold: 3
          initialDelaySeconds: 3
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          enabled: true
          failureThreshold: 3
          initialDelaySeconds: 3
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
      service:
        ports:
        - name: inboundapi
          port: 4000
          protocol: TCP
          targetPort: inboundapi
        - name: reportapi
          port: 3002
          protocol: TCP
          targetPort: reportapi
        - name: testapi
          port: 3003
          protocol: TCP
          targetPort: testapi
        type: ClusterIP
      simBackend:
        env:
          CA_CERT_PATH: ./secrets/cacert.pem
          FEE_MULTIPLIER: 0.05
          HTTPS_ENABLED: false
          LOG_INDENT: 0
          MODEL_DATABASE: ./model.sqlite
          MUTUAL_TLS_ENABLED: false
          REPORT_API_LISTEN_PORT: 3002
          RULES_FILE: ./rules.json
          SERVER_CERT_PATH: ./secrets/servercert.pem
          SERVER_KEY_PATH: ./secrets/serverkey.pem
          SIMULATOR_API_LISTEN_PORT: 3000
          SQLITE_LOG_FILE: ':memory:'
          TEST_API_LISTEN_PORT: 3003
        image:
          pullPolicy: Always
          repository: mojaloop/mojaloop-simulator
        livenessProbe:
          enabled: true
          failureThreshold: 3
          initialDelaySeconds: 3
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          enabled: true
          failureThreshold: 3
          initialDelaySeconds: 3
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
    nodeSelector: {}
    resources: {}
    tolerations: []
  enabled: true
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
      nginx.org/server-snippet: proxy_ssl_verify off;
    enabled: true
    ingressPathRewriteRegex: /
    tls: []
  replicaCount: 1
  simulators:
    payeefsp:
      config:
        schemeAdapter:
          secrets:
            jws:
              privateKey: |-
                -----BEGIN PRIVATE KEY-----
                MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDMu126miewCUCT
                7f49B0SyCPFGzmqGSs9rTPbk1se+BBhqfhsfkZj6cRRfrlg3rme6we0Ib2AF5TQL
                noSBlDAimQcNOHXrqpAY/B0l/mgyUwmfv0NJ3UjZuCFuw3HRrU/oSUfXoDITC+Bi
                120w4FY2B/vPn+1iC/tsaCayneoaV/Sedq7H9+smEnQfGl3p5QJp/B2Ws3Bz1HqI
                IoxLEaO9VMeDHQPvNJn/7g9erqA5vIhmgLS46worOVjdRLH2SECH73qp8Wg0rJ8Y
                eW2kQ8kuY4uHcG3MO6drYrC011U0ZyM90KV7dv2Y0h2FHlpn9s/pmb630m5ELpnB
                T/pYTLcXAgMBAAECggEADqk6Qz3SgBeMMYEWYZ4ZdsW6Ktpm+Xqg/kDy4JywOB9z
                SikBXeeKH3Z6ltwq2BicDV020Wb8Zt+s3vTOmLhDzC544/hPmtKfjWfR2eHX6gaq
                m+8ml+20pQFmb4Kn2MlC/Xzwm/SOXBvPyUmTua95rQExsK12DT0+F4YhLfhYsTh2
                HfkEzdFW4rrd+9ddKG1ZANS4ZaiMyzhtvUWeEBypBtVf+kBk+51t9pLCdjuynb8I
                WylSDhikT3/YQ/3g/Sz3SMp1u4x0GQe9FWYrnPzzp5LnM5fm49v8JWVHUvd0TOi0
                dQV+LYlgSD38YPpi4iKQSh0Zf0EBfbA83GsX2ArJ7QKBgQDmvcA6PqPo0OV/7RKY
                JuziA3TpucL8iVM1i7/Lv6+VkX88uDvEjwLoNAiYcgIm/CMK7WAwA+Dzn4r38EHB
                BKF4KRhP0qQS0KLXsd0tdsmAB0In7+cbKL4ttqNUP98xZAkTLJq9PXqTKN0qtyw4
                SfIsVMjDGoeSdWHObZYbGKICfQKBgQDjJLwolDrVX29V4zVmxQYH5iN+5kwKXHXj
                suHBrW02Oj/GQFh3Xj6JQi3mzTWYhHwhA4pdaQtNYqTaz9Ic/O1VNPic2ovtg+cd
                7sh86qdQ4QZYhN3RT4oX///u6+UK90llh9hEBo3GuZ4X47tuByNtD4SFAlULrkSm
                fW4XaC3gIwKBgGil6HfCDx65F00UnVlKVicPQEf8ivVz5rwjPIJQ1nZ0PYuxVtIH
                tl7PspJJKra5pb7/957vM2fqlOFsIrZCvmS75p3VP7qUyzYeIdzLwgmBwTxRrrP/
                n3kmGx9LtJM29nKuySNIrb3uS5hi6PhCeUYn0cHC13fSKuCvjOOPIXMVAoGBAJg+
                CPdR0tUs8Byq+yH0sIQe1m+5wAG50zJYtUPxD6AnDpO8kQ8A1f19o/JsXJ3rPp+K
                FfVh8LdfhIs8e+H+DLztkizftqXtoLzJTQuc46QsDurJszsVisNnTI1BAvWEpWct
                0+BUXDZ0NuhgNUIb+rygh/v2gjYgCddlfqKlqwntAoGBAM5Kpp5R0G0ioAuqGqfZ
                sHEdLqJMSepgc6c7RC+3G/svtS2IqCfyNfVMM3qV5MY3J7KnAVjGOw2oJbXcPLXa
                uutsVVmPx2d/x2LZdc8dYYcdOQZvrUhmALhAPXM4SRujakxh+Uxi1VOiW+fZL8aW
                uu1pxuWD0gTJxFkp6u4YIAhw
                -----END PRIVATE KEY-----
              publicKey: |-
                -----BEGIN PUBLIC KEY-----
                MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAzLtduponsAlAk+3+PQdE
                sgjxRs5qhkrPa0z25NbHvgQYan4bH5GY+nEUX65YN65nusHtCG9gBeU0C56EgZQw
                IpkHDTh166qQGPwdJf5oMlMJn79DSd1I2bghbsNx0a1P6ElH16AyEwvgYtdtMOBW
                Ngf7z5/tYgv7bGgmsp3qGlf0nnaux/frJhJ0Hxpd6eUCafwdlrNwc9R6iCKMSxGj
                vVTHgx0D7zSZ/+4PXq6gObyIZoC0uOsKKzlY3USx9khAh+96qfFoNKyfGHltpEPJ
                LmOLh3BtzDuna2KwtNdVNGcjPdCle3b9mNIdhR5aZ/bP6Zm+t9JuRC6ZwU/6WEy3
                FwIDAQAB
                -----END PUBLIC KEY-----
      ingress:
        hosts:
        - dev2-sim-payeefsp.mojaloop.live
    payerfsp:
      config:
        schemeAdapter:
          secrets:
            jws:
              privateKey: |-
                -----BEGIN PRIVATE KEY-----
                MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCg9eU66hg4ZAE6
                jM4U8ylXQwUz9cdmzS3JyW+1bbgv77peMKSU/wFsi4QRwmbrYze9baFnGCKnS75E
                vCchib5vJxp3MDWzi/TGxmzgWdJRzkyCiI5C6dCgVL71MjsFgN3TN63wEf5sEU2I
                eoJ8yXJM0pUG9f9NO7p/IGliDmt6C7EA7D9kQWigufmX0ZTVNKI07fKwC/AEKLp7
                kx99pvsCq8m184EEL15Q/NhA7R/5zKoHvmJa6Jd7tM0i0xn8IKOkNVFu3YIafAEC
                QWQwRbanFEeRc3tH3bEoYM8c74r+W+YxCG7nUf16XCk132XVffbHVl+wFgo18YB/
                sAJmcbePAgMBAAECggEAGQGKnsf+gkg7DqMQYx3Rxt5BISzmURjAK9CxG6ETk9Lt
                A7QP5ZvmVzwnhPDMN3Z/Et1EzXTo8U+pnBkVBTdWkAMlr+2b8ixklzr9cC9UJuRj
                a4YWf9u+TyJLVmF63OSD0cwdKCZLffOENZc+zW8oZDn08BNomdGVLCnXZWXzGY8X
                KaJTJr29jEgkKOqFXdAHrsmj7TBtqSLZKx2IHdCmi05+5JCxVLPgnDiCicZ9zEii
                yWw57Q1migFIcw6ZQP4RyjgH1o70B+zo3OL7IQEirE17GUgK16XD8xi8hWCYTj5n
                xOz9yfVfPuYom/9Xbm5kYJZKE2HOZ3Lg8pUnWncuNQKBgQDbaOoACQPhVxQK1qYR
                RbW0I5Rn0EDxzsFPEpu3eXHoIYGXi8u/ew9AzFmGu+tKYJV5V4BCXo5x2ddE+B8B
                dXhyHLGfeV8tWKYKBpatolVxxKDL/9fnxoGIAO9cc91ieOm5JxmKscCVP1UnOXHZ
                uomSfAbGQwYDtMd2bJKkE1z0qwKBgQC7zacuv1PMaDFksHuNNRG+aZ74pJ77msht
                vJoKyaQcktD0xmIXhFfJvK4cclzG7s5jxCsu2ejimgmfVzgXlLEMrJFvSdFkD2SS
                gGqoxq5c9g8ssvt7xwr7aJ+VYYWTWRzJrOUny+99UbwHedu0EHL1BYILwy67Lium
                sgUeeCEgrQKBgGv+7f7qcRB/jgvvr3oc990dDjUzGmRrQlcrb54Vlu2NYH45fyZW
                6iEY9JAO+zd25tv9J9KDPFXpxb3a61gKfCie2wcF9MUbN08EAzKgDrKa+BKxcZJR
                8PwCic7V8QhBP7m09yt/Zq2PqNhPvCxRVtnVVnhMES/N0cgGlP9R0JVVAoGAHU2/
                kmnEN5bibiWjgasQM7fjWETHkdbbA1R0bM59zv+Rnz/9OlIqKI5KVKH7nAbTKXoI
                iuzxi7ohWj2PwQ4wehvLLaRFCenk9X8YJXGq71Jtl7ntx6iNLCFtFS/8WbuD5GwX
                7ZfCrLk+L6RyBayzY0wSuKch+Y8AvKf2aISyFpkCgYEAjSfEjz9Cn+27HdiMoBwa
                +fyyoosci/6OBxj/WTKvV6KUYLBfFoAYpb9rqrbvnfyyc0UiAYQeMJAOWQ1kkzY4
                zXs63iPQi2UeGPJZ7RsT+31DSaG9YiQdrInsUrlm8hi1C7Pg/NNt6Y1G0WhWYrvF
                iNK0yCENMhSoOTtbT9tmGi0=
                -----END PRIVATE KEY-----
              publicKey: |-
                -----BEGIN PUBLIC KEY-----
                MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoPXlOuoYOGQBOozOFPMp
                V0MFM/XHZs0tyclvtW24L++6XjCklP8BbIuEEcJm62M3vW2hZxgip0u+RLwnIYm+
                bycadzA1s4v0xsZs4FnSUc5MgoiOQunQoFS+9TI7BYDd0zet8BH+bBFNiHqCfMly
                TNKVBvX/TTu6fyBpYg5reguxAOw/ZEFooLn5l9GU1TSiNO3ysAvwBCi6e5Mffab7
                AqvJtfOBBC9eUPzYQO0f+cyqB75iWuiXe7TNItMZ/CCjpDVRbt2CGnwBAkFkMEW2
                pxRHkXN7R92xKGDPHO+K/lvmMQhu51H9elwpNd9l1X32x1ZfsBYKNfGAf7ACZnG3
                jwIDAQAB
                -----END PUBLIC KEY-----
      ingress:
        hosts:
        - dev2-sim-payerfsp.mojaloop.live
    testfsp1:
      config:
        schemeAdapter:
          secrets:
            jws:
              privateKey: |-
                -----BEGIN PRIVATE KEY-----
                MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDZHci4QOmoO2xL
                3p6YjS90Iml5v+WcLFHY3DnHpncaML09EUInaCxLZmrvQ1pRDnJauutn0Nnw+OAJ
                ep+1Qobja4WyJssWk3T0iNC5kIO4CQJ0SMyCb7GJ6zjtqNHOXp685zQKWRAFlUbJ
                uX1ECvo1FMU5iRiMnTFLQw2R9GQOI4S7kED9cpvmgtvJUyMbK8uDJLWDjXHh8D4J
                xvk8Q1qH12qQUnePbXxGz5sbK2tWqusIKNXUWIj5j1iMq5NFGjtT+NwYct8RzthF
                w/ZT2izFDEW+EfFHtbR7vh8BTwHxggnPCNpC+sSH1IlFzYhmyHoR0EBdeZuTiwcr
                KGhfRvJRAgMBAAECggEAJ1r6QMfncsq+sSv71Iw3D1aThvGtZbc06NnWkWWPzkwK
                aXDg7HK6ILrCZHdxfiLfwKmENU/KyZ7bQWycWYdjGwMo+2eDxaZZ+193ckOLVMcx
                TjHJ/FTRuj3MlmvVCBLntDc2nC+Ts2dhKvy4A6b3vrpym6DJtedigZF4er3xiww4
                a9XV7vr5xDEjf4kFWWGtEDuF+4YAEBbmD76cRyF5Hv8eoU0MELCelHqL1jL7W6/5
                sTfbTxRIFO3wmJhW2ZRRyD9EN5lmP9dROxIE4H3tRBihUJVDBA0IXGiE2Z+NjOUJ
                ycbZVT0LMa3XeYKdrhHRGFafWPSPIJCyQOIK33V6BwKBgQD/TjS9sXJ9hXu53bM1
                8/X780kUp66GQF5V+QhMAVW/6BdQ1Fkhv6AuJZl+FujBRszSdl96thILy87qkP+n
                dUDxXn5B2B7MQ1K7uwmKrYW087BfDPa+3R7wKJ4fndIhrqANGy1KCfwhe8GJEzpP
                vlI4JeInrgMXyQgZgj+65zE22wKBgQDZtPu1MD8SJVvUYXgP1u0XqJWZDo5dndI1
                KA7UlefbBqqtZ87EP7zxcTZHaRLuMBPEppH4+K4NsopnZh4rD+bV/NOJ/rI6PMZe
                zIkjLYE+KTgvM7pvwDy+q08fDYnucS4xnHOjLzw8/l4ptJ1uigXkx8PSl94118+5
                h4Ac4ZL1QwKBgQCk/3MggXT/4GvU9I4kuVVpjpLVkYU+aI1PPNH65QX5L9MZvxMX
                t5ObH1uy3LVybAJlpnEQimjhTMeeWzWOkT32gF5SyY0l8AChKUECaiC2kKOU2nkB
                Y0Diby26OzIZ6JSxw7WiWw+iyCuNHmsaLGNQvFML1+9RyO++JKpxbYcl7wKBgBbd
                Vi5CYe1i9REKJ5TqSr5YW1XW3Ibig2hHy77x+4baXWSW6XVdCFgHPt8jHvTbIche
                gig23fjcToLri7GUGvdQdVsh39AT//WG38RNDCzeIWN7uFHyS67uyQGG53yecG6P
                cumplVcGlBcnO/2XC2VqwZtFjfXzs4JVw9PEsS2HAoGANdd6dNf7ETpBgAlesWgS
                73JAElMGkQH42dqejEzMa5CXUCPLQdqHCgxaT4M25c6F8tUhb2qSvV+Cl+zVkqlA
                CpocM6+FV4oYNLIJUtNJj+XLbDkV2XjXYzuzcGlDd9HAv6hzg0zHOhN6ETsxqIx7
                dvV4dxN19eDirp9AVl6k3Ew=
                -----END PRIVATE KEY-----
              publicKey: |-
                -----BEGIN PUBLIC KEY-----
                MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2R3IuEDpqDtsS96emI0v
                dCJpeb/lnCxR2Nw5x6Z3GjC9PRFCJ2gsS2Zq70NaUQ5yWrrrZ9DZ8PjgCXqftUKG
                42uFsibLFpN09IjQuZCDuAkCdEjMgm+xies47ajRzl6evOc0ClkQBZVGybl9RAr6
                NRTFOYkYjJ0xS0MNkfRkDiOEu5BA/XKb5oLbyVMjGyvLgyS1g41x4fA+Ccb5PENa
                h9dqkFJ3j218Rs+bGytrVqrrCCjV1FiI+Y9YjKuTRRo7U/jcGHLfEc7YRcP2U9os
                xQxFvhHxR7W0e74fAU8B8YIJzwjaQvrEh9SJRc2IZsh6EdBAXXmbk4sHKyhoX0by
                UQIDAQAB
                -----END PUBLIC KEY-----
      ingress:
        hosts:
        - dev2-sim-testfsp1.mojaloop.live
    testfsp2:
      config:
        schemeAdapter:
          secrets:
            jws:
              privateKey: |-
                -----BEGIN PRIVATE KEY-----
                MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC/uTQyrLSNJcWk
                cP39r5iXl2Nerod3IL4GxID+xEpzMQEpDJbyYQlUgsAqQ6JtbMrt75ImNA9sWOCq
                JRm9Ejn6CAeRIlcRXbwGLawXnwDXmxCPBpKQTa8HAsAvkZ+1KZqjRBKjNJ9D5EXD
                Y36WhEZh51dmlEyxgWvW4DWpq9wGOiPsmo+kgPtRpOBfDAdZtX6Pa6FB+i2pG85D
                kpObHkclr5WM+77EALuaZwv53GZ4GlskkPkuLwHyCAlcYlST4SfpdIiBmRDq8q8L
                0fJqwTpZktdT4kmgKnbCQI81NHHM8TY8aeUjRrhk/b/L/bJpxzgdAYGEQxz5JVP9
                VJloxL4BAgMBAAECggEAGZJlDy5AbcQgOrj0c7IIXw3K6/3I5T+JgQMUNobtbDRY
                1IYQmxcMxMgkw+5d+4zjez11R6GxffDT1HXa20BTWdFY2weSx+bx9XwBhGwJk3hk
                CsOkaFloMz3vbtjUTbhVHxotBzY1WPuZP4CliYNulM/jtTOqEBH0VYZ1ueIJmI3N
                EtSUO1IAYO8SyP4sozLpAIfp4+ftML4HVCiD6aKdVl38S3PX65j1Q3x9Jz3GBSBo
                9UA6cQHRoCMrujeIAeY2uUCevhdm75xoywVFSCpRCguFxIX5GbvISJRL8XFNhDHl
                OY7yHSOJSmnedFh8oRwBDKkoxhwb+nn1wjf4FXdY/QKBgQDgRuqPx2ou25vKOnx1
                G/xvvMLWzB9KF2wqqFP4uNv0dI9qJ7zCf1ifneAv/CEU+JwX5KJknUtanCpWZare
                vlWSH0UItgs0cgEKjKFwYzXIlc06TffkFz+UlGlLXSFD3BR59xmOY/ZwXlgPz4iW
                6TefXvrU+jNGigJVIYEMzBaCLQKBgQDa14VuCOjMa0YtzAd1cQ2jd8dYovnko/J0
                OQtdx9WoEdeKsCJ8cwVJxSOF4739i0h2Bxa/lLI6mn9VuBKddBLThO1+vBCQ1SCi
                rQGYy1JUchy7OTBo1pEMAQ9AsFGXDMg4/uWdM18O9JwDHAIKsj+vGP+NTgVSO5Cq
                lO6QgG+TpQKBgHsKLNDoQ/alAFj3sSPGUL00P2f74AaTxwG4CylesTzxXWSNnF7P
                4lzfDgkFN1j78xaglf7A1IBHQGrZp94/aU6a3RKkXI1PJgcVk9PGedErbcXY1HBL
                2NO4f/Oaig9ig9FNoLWfXanT+FfkMTkphRxnzRBemxbNy+3MTbIpnQeZAoGBAMSF
                yKAAxjZUm2gjEguoI6xJsy3o5WoqxF8Unx1viHHu29YCyGVj0TrnGzhwRTx8KO08
                /nO677bq6TCsJaNaClICzFgEQQgfLLiJjqaM5/lHpH+JIuzyyryx8uWPsSVpaCCu
                3rol2NaQWc39B+RdIA148H0PtH2dWhOlvPrtK8W1AoGBAMza6OkhyCIzSTKVSWuF
                dvIUbj6jjFLuRapusG+JX+B12Upa6Z3lOHe7e0VWq3rgTktnfqf2gO55b+3o30o4
                ww+sGmRdqMTuPCCZx41XT/v0loYm+ik1GAJz1TUFDDtXlouD2QCDJJfZqPIQf29/
                bFt8u+844ddF0+j5r5Q2aXdR
                -----END PRIVATE KEY-----
              publicKey: |-
                -----BEGIN PUBLIC KEY-----
                MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv7k0Mqy0jSXFpHD9/a+Y
                l5djXq6HdyC+BsSA/sRKczEBKQyW8mEJVILAKkOibWzK7e+SJjQPbFjgqiUZvRI5
                +ggHkSJXEV28Bi2sF58A15sQjwaSkE2vBwLAL5GftSmao0QSozSfQ+RFw2N+loRG
                YedXZpRMsYFr1uA1qavcBjoj7JqPpID7UaTgXwwHWbV+j2uhQfotqRvOQ5KTmx5H
                Ja+VjPu+xAC7mmcL+dxmeBpbJJD5Li8B8ggJXGJUk+En6XSIgZkQ6vKvC9HyasE6
                WZLXU+JJoCp2wkCPNTRxzPE2PGnlI0a4ZP2/y/2yacc4HQGBhEMc+SVT/VSZaMS+
                AQIDAQAB
                -----END PUBLIC KEY-----
      ingress:
        hosts:
        - dev2-sim-testfsp2.mojaloop.live
    testfsp3:
      config:
        schemeAdapter:
          secrets:
            jws:
              privateKey: |-
                -----BEGIN PRIVATE KEY-----
                MIIEuwIBADANBgkqhkiG9w0BAQEFAASCBKUwggShAgEAAoIBAQCZKXDVFI703fvK
                SdDnFukWC6EbQipNSg+MzzZvt+E/ynkBO35QK4E9Z3RgOWS74GxMI+K+h6k4+3Z0
                XQJjJAj8dPeserCMnTgThQ76fZ5kDi3YtdoFoxvNVQhTVBGe4soocb/H6XKoUXVH
                qDI4J+KiW4t/bz3OnVRhHIzCdnM5kGFQnXchWgL3ymhueU8m2d6532GqsEbhC9dZ
                D3cbo757UZAn4TZUgiTVSlY07e4nUulUvVV0+pQmjZMwBQNxonBVkFQWuitrbMVh
                ZYEYUL5tB07OAfN/p2LcxumCJ49dGqLvC0VyMsGQkZ3dS9kNKx/sP67xlSl9YeCI
                PN95wxcFAgMBAAECggEAB+EQ4h/89O3e+SGpAPiZTxOUFAkEyTIz1CR6kIstNhEB
                4iVYzykBV2D/3YZ9cOxk/r1N3WgGUggCGlYlPEtO1UJk8g//8jaRNEYWZp582nkR
                mEWjjKWUOR8pu0JYdUTM0Va2CYrayUMGoPXZzNtPiCw5q0C3pycRDdngQMaKgra7
                kj0pOITHpgN4bCPeutKAX514aD+nobJ4UOjcWcAemuoM4ZSl/tqZziXAHi3DjuIL
                jTfeBKae7tViUuQPwxcCNffTAsKAlI0BaD10fb1gzwLZkY4E8LThlIR3Pk6BdPlA
                ab0Gu9rtgIbPJnNFp5QWMVelW+2WF2qWfszu2HloFQKBgQDLhLh8xsP2ioGWLyFl
                JKGDzyNYn+MC3ZWaNttsprl+hBXRMGXfMDlGSJ0WAHYDgjMJIcZqUmPGGchQkwC0
                QnTeRbFLSlzVormqYVxJqrlNs3t0KRqarq1S3aFEPQI/aLBjsuXFlHegdpLJHQW6
                exZvU4+ShS+LMZeu/ywqsUIqgwKBgQDAqG3mFmY3NYZLAA2YWsxU2bQyHgqnK7CJ
                XZxZ+FE+2Xo2EqAMM3fJj5IShlCnjE7ciMt1hyigKTZlKIiO7iOCAiZ0P4XOZuOA
                p3wQEFCjfl7mjTXj75LzWTla+92B1t2tHhYXdd1y3M3yci8UK76MxCZrK/ol4oN5
                UhEHQaeh1wJ/XQNLTbuJ1CN5Fip0GMWlC5ifjuGD3stmlBR+NCn+nNPBJNn5tQdV
                JcoKAQQ062WV7ZaCGBWPg/pEko6cw8Wbo/o2DTLvOrQkJrpYc1KTXe+pfG1Mu2UZ
                0cV47rbzUAeIlggs+x/fjHakn0WkWJXoqviFpXE5SWRg7pmwldJtawKBgQCEj9/+
                n475kgSzenfgSympgJqymWUvHaq8+gJpDampmy6yIiKqAof70qPpxy2b+7kPmbiV
                R8i2W2UoObmsz0LzY9NdzY+eM8F6dsOwsekqdfuKm8Nm8SOl+dCzP/ZsLpIdWkRN
                JDaZoEC8/8BRGsBkT1s4Bux6QN/CDKvW2GAlxQKBgDcTDbSxhmyMjDJr5p1oy4re
                Ju0bMtFyf95B2mqMw781JoKxXHfHNBwtHgku1JHSKtTRCH7w4uoLrN+dDXd68Q6b
                qmJ4KNL+8ac2sJWOyjWP2bB62/Yqx/XcFJXHbfnvSEXRGav+D/aq3xkmRDwa8wqM
                zmVQaekRl4XbZA8+Fvgw
                -----END PRIVATE KEY-----
              publicKey: |-
                -----BEGIN PUBLIC KEY-----
                MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmSlw1RSO9N37yknQ5xbp
                FguhG0IqTUoPjM82b7fhP8p5ATt+UCuBPWd0YDlku+BsTCPivoepOPt2dF0CYyQI
                /HT3rHqwjJ04E4UO+n2eZA4t2LXaBaMbzVUIU1QRnuLKKHG/x+lyqFF1R6gyOCfi
                oluLf289zp1UYRyMwnZzOZBhUJ13IVoC98pobnlPJtneud9hqrBG4QvXWQ93G6O+
                e1GQJ+E2VIIk1UpWNO3uJ1LpVL1VdPqUJo2TMAUDcaJwVZBUFrora2zFYWWBGFC+
                bQdOzgHzf6di3MbpgiePXRqi7wtFcjLBkJGd3UvZDSsf7D+u8ZUpfWHgiDzfecMX
                BQIDAQAB
                -----END PUBLIC KEY-----
      ingress:
        hosts:
        - dev2-sim-testfsp3.mojaloop.live
    testfsp4:
      config:
        schemeAdapter:
          secrets:
            jws:
              privateKey: |-
                -----BEGIN PRIVATE KEY-----
                MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDH5Q+uzIdf7yTX
                4A23TTaGSCMU6ieKUmg2qsRJ0/lnk50A0eFQb98ux/XT90oEpqa8dqpla7lic3BK
                XdWoUYI+zmauzepTE3L0IZJB7VzQcPfbZiFG7OrGPAUtxxz4FBbKSA7FJnchIAEs
                blsyu2mQx+zbeajnQS3P+6oqDjdyuT5JyDjna7UFarozx1YXExwyfKsEtIPuMh/U
                L/q80gtWbXA9nA38t7vmdqxhh4PMddHgSEl6KK29yqwHsgpVg/5Yi0ubhbgLQbHm
                6XflBQK05t5AqD2j5h94h/dk9WzoWft8/haxI3OqFoaOOQmHemSs3KJndL+PyzL7
                6JCMlsHBAgMBAAECggEACsA4V3WjG0cEo4KmojLqKY80KdINJdyYQ8Zr76+RpJ81
                DL/8/wNBTOYOw+NzLOxcn9q+/9zrF88vHSTOUrLtjxyxO5oSDf1IC7bJg7e1K/XD
                ct6bkBG6b8Z3HdbtaS9FaYQ2HSbcNeEfhwj5aTFYtGN4SvaQXb2s7dhydrgUhdw1
                1TxXDio728BjRvCOex4H2lmJSflGYwHGJpy1C5Q8upAAMhKMP11598i9Vw7JJI4t
                wZ2vv3w728ApnQzDIiLzKMvNtvoEwQ7PlnSevL6V4sYAnsAmx6ZctEEv632nGPqk
                f5XLlDaczcRDcpAC+nyJKER7T/+emWNFlV0Mj+JMQQKBgQDncR0EzPRWGCDBmH8K
                e2hzzS0RmLb1nouhcFb6EiQR4WTvB8BjAJuf1Brq7gX1b/gGfWkYPS/9AKOI/JzO
                YHACgQmvTaF2WMHcvhb2F/Z96cKIpsD++RIARClv7MSfbTBVcBXbwaboN/B89sGG
                4+07ciy4uCwdK7wJP2gSyy3AsQKBgQDdGwDGppVdcGc4cStlCKoGQnT5owCidqP+
                pLdF5d69pLKaFKFzUh92dUOwLh4qonuOgGGy574JE0oncKn72eie6biEesu+4uuR
                Teu2qrKiHBPDtPlrBZrYnlyE6h9dftAie++bu0UzMSP4WtevxzF0xykELXtlJUx7
                fSjZ7UnWEQKBgQC/qdPPQu/hUG/oAyLKCnLw22xEU0TI2XhmxEKzK0zFpfPRY4j2
                M+2tCZkVDvLOU+CBd2AOG7Xe/qVvb0toOULpP/VGQLLC8DPzW1Rmjmep1Gkug3H2
                dUtr/waV0uzt3h2V05G2gIN5ccHtquePjrfKb/4LJzIZIjvBKMpGLg6AsQKBgAs2
                32cz88d1eAbI1qadNeJzZHN07QdQdSjpOdJ1wkJkJBrkiPvMYoQjlndNH4KSEyo7
                ILluP5k+PTia4kQ/3SiSOiWeBM99uuz3wsjVB5JpUidO+oePFTd/cLndFhIr6GqX
                VqPTb8MU7vodwWrM85k0sMPheqy6o5Jv2q6S9nfBAoGAai34NUJam3rAw+5EF1fI
                9v1AQxFmCX1xPawaFqudGxwod+NtrU5T11O07gDOC9V1ZdDU5btTlEoDgDiy5GNo
                9Bve6yCxr2L7ZaKNccw+yuqTrIzHD4JBpanHjafPCDB+auW0U1lP7Q7TDSzJ42E9
                yq8V8FKKjAQ2hlGoSVfEvG0=
                -----END PRIVATE KEY-----
              publicKey: |-
                -----BEGIN PUBLIC KEY-----
                MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAx+UPrsyHX+8k1+ANt002
                hkgjFOonilJoNqrESdP5Z5OdANHhUG/fLsf10/dKBKamvHaqZWu5YnNwSl3VqFGC
                Ps5mrs3qUxNy9CGSQe1c0HD322YhRuzqxjwFLccc+BQWykgOxSZ3ISABLG5bMrtp
                kMfs23mo50Etz/uqKg43crk+Scg452u1BWq6M8dWFxMcMnyrBLSD7jIf1C/6vNIL
                Vm1wPZwN/Le75nasYYeDzHXR4EhJeiitvcqsB7IKVYP+WItLm4W4C0Gx5ul35QUC
                tObeQKg9o+YfeIf3ZPVs6Fn7fP4WsSNzqhaGjjkJh3pkrNyiZ3S/j8sy++iQjJbB
                wQIDAQAB
                -----END PUBLIC KEY-----
      ingress:
        hosts:
        - dev2-sim-testfsp4.mojaloop.live
quoting-service:
  config:
    db_acquire_timeout_millis: 30000
    db_connection_pool_max: 30
    db_connection_pool_min: 10
    db_create_retry_interval_millis: 200
    db_create_timeout_millis: 30000
    db_database: central_ledger
    db_debug: false
    db_destroy_timeout_millis: 5000
    db_driver: mysql
    db_host: $release_name-centralledger-mysql
    db_idle_timeout_millis: 30000
    db_password: oyMxgZChuu
    db_port: 3306
    db_reap_interval_millis: 1000
    db_type: mysql
    db_user: central_ledger
    endpointSecurity:
      fspiopSourceSigningName: switch
      jwsSign: true
      jwsSigningKey: |-
        -----BEGIN PRIVATE KEY-----
        MIIEugIBADANBgkqhkiG9w0BAQEFAASCBKQwggSgAgEAAoIBAQDuB5HuHRH5BqI/
          VAC/ixm6lz8kJmigIB5jMxLrhB9cgqM+pb0O+is88VRHdxtw8eKG3nvrZYy/4nsJ
          z32qo4sOIMqHWTlZgbURVK4FAUEZ/qn63UnXJ1YVqT4UGg31BBj2c1JdlxG2t4JV
          DvzGrI2/ia/t4gYZCWrQz6a8OClBIaXu2t6EGFnysyS+1YDWtNIHO+z0lvAY9oad
          5MZPHN51o04eIoLO0tPfkz0+NDs4ECwUWuFAg8yo1hxnvSoERiCAwEbFgq2wDe1+
          oBhOpusd4VastD/TEqO8RhrwTodddOMKzapJPrQJuvTkrpkmkPOGE8DgIVHsULLR
          UYEMKvTVAgMBAAECgf94Meq77xrcFg8sSqe5eNHYP39tvaWyqE7mY/slvpNDH5Pl
          D/p21akS156E32BEJuYPk/TLiI2kMWjnvbHvNgr9tq8x3ToyTjtrg5clq8Hr1Ozo
          FnFiqkVHMFPFPQZEVU64CQPA33DixuWjMWS3YINfCAinErBry0PiNZGmuFi1K/wy
          e1z2F9WfG3IEBEe3NaeXwN55ZPJve0LtneJy3YqNwMg2FpPKBRHFV4lKTaU/hqhC
          NK6HQoEXN4Y9AQHn53Fl8n0iNO3qx0Tb7EuGNFmZ2xTlpDKAp8M+BA5Qm5YDkbd6
          OoxbGj2YxZncbG+RsvICtVMLqIytubvYREY9WGkCgYEA+K64xhJzWV3cGc8/90ko
          TryGMBj1ly5TNa1YyOQxl5z4Glc0aI8a+1vJGEAA+c/OEhMR8MRn3+QfV2LJOI5X
          V8Zo2Ger6Ln99LBddTh2HXL3M60cMgs8MYGuJ75g5R/UHnJBLo7NFyVddCOMT3hc
          AYSDN3XCw9ycqTw2/mJHB9kCgYEA9QiaCfTtnXdjMqLeYbp2uQEyyO6IZs956ym7
          sEQMwx/3wnlE9eiJ6iQxZfddkfOCyV/4MMAlYfpTBQFg7Cwb32Xrv3Ezy0HfZrnt
          5Nj4SVQWuOXJhdfC9dmTF+cvBeP+vC6PyDbikxdCo9+05chxS7I3MLxCue4qxy0C
          QfQIE10CgYA+kHacHng2u45sT9/f7t/dL0DzSNRAvL7iekIkCIURh8RDnDzrMVWw
          d18YYsHcF5PYqEOTN1aK1XGtIoVNXUJMKvaluy9c1a42qUhZ/WJ59jqLHbpCPOFf
          8yhFh3gJLQDIyCXt+K9Qa24fkfHy7Gz5VMVOZqohbJddXHDZfxAvwQKBgAdU947+
          tjF1BhHYz8Cq3KySfZuHj6tL4AEKYaRXlO4twbMe/9I/4AiShqvfZ/xbBfnSllGX
          Hkc9P0iyDt1iQH9BxHkZAQy+7tlbDORBHcTL8FYeAhawKxRCK2WWtFB/zvqAhire
          gY8XLhZLNlV91u4F6iLaL0DzAHKvRRcGH0u9AoGATNigZgbRRHJC21JucHeE0tP7
          HjGALvb4qn1o0oDHsxNY8i6vVNw9YeQpZaJhceuRHJTGcsq2dJSXpYwIhIVs/8RK
          bKbkEndra96L6FRZN8LYBl8zbRUPx39ojGeSbFliQv1eaoA/1DDhCiC2NlcSmbJl
          ecaG/Oyo/S+eM8nR7mc=
        -----END PRIVATE KEY-----
    include_cause_extension: false
    log_level: info
    simple_routing_mode_enabled: false
    truncate_cause: true
  image:
    pullPolicy: Always
    repository: mojaloop/quoting-service
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    enabled: true
    externalPath: /
    hosts:
      api: dev2-quoting-service.mojaloop.live
    tls: null
  init:
    enabled: true
    mysql:
      command: until result=$(mysql -h $db_host -P $db_port -u $db_user --password=$db_password  $db_database
        -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result'
        && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false;
        fi; do echo waiting for MySQL; sleep 2; done;
      name: wait-for-mysql
      pullPolicy: Always
      repository: mysql
      tag: latest
  livenessProbe:
    enabled: false
    httpGet:
      path: /health
    initialDelaySeconds: 60
    periodSeconds: 15
  readinessProbe:
    enabled: false
    httpGet:
      path: /health
    initialDelaySeconds: 60
    periodSeconds: 15
  replicaCount: 1
  resources: {}
  service:
    annotations: {}
    external:
      enabled: false
      ip: 10.0.2.2
      ports:
        api:
          externalPort: 3002
          name: http-api
    ports:
      api:
        externalPort: 80
        internalPort: 3002
        name: http-api
    type: ClusterIP
simulator:
  affinity: {}
  config:
    LOG_LEVEL: info
    MOCK_JWS_SIGNATURE: abcJjvNrkyK2KBieDUbGfhaBUn75aDUATNF4joqA8OLs4QgSD7i6EO8BIdy6Crph3LnXnTM20Ai1Z6nt0zliS_qPPLU9_vi6qLb15FOkl64DQs9hnfoGeo2tcjZJ88gm19uLY_s27AJqC1GH1B8E2emLrwQMDMikwQcYvXoyLrL7LL3CjaLMKdzR7KTcQi1tCK4sNg0noIQLpV3eA61kess
    PARTIES_SERVICE_ENDPOINT: http://$release_name-account-lookup-service
    QUOTES_SERVICE_ENDPOINT: http://$release_name-quoting-service
    TRANSFERS_CONDITION: HOr22-H3AfTDHrSkPjJtVPRdKouuMkDXTR4ejlQa8Ks
    TRANSFERS_FULFIL_RESPONSE_DISABLED: false
    TRANSFERS_FULFILMENT: XoSz1cL0tljJSCp_VtIYmPNw-zFUgGfbUqf69AagUzY
    TRANSFERS_ILPPACKET: AQAAAAAAAADIEHByaXZhdGUucGF5ZWVmc3CCAiB7InRyYW5zYWN0aW9uSWQiOiIyZGY3NzRlMi1mMWRiLTRmZjctYTQ5NS0yZGRkMzdhZjdjMmMiLCJxdW90ZUlkIjoiMDNhNjA1NTAtNmYyZi00NTU2LThlMDQtMDcwM2UzOWI4N2ZmIiwicGF5ZWUiOnsicGFydHlJZEluZm8iOnsicGFydHlJZFR5cGUiOiJNU0lTRE4iLCJwYXJ0eUlkZW50aWZpZXIiOiIyNzcxMzgwMzkxMyIsImZzcElkIjoicGF5ZWVmc3AifSwicGVyc29uYWxJbmZvIjp7ImNvbXBsZXhOYW1lIjp7fX19LCJwYXllciI6eyJwYXJ0eUlkSW5mbyI6eyJwYXJ0eUlkVHlwZSI6Ik1TSVNETiIsInBhcnR5SWRlbnRpZmllciI6IjI3NzEzODAzOTExIiwiZnNwSWQiOiJwYXllcmZzcCJ9LCJwZXJzb25hbEluZm8iOnsiY29tcGxleE5hbWUiOnt9fX0sImFtb3VudCI6eyJjdXJyZW5jeSI6IlVTRCIsImFtb3VudCI6IjIwMCJ9LCJ0cmFuc2FjdGlvblR5cGUiOnsic2NlbmFyaW8iOiJERVBPU0lUIiwic3ViU2NlbmFyaW8iOiJERVBPU0lUIiwiaW5pdGlhdG9yIjoiUEFZRVIiLCJpbml0aWF0b3JUeXBlIjoiQ09OU1VNRVIiLCJyZWZ1bmRJbmZvIjp7fX19
    TRANSFERS_SERVICE_ENDPOINT: http://$release_name-ml-api-adapter-service
  image:
    pullPolicy: Always
    repository: mojaloop/simulator
  imagePullSecrets: []
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    enabled: true
    hosts:
    - dev2-simulator.mojaloop.live
    path: /
    tls: []
  livenessProbe:
    enabled: true
    httpGet:
      path: /health
      port: 8444
      scheme: HTTP
    initialDelaySeconds: 5
    periodSeconds: 15
  metrics:
    defaultLabels:
      serviceName: simulator
    enabled: true
    prefix: moja_
    timeout: 5000
  nodeSelector: {}
  readinessProbe:
    enabled: true
    httpGet:
      path: /health
      port: 8444
      scheme: HTTP
    initialDelaySeconds: 5
    periodSeconds: 15
  replicaCount: 1
  resources: {}
  service:
    port: 80
    targetPort: http
    type: ClusterIP
  tolerations: []
transaction-requests-service:
  config:
    central_services_host: $release_name-centralledger-service
    central_services_port: 80
    log_level: info
  image:
    pullPolicy: Always
    repository: mojaloop/transaction-requests-service
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    enabled: true
    externalPath: /
    hosts:
      api: dev2-transaction-requests-service.mojaloop.live
    tls: null
  init:
    enabled: false
  livenessProbe:
    enabled: false
    httpGet:
      path: /health
    initialDelaySeconds: 60
    periodSeconds: 15
  metrics:
    config:
      defaultLabels:
        serviceName: transaction-requests
      prefix: moja_
      timeout: 5000
    enabled: false
  readinessProbe:
    enabled: false
    httpGet:
      path: /health
    initialDelaySeconds: 60
    periodSeconds: 15
  replicaCount: 1
  resources: {}
  service:
    annotations: {}
    external:
      enabled: false
      ip: 10.0.2.2
      ports:
        api:
          externalPort: 4001
          name: http-api
    ports:
      api:
        externalPort: 80
        internalPort: 4001
        name: http-api
    type: ClusterIP
