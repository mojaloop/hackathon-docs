NAME: mojaloop
LAST DEPLOYED: Thu Jan  7 17:36:05 2021
NAMESPACE: ml-app
STATUS: pending-install
REVISION: 1
HOOKS:
---
# Source: mojaloop/charts/account-lookup-service/charts/mysql/templates/tests/pxc-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "mojaloop-test"
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: pxc-test
    image: "percona/percona-xtradb-cluster:5.7.19"
    imagePullPolicy: "Always"
    command: ["bash", "/tests/run.sh"]
    env:
    - name: MYSQL_ROOT_PASSWORD
      valueFrom:
        secretKeyRef:
          name: mojaloop-account-lookup-mysql
          key: mysql-root-password
    volumeMounts:
    - mountPath: /tests
      name: tests
  volumes:
  - name: tests
    configMap:
      name: mojaloop-account-lookup-mysql-tests
  restartPolicy: Never
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/templates/tests/test_topic_create_consume_produce.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "mojaloop-test-topic-create-consume-produce"
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: mojaloop-test-consume
    image: confluentinc/cp-kafka:5.0.1
    command:
    - sh
    - -c
    - |
      # Create the topic
      kafka-topics --zookeeper mojaloop-zookeeper:2181 --topic helm-test-topic-create-consume-produce --create --partitions 1 --replication-factor 1 --if-not-exists && \
      # Create a message
      MESSAGE="`date -u`" && \
      # Produce a test message to the topic
      echo "$MESSAGE" | kafka-console-producer --broker-list mojaloop-kafka:9092 --topic helm-test-topic-create-consume-produce && \
      # Consume a test message from the topic
      kafka-console-consumer --bootstrap-server mojaloop-kafka-headless:9092 --topic helm-test-topic-create-consume-produce --from-beginning --timeout-ms 2000 --max-messages 1 | grep "$MESSAGE"
  restartPolicy: Never
---
# Source: mojaloop/charts/central/charts/centralledger/charts/mysql/templates/tests/pxc-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "mojaloop-test"
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: pxc-test
    image: "percona/percona-xtradb-cluster:5.7.19"
    imagePullPolicy: "Always"
    command: ["bash", "/tests/run.sh"]
    env:
    - name: MYSQL_ROOT_PASSWORD
      valueFrom:
        secretKeyRef:
          name: mojaloop-centralledger-mysql
          key: mysql-root-password
    volumeMounts:
    - mountPath: /tests
      name: tests
  volumes:
  - name: tests
    configMap:
      name: mojaloop-centralledger-mysql-tests
  restartPolicy: Never
MANIFEST:
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/charts/zookeeper/templates/poddisruptionbudget.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: mojaloop-zookeeper
  labels:
    app: zookeeper
    chart: zookeeper-2.1.0
    release: mojaloop
    heritage: Helm
    component: server
spec:
  selector:
    matchLabels:
      app: zookeeper
      release: mojaloop
      component: server
  maxUnavailable: 1
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/secret-jws.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-account-lookup-service-jws-signing-key
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-11.0.0
type: Opaque
data:
  jwsSigningKey.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV1Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktRd2dnU2dBZ0VBQW9JQkFRRHVCNUh1SFJINUJxSS8KVkFDL2l4bTZsejhrSm1pZ0lCNWpNeExyaEI5Y2dxTStwYjBPK2lzODhWUkhkeHR3OGVLRzNudnJaWXkvNG5zSgp6MzJxbzRzT0lNcUhXVGxaZ2JVUlZLNEZBVUVaL3FuNjNVblhKMVlWcVQ0VUdnMzFCQmoyYzFKZGx4RzJ0NEpWCkR2ekdySTIvaWEvdDRnWVpDV3JRejZhOE9DbEJJYVh1MnQ2RUdGbnlzeVMrMVlEV3ROSUhPK3owbHZBWTlvYWQKNU1aUEhONTFvMDRlSW9MTzB0UGZrejArTkRzNEVDd1VXdUZBZzh5bzFoeG52U29FUmlDQXdFYkZncTJ3RGUxKwpvQmhPcHVzZDRWYXN0RC9URXFPOFJocndUb2RkZE9NS3phcEpQclFKdXZUa3Jwa21rUE9HRThEZ0lWSHNVTExSClVZRU1LdlRWQWdNQkFBRUNnZjk0TWVxNzd4cmNGZzhzU3FlNWVOSFlQMzl0dmFXeXFFN21ZL3NsdnBOREg1UGwKRC9wMjFha1MxNTZFMzJCRUp1WVBrL1RMaUkya01Xam52Ykh2TmdyOXRxOHgzVG95VGp0cmc1Y2xxOEhyMU96bwpGbkZpcWtWSE1GUEZQUVpFVlU2NENRUEEzM0RpeHVXak1XUzNZSU5mQ0FpbkVyQnJ5MFBpTlpHbXVGaTFLL3d5CmUxejJGOVdmRzNJRUJFZTNOYWVYd041NVpQSnZlMEx0bmVKeTNZcU53TWcyRnBQS0JSSEZWNGxLVGFVL2hxaEMKTks2SFFvRVhONFk5QVFIbjUzRmw4bjBpTk8zcXgwVGI3RXVHTkZtWjJ4VGxwREtBcDhNK0JBNVFtNVlEa2JkNgpPb3hiR2oyWXhabmNiRytSc3ZJQ3RWTUxxSXl0dWJ2WVJFWTlXR2tDZ1lFQStLNjR4aEp6V1YzY0djOC85MGtvClRyeUdNQmoxbHk1VE5hMVl5T1F4bDV6NEdsYzBhSThhKzF2SkdFQUErYy9PRWhNUjhNUm4zK1FmVjJMSk9JNVgKVjhabzJHZXI2TG45OUxCZGRUaDJIWEwzTTYwY01nczhNWUd1Sjc1ZzVSL1VIbkpCTG83TkZ5VmRkQ09NVDNoYwpBWVNETjNYQ3c5eWNxVHcyL21KSEI5a0NnWUVBOVFpYUNmVHRuWGRqTXFMZVlicDJ1UUV5eU82SVpzOTU2eW03CnNFUU13eC8zd25sRTllaUo2aVF4WmZkZGtmT0N5Vi80TU1BbFlmcFRCUUZnN0N3YjMyWHJ2M0V6eTBIZlpybnQKNU5qNFNWUVd1T1hKaGRmQzlkbVRGK2N2QmVQK3ZDNlB5RGJpa3hkQ285KzA1Y2h4UzdJM01MeEN1ZTRxeHkwQwpRZlFJRTEwQ2dZQStrSGFjSG5nMnU0NXNUOS9mN3QvZEwwRHpTTlJBdkw3aWVrSWtDSVVSaDhSRG5EenJNVld3CmQxOFlZc0hjRjVQWXFFT1ROMWFLMVhHdElvVk5YVUpNS3ZhbHV5OWMxYTQycVVoWi9XSjU5anFMSGJwQ1BPRmYKOHloRmgzZ0pMUURJeUNYdCtLOVFhMjRma2ZIeTdHejVWTVZPWnFvaGJKZGRYSERaZnhBdndRS0JnQWRVOTQ3Kwp0akYxQmhIWXo4Q3EzS3lTZlp1SGo2dEw0QUVLWWFSWGxPNHR3Yk1lLzlJLzRBaVNocXZmWi94YkJmblNsbEdYCkhrYzlQMGl5RHQxaVFIOUJ4SGtaQVF5Kzd0bGJET1JCSGNUTDhGWWVBaGF3S3hSQ0syV1d0RkIvenZxQWhpcmUKZ1k4WExoWkxObFY5MXU0RjZpTGFMMER6QUhLdlJSY0dIMHU5QW9HQVROaWdaZ2JSUkhKQzIxSnVjSGVFMHRQNwpIakdBTHZiNHFuMW8wb0RIc3hOWThpNnZWTnc5WWVRcFphSmhjZXVSSEpUR2NzcTJkSlNYcFl3SWhJVnMvOFJLCmJLYmtFbmRyYTk2TDZGUlpOOExZQmw4emJSVVB4MzlvakdlU2JGbGlRdjFlYW9BLzFERGhDaUMyTmxjU21iSmwKZWNhRy9PeW8vUytlTThuUjdtYz0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQ==
---
# Source: mojaloop/charts/account-lookup-service/charts/mysql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-account-lookup-mysql
  labels:
    app: mojaloop-account-lookup-mysql
    chart: "mysql-1.0.4"
    release: "mojaloop"
    heritage: "Helm"
type: Opaque
data:
  
  mysql-root-password: "aEdIVjgzbFpqdA=="
  
  
  mysql-password:  "T2RvblBpYW5vWA=="
  
  
  xtrabackup-password: "cVhEUWtXMlNscA=="
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/charts/mongodb/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-mongodb
  labels:
    app: mongodb
    chart: mongodb-7.8.10
    release: "mojaloop"
    heritage: "Helm"
type: Opaque
data:
  mongodb-root-password:  "YWRtaW5wYXNz"
  mongodb-password:  "cGFzc3dvcmQ="
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-admin-transfer/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-centralledger-handler-admin-transfer
  labels:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-admin-transfer-11.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpveU14Z1pDaHV1QG1vamFsb29wLWNlbnRyYWxsZWRnZXItbXlzcWw6MzMwNi9jZW50cmFsX2xlZGdlcg==
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-centralledger-handler-timeout
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-11.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpveU14Z1pDaHV1QG1vamFsb29wLWNlbnRyYWxsZWRnZXItbXlzcWw6MzMwNi9jZW50cmFsX2xlZGdlcg==
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-centralledger-handler-transfer-fulfil
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-11.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpveU14Z1pDaHV1QG1vamFsb29wLWNlbnRyYWxsZWRnZXItbXlzcWw6MzMwNi9jZW50cmFsX2xlZGdlcg==
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-get/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-centralledger-handler-transfer-get
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-get-11.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpveU14Z1pDaHV1QG1vamFsb29wLWNlbnRyYWxsZWRnZXItbXlzcWw6MzMwNi9jZW50cmFsX2xlZGdlcg==
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-centralledger-handler-transfer-position
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-11.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpveU14Z1pDaHV1QG1vamFsb29wLWNlbnRyYWxsZWRnZXItbXlzcWw6MzMwNi9jZW50cmFsX2xlZGdlcg==
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-centralledger-handler-transfer-prepare
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-11.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpveU14Z1pDaHV1QG1vamFsb29wLWNlbnRyYWxsZWRnZXItbXlzcWw6MzMwNi9jZW50cmFsX2xlZGdlcg==
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-service/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-centralledger-service
  labels:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-service-11.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpveU14Z1pDaHV1QG1vamFsb29wLWNlbnRyYWxsZWRnZXItbXlzcWw6MzMwNi9jZW50cmFsX2xlZGdlcg==
---
# Source: mojaloop/charts/central/charts/centralledger/charts/mysql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-centralledger-mysql
  labels:
    app: mojaloop-centralledger-mysql
    chart: "mysql-1.0.4"
    release: "mojaloop"
    heritage: "Helm"
type: Opaque
data:
  
  mysql-root-password: "M1pqS0g0Q3liMw=="
  
  
  mysql-password:  "b3lNeGdaQ2h1dQ=="
  
  
  xtrabackup-password: "VWlmemlseWM2SA=="
---
# Source: mojaloop/charts/central/charts/centralsettlement/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-centralsettlement
  labels:
    app.kubernetes.io/name: centralsettlement
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 10.5.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-11.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpveU14Z1pDaHV1QG1vamFsb29wLWNlbnRyYWxsZWRnZXItbXlzcWw6MzMwNi9jZW50cmFsX2xlZGdlcg==
---
# Source: mojaloop/charts/finance-portal-settlement-management/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-finance-portal-settlement-management
  labels:
    app.kubernetes.io/name: finance-portal-settlement-management
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 9.2.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-settlement-management-11.0.0
type: Opaque
data:
  DB_PROTOCOL: bXlzcWw=
  DB_USER: Y2VudHJhbF9sZWRnZXI=
  DB_PASSWORD: b3lNeGdaQ2h1dQ==
  DB_HOST: bW9qYWxvb3AtY2VudHJhbGxlZGdlci1teXNxbA==
  DB_PORT: MzMwNg==
  DB_SCHEMA: Y2VudHJhbF9sZWRnZXI=
---
# Source: mojaloop/charts/finance-portal/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-finance-portal
  labels:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 10.4.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-11.0.0
type: Opaque
data:
  DB_USER: Y2VudHJhbF9sZWRnZXI=
  DB_PASSWORD: b3lNeGdaQ2h1dQ==
  DB_HOST: bW9qYWxvb3AtY2VudHJhbGxlZGdlci1teXNxbA==
  DB_PORT: MzMwNg==
  AUTH_SERVER_CLIENTKEY: dGVzdGtleQ==
  AUTH_SERVER_CLIENTSECRET: dGVzdHNlY3JldA==
  JASPER_USER: dXNlcg==
  JASPER_PASSWORD: cGFzc3dvcmQ=
  AZURE_CLIENT_ID: ZWMzYjE2OGMtOTFkYi00YWEwLWE3ZDMtZWE5ZjZmOTk5OTk5
  AZURE_CLIENT_SECRET: c2VjcmV0
  AZURE_TENANT_ID: ZWMzYjE2OGMtOTFkYi00YWEwLWE3ZDMtZWE5ZjZmOTk5OTk5
  AZURE_WORKSPACE_ID: ZTE2ZDA1NWItN2E5YS00ZTliLWJiNGItYWJjZGVmOTk5OTk5
---
# Source: mojaloop/charts/finance-portal/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-finance-portal-certs
  labels:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 10.4.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-11.0.0
data:
  first_key.key: LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUNYUUlCQUFLQmdRQ3lRODB1YUExREt4and1R2dldHVIaVhvWnhwUS9Ud3lqLzlhNXplTUNmWmxBdnJlQ3MKOE1oQ20xN091UWtZa2lJcG9Fd24zRFVEWEFPMDNrVWc5SGc1cGQ1T2JuVFpkV29CS1dSMXQvVTJSNHhVNnYydwpLTG45S3lLL2NBLzc5d3phaU1aUytIK2orcHQ5WmpnZHBLT2NuM1hLOGJPVVJJVkVzU051OCt5Wi93SURBUUFCCkFvR0FVTGR2ajl3d2FTSDZESUZMTCtFYUhZQTBldi9FejF0V1ZMTi9OcXpOOXo4Qi90ekoxelM5VUo5K1NiY3gKM2F6SmlEU2JWdzhYOS9ueGViT005Sk9OWGJjQ01lSlg1TXFzQnpyUjg5dlRIbzlpcjkxdTdMRFZCRW8rYnNyUwp1ZlRRZFQxZXRVT2dnd1dzc1U0SkxvUUI3TDdRb0ZoQlRuZEFjNkF3bUIxdDZwRUNRUURIQmUwMXFnVFF3RjRICnpqbnBCS1BVbFlYNU1hKzZWRHZTRy95RmRKZUE1OFRyRjNvQkJuRVQ5WlRteTRtRExRYU84OHdzQXgwa2R1YUIKSDh0dW9DVXZBa0VBNVV5SXBHMmRqUkN5Q1JrRU5KTG45cXBDYVNPd2FPNDNEMTg5S3FHelc5bkhpaE1OY3poYQpha0FJYTNVTHA4QW9xUEZLT0ZrK3YyakdZd1BIU2F0RU1RSkJBSzl2ci93QUZTS1dqOHk5b3hxZXRuUHNJaDdhCkI1ZHVMUlUzQ2sveHlLTWVxdHk0NHhrSVBxRmpkNUJDbHNNRTY2VVRqMFMwc2ZtMHZkZlEyUmg1SG8wQ1FBYXoKUE03cE1SQmRLNGFlaDRQdHd2OXZMQytjVGx4U2thTk9XaUF6eDJUb3NTNzByWkR2VlowREwvdkwyTUpYR0JrUApxK2FIblJERXcvOUNyZ0VXRXhFQ1FRQ1Q3akZ0aG9QczI5QTk4MWV1SGZaK2JYTUZFSTQ4UEZndzEzY215V25NCkhpakYrNEUvWHREMTFXSmtJdURDbUhhbC9vUnRjYklPL2NDazE1eGJXWmtECi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0=
  second_key.key: LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUNYUUlCQUFLQmdRQ3lRODB1YUExREt4and1R2dldHVIaVhvWnhwUS9Ud3lqLzlhNXplTUNmWmxBdnJlQ3MKOE1oQ20xN091UWtZa2lJcG9Fd24zRFVEWEFPMDNrVWc5SGc1cGQ1T2JuVFpkV29CS1dSMXQvVTJSNHhVNnYydwpLTG45S3lLL2NBLzc5d3phaU1aUytIK2orcHQ5WmpnZHBLT2NuM1hLOGJPVVJJVkVzU051OCt5Wi93SURBUUFCCkFvR0FVTGR2ajl3d2FTSDZESUZMTCtFYUhZQTBldi9FejF0V1ZMTi9OcXpOOXo4Qi90ekoxelM5VUo5K1NiY3gKM2F6SmlEU2JWdzhYOS9ueGViT005Sk9OWGJjQ01lSlg1TXFzQnpyUjg5dlRIbzlpcjkxdTdMRFZCRW8rYnNyUwp1ZlRRZFQxZXRVT2dnd1dzc1U0SkxvUUI3TDdRb0ZoQlRuZEFjNkF3bUIxdDZwRUNRUURIQmUwMXFnVFF3RjRICnpqbnBCS1BVbFlYNU1hKzZWRHZTRy95RmRKZUE1OFRyRjNvQkJuRVQ5WlRteTRtRExRYU84OHdzQXgwa2R1YUIKSDh0dW9DVXZBa0VBNVV5SXBHMmRqUkN5Q1JrRU5KTG45cXBDYVNPd2FPNDNEMTg5S3FHelc5bkhpaE1OY3poYQpha0FJYTNVTHA4QW9xUEZLT0ZrK3YyakdZd1BIU2F0RU1RSkJBSzl2ci93QUZTS1dqOHk5b3hxZXRuUHNJaDdhCkI1ZHVMUlUzQ2sveHlLTWVxdHk0NHhrSVBxRmpkNUJDbHNNRTY2VVRqMFMwc2ZtMHZkZlEyUmg1SG8wQ1FBYXoKUE03cE1SQmRLNGFlaDRQdHd2OXZMQytjVGx4U2thTk9XaUF6eDJUb3NTNzByWkR2VlowREwvdkwyTUpYR0JrUApxK2FIblJERXcvOUNyZ0VXRXhFQ1FRQ1Q3akZ0aG9QczI5QTk4MWV1SGZaK2JYTUZFSTQ4UEZndzEzY215V25NCkhpakYrNEUvWHREMTFXSmtJdURDbUhhbC9vUnRjYklPL2NDazE1eGJXWmtECi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0=
  third_key.key: LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUNYUUlCQUFLQmdRQ3lRODB1YUExREt4and1R2dldHVIaVhvWnhwUS9Ud3lqLzlhNXplTUNmWmxBdnJlQ3MKOE1oQ20xN091UWtZa2lJcG9Fd24zRFVEWEFPMDNrVWc5SGc1cGQ1T2JuVFpkV29CS1dSMXQvVTJSNHhVNnYydwpLTG45S3lLL2NBLzc5d3phaU1aUytIK2orcHQ5WmpnZHBLT2NuM1hLOGJPVVJJVkVzU051OCt5Wi93SURBUUFCCkFvR0FVTGR2ajl3d2FTSDZESUZMTCtFYUhZQTBldi9FejF0V1ZMTi9OcXpOOXo4Qi90ekoxelM5VUo5K1NiY3gKM2F6SmlEU2JWdzhYOS9ueGViT005Sk9OWGJjQ01lSlg1TXFzQnpyUjg5dlRIbzlpcjkxdTdMRFZCRW8rYnNyUwp1ZlRRZFQxZXRVT2dnd1dzc1U0SkxvUUI3TDdRb0ZoQlRuZEFjNkF3bUIxdDZwRUNRUURIQmUwMXFnVFF3RjRICnpqbnBCS1BVbFlYNU1hKzZWRHZTRy95RmRKZUE1OFRyRjNvQkJuRVQ5WlRteTRtRExRYU84OHdzQXgwa2R1YUIKSDh0dW9DVXZBa0VBNVV5SXBHMmRqUkN5Q1JrRU5KTG45cXBDYVNPd2FPNDNEMTg5S3FHelc5bkhpaE1OY3poYQpha0FJYTNVTHA4QW9xUEZLT0ZrK3YyakdZd1BIU2F0RU1RSkJBSzl2ci93QUZTS1dqOHk5b3hxZXRuUHNJaDdhCkI1ZHVMUlUzQ2sveHlLTWVxdHk0NHhrSVBxRmpkNUJDbHNNRTY2VVRqMFMwc2ZtMHZkZlEyUmg1SG8wQ1FBYXoKUE03cE1SQmRLNGFlaDRQdHd2OXZMQytjVGx4U2thTk9XaUF6eDJUb3NTNzByWkR2VlowREwvdkwyTUpYR0JrUApxK2FIblJERXcvOUNyZ0VXRXhFQ1FRQ1Q3akZ0aG9QczI5QTk4MWV1SGZaK2JYTUZFSTQ4UEZndzEzY215V25NCkhpakYrNEUvWHREMTFXSmtJdURDbUhhbC9vUnRjYklPL2NDazE1eGJXWmtECi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0=
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/secret-jws.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-ml-api-adapter-handler-notification-jws-signing-key
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-11.0.0
type: Opaque
data:
  jwsSigningKey.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV1Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktRd2dnU2dBZ0VBQW9JQkFRRHVCNUh1SFJINUJxSS8KVkFDL2l4bTZsejhrSm1pZ0lCNWpNeExyaEI5Y2dxTStwYjBPK2lzODhWUkhkeHR3OGVLRzNudnJaWXkvNG5zSgp6MzJxbzRzT0lNcUhXVGxaZ2JVUlZLNEZBVUVaL3FuNjNVblhKMVlWcVQ0VUdnMzFCQmoyYzFKZGx4RzJ0NEpWCkR2ekdySTIvaWEvdDRnWVpDV3JRejZhOE9DbEJJYVh1MnQ2RUdGbnlzeVMrMVlEV3ROSUhPK3owbHZBWTlvYWQKNU1aUEhONTFvMDRlSW9MTzB0UGZrejArTkRzNEVDd1VXdUZBZzh5bzFoeG52U29FUmlDQXdFYkZncTJ3RGUxKwpvQmhPcHVzZDRWYXN0RC9URXFPOFJocndUb2RkZE9NS3phcEpQclFKdXZUa3Jwa21rUE9HRThEZ0lWSHNVTExSClVZRU1LdlRWQWdNQkFBRUNnZjk0TWVxNzd4cmNGZzhzU3FlNWVOSFlQMzl0dmFXeXFFN21ZL3NsdnBOREg1UGwKRC9wMjFha1MxNTZFMzJCRUp1WVBrL1RMaUkya01Xam52Ykh2TmdyOXRxOHgzVG95VGp0cmc1Y2xxOEhyMU96bwpGbkZpcWtWSE1GUEZQUVpFVlU2NENRUEEzM0RpeHVXak1XUzNZSU5mQ0FpbkVyQnJ5MFBpTlpHbXVGaTFLL3d5CmUxejJGOVdmRzNJRUJFZTNOYWVYd041NVpQSnZlMEx0bmVKeTNZcU53TWcyRnBQS0JSSEZWNGxLVGFVL2hxaEMKTks2SFFvRVhONFk5QVFIbjUzRmw4bjBpTk8zcXgwVGI3RXVHTkZtWjJ4VGxwREtBcDhNK0JBNVFtNVlEa2JkNgpPb3hiR2oyWXhabmNiRytSc3ZJQ3RWTUxxSXl0dWJ2WVJFWTlXR2tDZ1lFQStLNjR4aEp6V1YzY0djOC85MGtvClRyeUdNQmoxbHk1VE5hMVl5T1F4bDV6NEdsYzBhSThhKzF2SkdFQUErYy9PRWhNUjhNUm4zK1FmVjJMSk9JNVgKVjhabzJHZXI2TG45OUxCZGRUaDJIWEwzTTYwY01nczhNWUd1Sjc1ZzVSL1VIbkpCTG83TkZ5VmRkQ09NVDNoYwpBWVNETjNYQ3c5eWNxVHcyL21KSEI5a0NnWUVBOVFpYUNmVHRuWGRqTXFMZVlicDJ1UUV5eU82SVpzOTU2eW03CnNFUU13eC8zd25sRTllaUo2aVF4WmZkZGtmT0N5Vi80TU1BbFlmcFRCUUZnN0N3YjMyWHJ2M0V6eTBIZlpybnQKNU5qNFNWUVd1T1hKaGRmQzlkbVRGK2N2QmVQK3ZDNlB5RGJpa3hkQ285KzA1Y2h4UzdJM01MeEN1ZTRxeHkwQwpRZlFJRTEwQ2dZQStrSGFjSG5nMnU0NXNUOS9mN3QvZEwwRHpTTlJBdkw3aWVrSWtDSVVSaDhSRG5EenJNVld3CmQxOFlZc0hjRjVQWXFFT1ROMWFLMVhHdElvVk5YVUpNS3ZhbHV5OWMxYTQycVVoWi9XSjU5anFMSGJwQ1BPRmYKOHloRmgzZ0pMUURJeUNYdCtLOVFhMjRma2ZIeTdHejVWTVZPWnFvaGJKZGRYSERaZnhBdndRS0JnQWRVOTQ3Kwp0akYxQmhIWXo4Q3EzS3lTZlp1SGo2dEw0QUVLWWFSWGxPNHR3Yk1lLzlJLzRBaVNocXZmWi94YkJmblNsbEdYCkhrYzlQMGl5RHQxaVFIOUJ4SGtaQVF5Kzd0bGJET1JCSGNUTDhGWWVBaGF3S3hSQ0syV1d0RkIvenZxQWhpcmUKZ1k4WExoWkxObFY5MXU0RjZpTGFMMER6QUhLdlJSY0dIMHU5QW9HQVROaWdaZ2JSUkhKQzIxSnVjSGVFMHRQNwpIakdBTHZiNHFuMW8wb0RIc3hOWThpNnZWTnc5WWVRcFphSmhjZXVSSEpUR2NzcTJkSlNYcFl3SWhJVnMvOFJLCmJLYmtFbmRyYTk2TDZGUlpOOExZQmw4emJSVVB4MzlvakdlU2JGbGlRdjFlYW9BLzFERGhDaUMyTmxjU21iSmwKZWNhRy9PeW8vUytlTThuUjdtYz0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQ==
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-sim-payeefsp-jws-priv-key
  labels:
    app.kubernetes.io/name: mojaloop-sim-payeefsp-jws-priv-key
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
data:
  # Note that due to a bug with helm 2.9.1 the `required` function in combination with a missing
  # key will not work in place of this if statement.
  "private.key": LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRE11MTI2bWlld0NVQ1QKN2Y0OUIwU3lDUEZHem1xR1NzOXJUUGJrMXNlK0JCaHFmaHNma1pqNmNSUmZybGczcm1lNndlMEliMkFGNVRRTApub1NCbERBaW1RY05PSFhycXBBWS9CMGwvbWd5VXdtZnYwTkozVWpadUNGdXczSFJyVS9vU1VmWG9ESVRDK0JpCjEyMHc0RlkyQi92UG4rMWlDL3RzYUNheW5lb2FWL1NlZHE3SDkrc21FblFmR2wzcDVRSnAvQjJXczNCejFIcUkKSW94TEVhTzlWTWVESFFQdk5Kbi83ZzllcnFBNXZJaG1nTFM0Nndvck9WamRSTEgyU0VDSDczcXA4V2cwcko4WQplVzJrUThrdVk0dUhjRzNNTzZkcllyQzAxMVUwWnlNOTBLVjdkdjJZMGgyRkhscG45cy9wbWI2MzBtNUVMcG5CClQvcFlUTGNYQWdNQkFBRUNnZ0VBRHFrNlF6M1NnQmVNTVlFV1laNFpkc1c2S3RwbStYcWcva0R5NEp5d09COXoKU2lrQlhlZUtIM1o2bHR3cTJCaWNEVjAyMFdiOFp0K3MzdlRPbUxoRHpDNTQ0L2hQbXRLZmpXZlIyZUhYNmdhcQptKzhtbCsyMHBRRm1iNEtuMk1sQy9YendtL1NPWEJ2UHlVbVR1YTk1clFFeHNLMTJEVDArRjRZaExmaFlzVGgyCkhma0V6ZEZXNHJyZCs5ZGRLRzFaQU5TNFphaU15emh0dlVXZUVCeXBCdFZmK2tCays1MXQ5cExDZGp1eW5iOEkKV3lsU0RoaWtUMy9ZUS8zZy9TejNTTXAxdTR4MEdRZTlGV1lyblB6enA1TG5NNWZtNDl2OEpXVkhVdmQwVE9pMApkUVYrTFlsZ1NEMzhZUHBpNGlLUVNoMFpmMEVCZmJBODNHc1gyQXJKN1FLQmdRRG12Y0E2UHFQbzBPVi83UktZCkp1emlBM1RwdWNMOGlWTTFpNy9MdjYrVmtYODh1RHZFandMb05BaVljZ0ltL0NNSzdXQXdBK0R6bjRyMzhFSEIKQktGNEtSaFAwcVFTMEtMWHNkMHRkc21BQjBJbjcrY2JLTDR0dHFOVVA5OHhaQWtUTEpxOVBYcVRLTjBxdHl3NApTZklzVk1qREdvZVNkV0hPYlpZYkdLSUNmUUtCZ1FEakpMd29sRHJWWDI5VjR6Vm14UVlINWlOKzVrd0tYSFhqCnN1SEJyVzAyT2ovR1FGaDNYajZKUWkzbXpUV1loSHdoQTRwZGFRdE5ZcVRhejlJYy9PMVZOUGljMm92dGcrY2QKN3NoODZxZFE0UVpZaE4zUlQ0b1gvLy91NitVSzkwbGxoOWhFQm8zR3VaNFg0N3R1QnlOdEQ0U0ZBbFVMcmtTbQpmVzRYYUMzZ0l3S0JnR2lsNkhmQ0R4NjVGMDBVblZsS1ZpY1BRRWY4aXZWejVyd2pQSUpRMW5aMFBZdXhWdElICnRsN1BzcEpKS3JhNXBiNy85NTd2TTJmcWxPRnNJclpDdm1TNzVwM1ZQN3FVeXpZZUlkekx3Z21Cd1R4UnJyUC8KbjNrbUd4OUx0Sk0yOW5LdXlTTklyYjN1UzVoaTZQaENlVVluMGNIQzEzZlNLdUN2ak9PUElYTVZBb0dCQUpnKwpDUGRSMHRVczhCeXEreUgwc0lRZTFtKzV3QUc1MHpKWXRVUHhENkFuRHBPOGtROEExZjE5by9Kc1hKM3JQcCtLCkZmVmg4TGRmaElzOGUrSCtETHp0a2l6ZnRxWHRvTHpKVFF1YzQ2UXNEdXJKc3pzVmlzTm5USTFCQXZXRXBXY3QKMCtCVVhEWjBOdWhnTlVJYityeWdoL3YyZ2pZZ0NkZGxmcUtscXdudEFvR0JBTTVLcHA1UjBHMGlvQXVxR3FmWgpzSEVkTHFKTVNlcGdjNmM3UkMrM0cvc3Z0UzJJcUNmeU5mVk1NM3FWNU1ZM0o3S25BVmpHT3cyb0piWGNQTFhhCnV1dHNWVm1QeDJkL3gyTFpkYzhkWVljZE9RWnZyVWhtQUxoQVBYTTRTUnVqYWt4aCtVeGkxVk9pVytmWkw4YVcKdXUxcHh1V0QwZ1RKeEZrcDZ1NFlJQWh3Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-sim-payeefsp-tls-creds
  labels:
    app.kubernetes.io/name: mojaloop-sim-payeefsp-tls-creds
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
data:
  "inbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQVBPVWFMYmN4aXpvNFVLbitHQkF6dWN3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JXOXFZV3h2YjNBdGMybHRkV3hoZEc5eU1CNFhEVEl4TURFd056QTNNRFl3TjFvWApEVE14TURFd05UQTNNRFl3TjFvd0hURWJNQmtHQTFVRUF4TVNiVzlxWVd4dmIzQXRjMmx0ZFd4aGRHOXlNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6cU45cVJueXk0MTVMQ21nOE9YSVowbFEKV3NrU3lCOWswSmUweVVSV2hlYjNZNEdJcWFQYVgyYlpSVVd1Z1o5VGZjT0liODJLYlpYOXc5RUI1cHhjMEl1QwpkUlhGYWhQcEpVbmlCZ0c0TWpvRG1HbSs0SUJiTEV4TUI5MWY0WmtEYTg4V3ZXMzZVYyt4Q01taDhQL2pwVFlZCnN3RDR2YWpiYTM0K0phWGp4VTlUS3pza2tYRUJRR0VVeDVwMFlQQk9KeVJvcEE5RVZyUmpYRXFvMHZRWDZTdTMKS0xnUXo5Z0Mwd1hEbHdUclZCUysxdzhxMWoyWGovM3ozd3hoS3RpRTBEQ2dCSFZ5MDlUSU51MEtrVVFKLy81dwpVR1J4OURrcmV5MDlLaDlnV2dNTWNYTC82WE5LNUhDZGlNT3NFcm5kUTJKRVpSNUFHK29jMlhwMVIrNVppd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWxpaXEwUlVpVVBjSWtaMVZybQprVDFRT0FJYU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmZIYXlEV0xZMG51ODBlOGFaQTBnUHlMdkhtVHNtCnFFdUtrZHB3a0xOLy9uaE5CdDhFWS84MWVKSnBhV2ZvTFFtZnlCL3FSb1llSE9MRWQxQ0dxUS9sU0c1MGFKNmYKZUMyZThHT3ZkM1J0VjRSR3hzRHlTVXFKRWNmMFNaM1NML095THBtbWdkRjljUVJzTHVEdHFPWjhNMVc3TDBjNQovbTBOYWR0ajRhYUhEWlVqamR3Q1Iyd2tGN0xIZjU1RFMyKzRwVER3ZnZOYjdSR0QrdWNXUUtHbVNZR2ZPenpNCkpQZDFOM0dJSXMrQXpRYW1lZzRnK096S0lzeFl4Q3hpMDFtQVZDQ3VIdzJSakFIc21jNThsZ2R4bWpjcjRsTG8Kck1LTzVGblBJQ2xEMUthdlcwdW1zelhiczd4UE8yd2JmSzM5RVBmWDgxdy94L0YvM21TNHgveGkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "inbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROekNDQWgrZ0F3SUJBZ0lSQUxhRkMzSlNpM0F5TXJuaWFIc3Y5dll3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JXOXFZV3h2YjNBdGMybHRkV3hoZEc5eU1CNFhEVEl4TURFd056QTNNRFl3T0ZvWApEVE14TURFd05UQTNNRFl3T0Zvd0x6RXRNQ3NHQTFVRUF4TWtiVzlxWVd4dmIzQXRjMmx0TFhCaGVXVmxabk53CkxYTmphR1Z0WlMxaFpHRndkR1Z5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEKeEVLUDc0UlcwK2RQOFR4MGpPYmcrU3haMnYxUnpZamMrT0VYM1EwUUNGMEwwTWI1TTJZalQvTWZQU0tjTHA2QgpQRG5zQTRtMDJaMGttV3RVTVBoWDZHVk4xdHJhK3cvVFBxREE4N3N3M2FwN3ZJeDhhNTJWQ1hHS0JWZU9XWmp6Cm1UNGZBbzkySVR0emY4Z1FMcTNXaFRLc29qTjdkM3RIQ0ZidFpPbVRKWWordm45WXBvRmhiMzFRY3piZ3p5a1YKY0xZOGdiOG15azU1VUovOUxpWjdiRk1UYTFyNDFSUjFPNmNWYWtrTXAwUUhUV3docVhMUTBQK25VL0s3N0FhWgoxQXQxMVhScjJpcUY3dWFrVXdpWjFXaHhhelRITmx0V0lQQ3VPVWU1b1NQc1JlOWhTMThIRk84bjZFMHJqZmkyCklZTmFnZ1pDQ3dKSGRjOVJPeUs4OXdJREFRQUJvMkF3WGpBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGwKQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJndwpGb0FVeVdLS3JSRlNKUTl3aVJuVld1YVJQVkE0QWhvd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFENk1IcEFhCnhOZ1ZROWUyNFY5MXJCYjRQdkcvMnNKdlUwd210czFhZXRhSHRJK05TOXozYjdOS1JRMzVzNngwN1RBNk9Sb28Kb0NuNDlaRlBkZTBzMlVDVmpUbG5ML0ZBN1pzbE40dTlHU21iSVZjSDd0ZU5lVjRHN1ZQdUYvWVNZanNFZCt5VgpGZFFNL1JNejVIYUdHYmlDZ1dJa0xvNGEzcERTcXlLMjR3bUQwR0dKbUNKS0JjbCtqTmlUTE02QVVheDEyd2dWCmViMFNEcHl2Q3ZrWkNZbU0xd1dnWG5uMTZLSjRvU2I3eFNzWXVLMlFXdHhrNFl2cmRndGY4bWg4QkFHUTR1SkgKQlNWNTQrR1ZwakRBZ3V4b2VkWTl4N2xpUTlieUwzUDNaQThsb1VCcVg5N3BuM0NCb1lPcm43a1FwZFpRZFp6UQpCRVBOZWMrVDVCU0c4ZVE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  "inbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeEVLUDc0UlcwK2RQOFR4MGpPYmcrU3haMnYxUnpZamMrT0VYM1EwUUNGMEwwTWI1Ck0yWWpUL01mUFNLY0xwNkJQRG5zQTRtMDJaMGttV3RVTVBoWDZHVk4xdHJhK3cvVFBxREE4N3N3M2FwN3ZJeDgKYTUyVkNYR0tCVmVPV1pqem1UNGZBbzkySVR0emY4Z1FMcTNXaFRLc29qTjdkM3RIQ0ZidFpPbVRKWWordm45WQpwb0ZoYjMxUWN6Ymd6eWtWY0xZOGdiOG15azU1VUovOUxpWjdiRk1UYTFyNDFSUjFPNmNWYWtrTXAwUUhUV3doCnFYTFEwUCtuVS9LNzdBYVoxQXQxMVhScjJpcUY3dWFrVXdpWjFXaHhhelRITmx0V0lQQ3VPVWU1b1NQc1JlOWgKUzE4SEZPOG42RTByamZpMklZTmFnZ1pDQ3dKSGRjOVJPeUs4OXdJREFRQUJBb0lCQUFGNGFqR21NU3hYUUU4VApYK0FxWHFjZlFQRVdFc1hTYjYxaHFsY2FvUE1mRjFhU0Z3M2Vod2N6VUJtYUo4ZGxvcHc3NXR2RDdWbndCblVyCnk2NnVQYUpkRis4ekpvN1krSUV3blNGMlZwQmlsWmk5Q0xXWnNhTW5lWncrb3E5aktQZ044aGVIMFovQUhVWm8Kems0N09TODRTUGpTSCt1dVBjTC9PN29VMGVobkVmekVqYkFxRHRvTGhCSnpZdjZianBHNVQ3U25GNmFKdjg5TgptRmZOUEFZQUkrdnhQeHVqZDMvSk84dERZR3duSUdYdGdrdzh3QWlyTHZvaU5Qa0dTNU9rcWcxNDAvYnM0OVZ4CmZNTUFoYm1XRWczOVhFUTFJM21hN0ZMTWFQOWdHRW1kSFRMQzNDOUkvY21FbitraHlPS01iZlZDQ1BKdCt4eVoKSkM5WjVFRUNnWUVBNnRidHNXUVZla1hTaEVZNFlaT2U1eUlkRWFvemZJUnJ1dEdzNG92Z1A0aU9KUGcvQS8wUgpRbi95c1Y4enZJVDM5MmlrY3poYWlTTnRER0NYR1JCdmtOWkd3RUp2ZlRuSDJvOVQwV3M0Mkl1QVcwRXBNMVcyCjRUSkRUWUtDNDBiMENodmR2TXVEN0U1bERadVlScmpQU3hqTFkrZFVVbzlYRVpjT3IrTGY5eUVDZ1lFQTFmRzIKOUpKVFk3aFZ3RE9JYm8wY0U1SHJVbnhva3dEYXZmSjhhYTF4bVozUmZEa2wxaVJiUFl6cld1dTJFRCs2MUcxdQphQy9sa0hRYlpJK3RjQ21vY3QxUkh0S3d3dlZ5YjhMOW1kSEQ1OUNIMFU5ZVdDUzdrQzJPcHo3OVFOT2ZIVHVXCkxCL2oveEVCZGxHMHE1dHlaelhxUmdTS05CQk5GRE1WdXFMSGFSY0NnWUFHYVJtUjl4WnpBUWJ2SDIrWWtrd0wKS1M0NzlqWnpsclhPSXIwaWJna1FFdTAyYXlSbE9ucEhJM0Qva0lhOEJiRXpLc01hZGhaYW1nSDNEWWZ5WWpWNQpjYS82dlpXSGlKVkJEUnFQbytxb1ZwNkpYeXo5dnNCQVEzdjgyS3cwQWhMVlY4OWt3UFYzOU9malNEVU84U3FQCmRUelFIRmQ3N1hmRi9pYWpmSUQ2b1FLQmdRQ2o5SWx4QkhKRGlaQ3RxdEJ6YUZDTDd0ZVlieDcxQ1VLWkxxdUoKa1JIdDE3UWlydWtBSXZ5SlB1VmUyQ1MrYnhpT2t3NTVhYnRUNktiVmVnWkFYcXhvMnBMQVBGYWFFZCtSSnEyUwpvOTZ1V0hDOVIwWFY1dENXdlZNRmVKQThqZkR5UmlmZnlOREJPQmNXeGFiZm5GRWdKNEZTQjBpaWZadVVUMUhuCnBiZU1JUUtCZ0U1WXRKSU8zNlFkMm92SWVGczVNUURBNm11M1FxSGdnTnBIakViRGJMeGRKR0FINTNINy9HZUkKdHk3Mm5rMGl1RjYrQTJOU2NiQ3RkVTJLYjdGSk5SejNWaHYrTS9Hd2gzSmJHT1k1MGk1d3hJMVVKeWl2aVpHSgpjcHBMcGh6UFFjbTZIY1RvYVN2Mnh5NlhHTHU5ZjdNb2YvWkZGVEY5c1RLQjNuYjBMQVd6Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  "outbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQVBPVWFMYmN4aXpvNFVLbitHQkF6dWN3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JXOXFZV3h2YjNBdGMybHRkV3hoZEc5eU1CNFhEVEl4TURFd056QTNNRFl3TjFvWApEVE14TURFd05UQTNNRFl3TjFvd0hURWJNQmtHQTFVRUF4TVNiVzlxWVd4dmIzQXRjMmx0ZFd4aGRHOXlNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6cU45cVJueXk0MTVMQ21nOE9YSVowbFEKV3NrU3lCOWswSmUweVVSV2hlYjNZNEdJcWFQYVgyYlpSVVd1Z1o5VGZjT0liODJLYlpYOXc5RUI1cHhjMEl1QwpkUlhGYWhQcEpVbmlCZ0c0TWpvRG1HbSs0SUJiTEV4TUI5MWY0WmtEYTg4V3ZXMzZVYyt4Q01taDhQL2pwVFlZCnN3RDR2YWpiYTM0K0phWGp4VTlUS3pza2tYRUJRR0VVeDVwMFlQQk9KeVJvcEE5RVZyUmpYRXFvMHZRWDZTdTMKS0xnUXo5Z0Mwd1hEbHdUclZCUysxdzhxMWoyWGovM3ozd3hoS3RpRTBEQ2dCSFZ5MDlUSU51MEtrVVFKLy81dwpVR1J4OURrcmV5MDlLaDlnV2dNTWNYTC82WE5LNUhDZGlNT3NFcm5kUTJKRVpSNUFHK29jMlhwMVIrNVppd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWxpaXEwUlVpVVBjSWtaMVZybQprVDFRT0FJYU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmZIYXlEV0xZMG51ODBlOGFaQTBnUHlMdkhtVHNtCnFFdUtrZHB3a0xOLy9uaE5CdDhFWS84MWVKSnBhV2ZvTFFtZnlCL3FSb1llSE9MRWQxQ0dxUS9sU0c1MGFKNmYKZUMyZThHT3ZkM1J0VjRSR3hzRHlTVXFKRWNmMFNaM1NML095THBtbWdkRjljUVJzTHVEdHFPWjhNMVc3TDBjNQovbTBOYWR0ajRhYUhEWlVqamR3Q1Iyd2tGN0xIZjU1RFMyKzRwVER3ZnZOYjdSR0QrdWNXUUtHbVNZR2ZPenpNCkpQZDFOM0dJSXMrQXpRYW1lZzRnK096S0lzeFl4Q3hpMDFtQVZDQ3VIdzJSakFIc21jNThsZ2R4bWpjcjRsTG8Kck1LTzVGblBJQ2xEMUthdlcwdW1zelhiczd4UE8yd2JmSzM5RVBmWDgxdy94L0YvM21TNHgveGkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "outbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROekNDQWgrZ0F3SUJBZ0lSQUxhRkMzSlNpM0F5TXJuaWFIc3Y5dll3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JXOXFZV3h2YjNBdGMybHRkV3hoZEc5eU1CNFhEVEl4TURFd056QTNNRFl3T0ZvWApEVE14TURFd05UQTNNRFl3T0Zvd0x6RXRNQ3NHQTFVRUF4TWtiVzlxWVd4dmIzQXRjMmx0TFhCaGVXVmxabk53CkxYTmphR1Z0WlMxaFpHRndkR1Z5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEKeEVLUDc0UlcwK2RQOFR4MGpPYmcrU3haMnYxUnpZamMrT0VYM1EwUUNGMEwwTWI1TTJZalQvTWZQU0tjTHA2QgpQRG5zQTRtMDJaMGttV3RVTVBoWDZHVk4xdHJhK3cvVFBxREE4N3N3M2FwN3ZJeDhhNTJWQ1hHS0JWZU9XWmp6Cm1UNGZBbzkySVR0emY4Z1FMcTNXaFRLc29qTjdkM3RIQ0ZidFpPbVRKWWordm45WXBvRmhiMzFRY3piZ3p5a1YKY0xZOGdiOG15azU1VUovOUxpWjdiRk1UYTFyNDFSUjFPNmNWYWtrTXAwUUhUV3docVhMUTBQK25VL0s3N0FhWgoxQXQxMVhScjJpcUY3dWFrVXdpWjFXaHhhelRITmx0V0lQQ3VPVWU1b1NQc1JlOWhTMThIRk84bjZFMHJqZmkyCklZTmFnZ1pDQ3dKSGRjOVJPeUs4OXdJREFRQUJvMkF3WGpBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGwKQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJndwpGb0FVeVdLS3JSRlNKUTl3aVJuVld1YVJQVkE0QWhvd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFENk1IcEFhCnhOZ1ZROWUyNFY5MXJCYjRQdkcvMnNKdlUwd210czFhZXRhSHRJK05TOXozYjdOS1JRMzVzNngwN1RBNk9Sb28Kb0NuNDlaRlBkZTBzMlVDVmpUbG5ML0ZBN1pzbE40dTlHU21iSVZjSDd0ZU5lVjRHN1ZQdUYvWVNZanNFZCt5VgpGZFFNL1JNejVIYUdHYmlDZ1dJa0xvNGEzcERTcXlLMjR3bUQwR0dKbUNKS0JjbCtqTmlUTE02QVVheDEyd2dWCmViMFNEcHl2Q3ZrWkNZbU0xd1dnWG5uMTZLSjRvU2I3eFNzWXVLMlFXdHhrNFl2cmRndGY4bWg4QkFHUTR1SkgKQlNWNTQrR1ZwakRBZ3V4b2VkWTl4N2xpUTlieUwzUDNaQThsb1VCcVg5N3BuM0NCb1lPcm43a1FwZFpRZFp6UQpCRVBOZWMrVDVCU0c4ZVE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  "outbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeEVLUDc0UlcwK2RQOFR4MGpPYmcrU3haMnYxUnpZamMrT0VYM1EwUUNGMEwwTWI1Ck0yWWpUL01mUFNLY0xwNkJQRG5zQTRtMDJaMGttV3RVTVBoWDZHVk4xdHJhK3cvVFBxREE4N3N3M2FwN3ZJeDgKYTUyVkNYR0tCVmVPV1pqem1UNGZBbzkySVR0emY4Z1FMcTNXaFRLc29qTjdkM3RIQ0ZidFpPbVRKWWordm45WQpwb0ZoYjMxUWN6Ymd6eWtWY0xZOGdiOG15azU1VUovOUxpWjdiRk1UYTFyNDFSUjFPNmNWYWtrTXAwUUhUV3doCnFYTFEwUCtuVS9LNzdBYVoxQXQxMVhScjJpcUY3dWFrVXdpWjFXaHhhelRITmx0V0lQQ3VPVWU1b1NQc1JlOWgKUzE4SEZPOG42RTByamZpMklZTmFnZ1pDQ3dKSGRjOVJPeUs4OXdJREFRQUJBb0lCQUFGNGFqR21NU3hYUUU4VApYK0FxWHFjZlFQRVdFc1hTYjYxaHFsY2FvUE1mRjFhU0Z3M2Vod2N6VUJtYUo4ZGxvcHc3NXR2RDdWbndCblVyCnk2NnVQYUpkRis4ekpvN1krSUV3blNGMlZwQmlsWmk5Q0xXWnNhTW5lWncrb3E5aktQZ044aGVIMFovQUhVWm8Kems0N09TODRTUGpTSCt1dVBjTC9PN29VMGVobkVmekVqYkFxRHRvTGhCSnpZdjZianBHNVQ3U25GNmFKdjg5TgptRmZOUEFZQUkrdnhQeHVqZDMvSk84dERZR3duSUdYdGdrdzh3QWlyTHZvaU5Qa0dTNU9rcWcxNDAvYnM0OVZ4CmZNTUFoYm1XRWczOVhFUTFJM21hN0ZMTWFQOWdHRW1kSFRMQzNDOUkvY21FbitraHlPS01iZlZDQ1BKdCt4eVoKSkM5WjVFRUNnWUVBNnRidHNXUVZla1hTaEVZNFlaT2U1eUlkRWFvemZJUnJ1dEdzNG92Z1A0aU9KUGcvQS8wUgpRbi95c1Y4enZJVDM5MmlrY3poYWlTTnRER0NYR1JCdmtOWkd3RUp2ZlRuSDJvOVQwV3M0Mkl1QVcwRXBNMVcyCjRUSkRUWUtDNDBiMENodmR2TXVEN0U1bERadVlScmpQU3hqTFkrZFVVbzlYRVpjT3IrTGY5eUVDZ1lFQTFmRzIKOUpKVFk3aFZ3RE9JYm8wY0U1SHJVbnhva3dEYXZmSjhhYTF4bVozUmZEa2wxaVJiUFl6cld1dTJFRCs2MUcxdQphQy9sa0hRYlpJK3RjQ21vY3QxUkh0S3d3dlZ5YjhMOW1kSEQ1OUNIMFU5ZVdDUzdrQzJPcHo3OVFOT2ZIVHVXCkxCL2oveEVCZGxHMHE1dHlaelhxUmdTS05CQk5GRE1WdXFMSGFSY0NnWUFHYVJtUjl4WnpBUWJ2SDIrWWtrd0wKS1M0NzlqWnpsclhPSXIwaWJna1FFdTAyYXlSbE9ucEhJM0Qva0lhOEJiRXpLc01hZGhaYW1nSDNEWWZ5WWpWNQpjYS82dlpXSGlKVkJEUnFQbytxb1ZwNkpYeXo5dnNCQVEzdjgyS3cwQWhMVlY4OWt3UFYzOU9malNEVU84U3FQCmRUelFIRmQ3N1hmRi9pYWpmSUQ2b1FLQmdRQ2o5SWx4QkhKRGlaQ3RxdEJ6YUZDTDd0ZVlieDcxQ1VLWkxxdUoKa1JIdDE3UWlydWtBSXZ5SlB1VmUyQ1MrYnhpT2t3NTVhYnRUNktiVmVnWkFYcXhvMnBMQVBGYWFFZCtSSnEyUwpvOTZ1V0hDOVIwWFY1dENXdlZNRmVKQThqZkR5UmlmZnlOREJPQmNXeGFiZm5GRWdKNEZTQjBpaWZadVVUMUhuCnBiZU1JUUtCZ0U1WXRKSU8zNlFkMm92SWVGczVNUURBNm11M1FxSGdnTnBIakViRGJMeGRKR0FINTNINy9HZUkKdHk3Mm5rMGl1RjYrQTJOU2NiQ3RkVTJLYjdGSk5SejNWaHYrTS9Hd2gzSmJHT1k1MGk1d3hJMVVKeWl2aVpHSgpjcHBMcGh6UFFjbTZIY1RvYVN2Mnh5NlhHTHU5ZjdNb2YvWkZGVEY5c1RLQjNuYjBMQVd6Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-sim-payerfsp-jws-priv-key
  labels:
    app.kubernetes.io/name: mojaloop-sim-payerfsp-jws-priv-key
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
data:
  # Note that due to a bug with helm 2.9.1 the `required` function in combination with a missing
  # key will not work in place of this if statement.
  "private.key": LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQ2c5ZVU2NmhnNFpBRTYKak00VTh5bFhRd1V6OWNkbXpTM0p5VysxYmJndjc3cGVNS1NVL3dGc2k0UVJ3bWJyWXplOWJhRm5HQ0tuUzc1RQp2Q2NoaWI1dkp4cDNNRFd6aS9UR3htemdXZEpSemt5Q2lJNUM2ZENnVkw3MU1qc0ZnTjNUTjYzd0VmNXNFVTJJCmVvSjh5WEpNMHBVRzlmOU5PN3AvSUdsaURtdDZDN0VBN0Q5a1FXaWd1Zm1YMFpUVk5LSTA3Zkt3Qy9BRUtMcDcKa3g5OXB2c0NxOG0xODRFRUwxNVEvTmhBN1IvNXpLb0h2bUphNkpkN3RNMGkweG44SUtPa05WRnUzWUlhZkFFQwpRV1F3UmJhbkZFZVJjM3RIM2JFb1lNOGM3NHIrVytZeENHN25VZjE2WENrMTMyWFZmZmJIVmwrd0ZnbzE4WUIvCnNBSm1jYmVQQWdNQkFBRUNnZ0VBR1FHS25zZitna2c3RHFNUVl4M1J4dDVCSVN6bVVSakFLOUN4RzZFVGs5THQKQTdRUDVadm1WenduaFBETU4zWi9FdDFFelhUbzhVK3BuQmtWQlRkV2tBTWxyKzJiOGl4a2x6cjljQzlVSnVSagphNFlXZjl1K1R5SkxWbUY2M09TRDBjd2RLQ1pMZmZPRU5aYyt6VzhvWkRuMDhCTm9tZEdWTENuWFpXWHpHWThYCkthSlRKcjI5akVna0tPcUZYZEFIcnNtajdUQnRxU0xaS3gySUhkQ21pMDUrNUpDeFZMUGduRGlDaWNaOXpFaWkKeVd3NTdRMW1pZ0ZJY3c2WlFQNFJ5amdIMW83MEIrem8zT0w3SVFFaXJFMTdHVWdLMTZYRDh4aThoV0NZVGo1bgp4T3o5eWZWZlB1WW9tLzlYYm01a1lKWktFMkhPWjNMZzhwVW5XbmN1TlFLQmdRRGJhT29BQ1FQaFZ4UUsxcVlSClJiVzBJNVJuMEVEeHpzRlBFcHUzZVhIb0lZR1hpOHUvZXc5QXpGbUd1K3RLWUpWNVY0QkNYbzV4MmRkRStCOEIKZFhoeUhMR2ZlVjh0V0tZS0JwYXRvbFZ4eEtETC85Zm54b0dJQU85Y2M5MWllT201SnhtS3NjQ1ZQMVVuT1hIWgp1b21TZkFiR1F3WUR0TWQyYkpLa0UxejBxd0tCZ1FDN3phY3V2MVBNYURGa3NIdU5OUkcrYVo3NHBKNzdtc2h0CnZKb0t5YVFja3REMHhtSVhoRmZKdks0Y2Nsekc3czVqeENzdTJlamltZ21mVnpnWGxMRU1ySkZ2U2RGa0QyU1MKZ0dxb3hxNWM5Zzhzc3Z0N3h3cjdhSitWWVlXVFdSekpyT1VueSs5OVVid0hlZHUwRUhMMUJZSUx3eTY3TGl1bQpzZ1VlZUNFZ3JRS0JnR3YrN2Y3cWNSQi9qZ3Z2cjNvYzk5MGREalV6R21SclFsY3JiNTRWbHUyTllINDVmeVpXCjZpRVk5SkFPK3pkMjV0djlKOUtEUEZYcHhiM2E2MWdLZkNpZTJ3Y0Y5TVViTjA4RUF6S2dEckthK0JLeGNaSlIKOFB3Q2ljN1Y4UWhCUDdtMDl5dC9acTJQcU5oUHZDeFJWdG5WVm5oTUVTL04wY2dHbFA5UjBKVlZBb0dBSFUyLwprbW5FTjViaWJpV2pnYXNRTTdmaldFVEhrZGJiQTFSMGJNNTl6ditSbnovOU9sSXFLSTVLVktIN25BYlRLWG9JCml1enhpN29oV2oyUHdRNHdlaHZMTGFSRkNlbms5WDhZSlhHcTcxSnRsN250eDZpTkxDRnRGUy84V2J1RDVHd1gKN1pmQ3JMaytMNlJ5QmF5elkwd1N1S2NoK1k4QXZLZjJhSVN5RnBrQ2dZRUFqU2ZFano5Q24rMjdIZGlNb0J3YQorZnl5b29zY2kvNk9CeGovV1RLdlY2S1VZTEJmRm9BWXBiOXJxcmJ2bmZ5eWMwVWlBWVFlTUpBT1dRMWtrelk0CnpYczYzaVBRaTJVZUdQSlo3UnNUKzMxRFNhRzlZaVFkckluc1VybG04aGkxQzdQZy9OTnQ2WTFHMFdoV1lydkYKaU5LMHlDRU5NaFNvT1R0YlQ5dG1HaTA9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-sim-payerfsp-tls-creds
  labels:
    app.kubernetes.io/name: mojaloop-sim-payerfsp-tls-creds
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
data:
  "inbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQVBPVWFMYmN4aXpvNFVLbitHQkF6dWN3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JXOXFZV3h2YjNBdGMybHRkV3hoZEc5eU1CNFhEVEl4TURFd056QTNNRFl3TjFvWApEVE14TURFd05UQTNNRFl3TjFvd0hURWJNQmtHQTFVRUF4TVNiVzlxWVd4dmIzQXRjMmx0ZFd4aGRHOXlNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6cU45cVJueXk0MTVMQ21nOE9YSVowbFEKV3NrU3lCOWswSmUweVVSV2hlYjNZNEdJcWFQYVgyYlpSVVd1Z1o5VGZjT0liODJLYlpYOXc5RUI1cHhjMEl1QwpkUlhGYWhQcEpVbmlCZ0c0TWpvRG1HbSs0SUJiTEV4TUI5MWY0WmtEYTg4V3ZXMzZVYyt4Q01taDhQL2pwVFlZCnN3RDR2YWpiYTM0K0phWGp4VTlUS3pza2tYRUJRR0VVeDVwMFlQQk9KeVJvcEE5RVZyUmpYRXFvMHZRWDZTdTMKS0xnUXo5Z0Mwd1hEbHdUclZCUysxdzhxMWoyWGovM3ozd3hoS3RpRTBEQ2dCSFZ5MDlUSU51MEtrVVFKLy81dwpVR1J4OURrcmV5MDlLaDlnV2dNTWNYTC82WE5LNUhDZGlNT3NFcm5kUTJKRVpSNUFHK29jMlhwMVIrNVppd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWxpaXEwUlVpVVBjSWtaMVZybQprVDFRT0FJYU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmZIYXlEV0xZMG51ODBlOGFaQTBnUHlMdkhtVHNtCnFFdUtrZHB3a0xOLy9uaE5CdDhFWS84MWVKSnBhV2ZvTFFtZnlCL3FSb1llSE9MRWQxQ0dxUS9sU0c1MGFKNmYKZUMyZThHT3ZkM1J0VjRSR3hzRHlTVXFKRWNmMFNaM1NML095THBtbWdkRjljUVJzTHVEdHFPWjhNMVc3TDBjNQovbTBOYWR0ajRhYUhEWlVqamR3Q1Iyd2tGN0xIZjU1RFMyKzRwVER3ZnZOYjdSR0QrdWNXUUtHbVNZR2ZPenpNCkpQZDFOM0dJSXMrQXpRYW1lZzRnK096S0lzeFl4Q3hpMDFtQVZDQ3VIdzJSakFIc21jNThsZ2R4bWpjcjRsTG8Kck1LTzVGblBJQ2xEMUthdlcwdW1zelhiczd4UE8yd2JmSzM5RVBmWDgxdy94L0YvM21TNHgveGkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "inbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROekNDQWgrZ0F3SUJBZ0lSQUw3SzZGbXgyNklSbkNyVU13dVFvcjB3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JXOXFZV3h2YjNBdGMybHRkV3hoZEc5eU1CNFhEVEl4TURFd056QTNNRFl3T0ZvWApEVE14TURFd05UQTNNRFl3T0Zvd0x6RXRNQ3NHQTFVRUF4TWtiVzlxWVd4dmIzQXRjMmx0TFhCaGVXVnlabk53CkxYTmphR1Z0WlMxaFpHRndkR1Z5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEKeTJqaDI4Zlp5aXRxSHp4S3NaRmtoWWhIczBYdDA3clZoT0p6UWhpcUFQWXNVT0VUdTUrUDV3czQ3V1lyRW1TdgpGMzgxTUltaW94NGZSWC9FR2tXVUpOeFBGSFZ2dWVVOEg5YlplQTIzSkZvcmsvVjNwWmlCNFRObnM4QlJJRE45ClV6YWpUNHpFVDZVZjB1a1VlM1VScXdFc3pwcERSQWg1K1RqeHE0ZkIvcXBlZXVZRDVvazI2ZktQRmZaaHVlREwKV0MyQW9SaE5YM09PN1dWeGQxM3Y4UU9VSFRxWHprZFpFMXQyRkVKc1UrN0w2NkFZcVUzaTFLdVZQUzlobTlNVApTMHVkenZNY1lDWUkrTHFvT1gwazhzT09LcWNiVkxFT2dtbjRjN2t4czBiaEFlQngyQkNXc0plWU9WaldvNFFZClA2akt4UGZXNWRXQ20yS0pGSnMvMFFJREFRQUJvMkF3WGpBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGwKQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJndwpGb0FVeVdLS3JSRlNKUTl3aVJuVld1YVJQVkE0QWhvd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJSldXMTJWCnVpbFhGRnhxdmsvTEZaWGFha2ZPaFJ3Y0VBMWxpenZsMHRDNlJyOFRFeEhYbWpzZUdzMVlobHMyWjdWSHZiSWcKRWRRUzFUZEYzVDdFaldOVU9GQmhSMUo0SHlnSkQvL2pXVGpxSjR5c0NuQnY2VUxOUG1DV0pxVTYvWFVMc3piVApVTmtWdzFPSjZCdngwalUvNEkxTWRlNGlpeW1wTkFTcFZ4VXpWZTh4TlhuZWtXTC90am1oRkZKcWRVS0RBNU9qCkI0REtaaHI5Sk90RWZqU3BYalJHZyswbER4UDgvTGZSWVdTWXRTZFZYVmFXbHJ0T1FLam9OWUc0bGF1R25reGYKekd5b01QbmdNbW1QRTcxSXY0ZjdWTG5HYWVoVi9hd3JRRUEzei9MLzlmazZOdEd2Z2d6VWN2WnZDcDBmWWNtZQpRY3daNVZHSkg1a0VFQzQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  "inbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeTJqaDI4Zlp5aXRxSHp4S3NaRmtoWWhIczBYdDA3clZoT0p6UWhpcUFQWXNVT0VUCnU1K1A1d3M0N1dZckVtU3ZGMzgxTUltaW94NGZSWC9FR2tXVUpOeFBGSFZ2dWVVOEg5YlplQTIzSkZvcmsvVjMKcFppQjRUTm5zOEJSSUROOVV6YWpUNHpFVDZVZjB1a1VlM1VScXdFc3pwcERSQWg1K1RqeHE0ZkIvcXBlZXVZRAo1b2syNmZLUEZmWmh1ZURMV0MyQW9SaE5YM09PN1dWeGQxM3Y4UU9VSFRxWHprZFpFMXQyRkVKc1UrN0w2NkFZCnFVM2kxS3VWUFM5aG05TVRTMHVkenZNY1lDWUkrTHFvT1gwazhzT09LcWNiVkxFT2dtbjRjN2t4czBiaEFlQngKMkJDV3NKZVlPVmpXbzRRWVA2akt4UGZXNWRXQ20yS0pGSnMvMFFJREFRQUJBb0lCQUJvaUs0SjFOc0lHdWVleApjMWRFK3NrOUxSa1hUdXI1QWgzRWlsSmZvTmZteU9MTFNDRys2bG9nMHZ1Tk9OTndKQjY4dFRTN09pNEMzTG10CkpLRExkN0VVclFSUDRqN2IrTkdPWlBwTHFNLysxY0o0c3hxUGNZQmhmbDFWeEJhREJ3TDk3aFYyWEhKdklKdVUKWHBGT0JTc1hSNDV6dTFpdVRoMTY5M0cyUzNKUWJwUG5lMVE2RXd2WFdvejhJL2s4dktFUFhnWEZRZkFWdjFhLwpDYmVlUGp4Y3VPbHM5QzcyT1FqZEN3M3E1T2czZEVza0hwWjZ4ODJ5QmVKTldWK010SzZUTjFZVzcyQTd2QW5ECnhHQTNST01SRkJJbzdQWkR3RkgyaFVKMitkeXV1YjZFbHFFdWhkemh0KzFwTS9WbGZQUEVrM0VnZkhkQ05lZkIKNzA2NndBRUNnWUVBM3RjNytIeFJRQ3FRUkVUOVdVQnFyd3YxS016SVVoZG1nVWV6b1lmYkpNY0NiUnMxc0pWeApiRmJCY01XYWlXR0o0TVNmWkpucnYxclhCL20yV0JCc3AyakswWXp6UElGREV3WWN6TmV0Uk5ySzh1OFh1Sjl6CmhtUXdwVlhNQzdiQjFFRndmMng4cDhKaHJnNkV1OUpQM1A4dE5HL09HcVdVWmJQSXBnb2VBd0VDZ1lFQTZhMXoKMDloN0hoZTVxUzN0TlJDNnBROXBvQWpBSHFGeW5wajViZlJnY1JieFRiemlqdzIxOEtmOFNjN21qZGZmQVRVWQorVTArYjVleExMRHpKaGpHZllwMDhXNnZVaGUxT2FSTlozdTZFcDFTdjl5cmdXRXV2TmpSSDhQc2g4YUJOTG10CmN3a0kxYWNVRk1KVG96Qy81VnAyUXB3Ukh1T0FqNGNxUmNXMnpORUNnWUJtVUJnZXpLVlplckZtUnU2emJkb04KcU1YVkI4RHB3QWkyVHI5dzZMbDdOMHdyNEJSVWtTalVmeml0bUd5TnF4VHMrQm5lekxUcTFNQnB6d01qaDliNwpQaWZ3OG5BelZYNEFYQXdaR09WYStjRzRySUlOcUZnWVdpUGpwWExiNWZzMGd4OHR3aGV4eHBPbW9NL2NsSUZLCmpIYXEzcktZbFhGL0NINlZqWXVlQVFLQmdFeEN1eVpMNUFJeUkvaytiOGQ5cWl2c0Y4Q09tb1JrbEErR1JRREoKWENBTUtMd0NCTDVDN3ptVzJSTU5YdGl6dHFlaU9JQkQ0VGh4L1BSazJ6VjNxRytZSEFvZTRVQ2RWQnQzcjNzeQpPY3VSWkV3UkxEZVJDN3U5MXFIVFF3SWNtbFltc3FCME5sbmpxUDROWFZaSXRwZVhLamthemN1UzI0WDd5cVB5Cm5uSEJBb0dBUFdMcjhZWVA4bFJIWEJIaEJLdHVRMVFTZGVObjZENnd2aUVRZkZ6MUtTSkt5YkNVaUE5RUdjcWsKYVJGakhIVzZ6WDh1VTAzZmNoQmVNd0NjVFNkWFJ1R0xFTUIxMHR0Y2VuN3VReFBxYVIzOVpUVjJvOWRXWTJxSgpYb28rT1NhZFJ1VUpMUmdUYkZJZ2VXWVc3OVptR2N3STNHWEFpc2JiM1NjK0F4SEI3V0E9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  "outbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQVBPVWFMYmN4aXpvNFVLbitHQkF6dWN3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JXOXFZV3h2YjNBdGMybHRkV3hoZEc5eU1CNFhEVEl4TURFd056QTNNRFl3TjFvWApEVE14TURFd05UQTNNRFl3TjFvd0hURWJNQmtHQTFVRUF4TVNiVzlxWVd4dmIzQXRjMmx0ZFd4aGRHOXlNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6cU45cVJueXk0MTVMQ21nOE9YSVowbFEKV3NrU3lCOWswSmUweVVSV2hlYjNZNEdJcWFQYVgyYlpSVVd1Z1o5VGZjT0liODJLYlpYOXc5RUI1cHhjMEl1QwpkUlhGYWhQcEpVbmlCZ0c0TWpvRG1HbSs0SUJiTEV4TUI5MWY0WmtEYTg4V3ZXMzZVYyt4Q01taDhQL2pwVFlZCnN3RDR2YWpiYTM0K0phWGp4VTlUS3pza2tYRUJRR0VVeDVwMFlQQk9KeVJvcEE5RVZyUmpYRXFvMHZRWDZTdTMKS0xnUXo5Z0Mwd1hEbHdUclZCUysxdzhxMWoyWGovM3ozd3hoS3RpRTBEQ2dCSFZ5MDlUSU51MEtrVVFKLy81dwpVR1J4OURrcmV5MDlLaDlnV2dNTWNYTC82WE5LNUhDZGlNT3NFcm5kUTJKRVpSNUFHK29jMlhwMVIrNVppd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWxpaXEwUlVpVVBjSWtaMVZybQprVDFRT0FJYU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmZIYXlEV0xZMG51ODBlOGFaQTBnUHlMdkhtVHNtCnFFdUtrZHB3a0xOLy9uaE5CdDhFWS84MWVKSnBhV2ZvTFFtZnlCL3FSb1llSE9MRWQxQ0dxUS9sU0c1MGFKNmYKZUMyZThHT3ZkM1J0VjRSR3hzRHlTVXFKRWNmMFNaM1NML095THBtbWdkRjljUVJzTHVEdHFPWjhNMVc3TDBjNQovbTBOYWR0ajRhYUhEWlVqamR3Q1Iyd2tGN0xIZjU1RFMyKzRwVER3ZnZOYjdSR0QrdWNXUUtHbVNZR2ZPenpNCkpQZDFOM0dJSXMrQXpRYW1lZzRnK096S0lzeFl4Q3hpMDFtQVZDQ3VIdzJSakFIc21jNThsZ2R4bWpjcjRsTG8Kck1LTzVGblBJQ2xEMUthdlcwdW1zelhiczd4UE8yd2JmSzM5RVBmWDgxdy94L0YvM21TNHgveGkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "outbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROekNDQWgrZ0F3SUJBZ0lSQUw3SzZGbXgyNklSbkNyVU13dVFvcjB3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JXOXFZV3h2YjNBdGMybHRkV3hoZEc5eU1CNFhEVEl4TURFd056QTNNRFl3T0ZvWApEVE14TURFd05UQTNNRFl3T0Zvd0x6RXRNQ3NHQTFVRUF4TWtiVzlxWVd4dmIzQXRjMmx0TFhCaGVXVnlabk53CkxYTmphR1Z0WlMxaFpHRndkR1Z5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEKeTJqaDI4Zlp5aXRxSHp4S3NaRmtoWWhIczBYdDA3clZoT0p6UWhpcUFQWXNVT0VUdTUrUDV3czQ3V1lyRW1TdgpGMzgxTUltaW94NGZSWC9FR2tXVUpOeFBGSFZ2dWVVOEg5YlplQTIzSkZvcmsvVjNwWmlCNFRObnM4QlJJRE45ClV6YWpUNHpFVDZVZjB1a1VlM1VScXdFc3pwcERSQWg1K1RqeHE0ZkIvcXBlZXVZRDVvazI2ZktQRmZaaHVlREwKV0MyQW9SaE5YM09PN1dWeGQxM3Y4UU9VSFRxWHprZFpFMXQyRkVKc1UrN0w2NkFZcVUzaTFLdVZQUzlobTlNVApTMHVkenZNY1lDWUkrTHFvT1gwazhzT09LcWNiVkxFT2dtbjRjN2t4czBiaEFlQngyQkNXc0plWU9WaldvNFFZClA2akt4UGZXNWRXQ20yS0pGSnMvMFFJREFRQUJvMkF3WGpBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGwKQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJndwpGb0FVeVdLS3JSRlNKUTl3aVJuVld1YVJQVkE0QWhvd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJSldXMTJWCnVpbFhGRnhxdmsvTEZaWGFha2ZPaFJ3Y0VBMWxpenZsMHRDNlJyOFRFeEhYbWpzZUdzMVlobHMyWjdWSHZiSWcKRWRRUzFUZEYzVDdFaldOVU9GQmhSMUo0SHlnSkQvL2pXVGpxSjR5c0NuQnY2VUxOUG1DV0pxVTYvWFVMc3piVApVTmtWdzFPSjZCdngwalUvNEkxTWRlNGlpeW1wTkFTcFZ4VXpWZTh4TlhuZWtXTC90am1oRkZKcWRVS0RBNU9qCkI0REtaaHI5Sk90RWZqU3BYalJHZyswbER4UDgvTGZSWVdTWXRTZFZYVmFXbHJ0T1FLam9OWUc0bGF1R25reGYKekd5b01QbmdNbW1QRTcxSXY0ZjdWTG5HYWVoVi9hd3JRRUEzei9MLzlmazZOdEd2Z2d6VWN2WnZDcDBmWWNtZQpRY3daNVZHSkg1a0VFQzQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  "outbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeTJqaDI4Zlp5aXRxSHp4S3NaRmtoWWhIczBYdDA3clZoT0p6UWhpcUFQWXNVT0VUCnU1K1A1d3M0N1dZckVtU3ZGMzgxTUltaW94NGZSWC9FR2tXVUpOeFBGSFZ2dWVVOEg5YlplQTIzSkZvcmsvVjMKcFppQjRUTm5zOEJSSUROOVV6YWpUNHpFVDZVZjB1a1VlM1VScXdFc3pwcERSQWg1K1RqeHE0ZkIvcXBlZXVZRAo1b2syNmZLUEZmWmh1ZURMV0MyQW9SaE5YM09PN1dWeGQxM3Y4UU9VSFRxWHprZFpFMXQyRkVKc1UrN0w2NkFZCnFVM2kxS3VWUFM5aG05TVRTMHVkenZNY1lDWUkrTHFvT1gwazhzT09LcWNiVkxFT2dtbjRjN2t4czBiaEFlQngKMkJDV3NKZVlPVmpXbzRRWVA2akt4UGZXNWRXQ20yS0pGSnMvMFFJREFRQUJBb0lCQUJvaUs0SjFOc0lHdWVleApjMWRFK3NrOUxSa1hUdXI1QWgzRWlsSmZvTmZteU9MTFNDRys2bG9nMHZ1Tk9OTndKQjY4dFRTN09pNEMzTG10CkpLRExkN0VVclFSUDRqN2IrTkdPWlBwTHFNLysxY0o0c3hxUGNZQmhmbDFWeEJhREJ3TDk3aFYyWEhKdklKdVUKWHBGT0JTc1hSNDV6dTFpdVRoMTY5M0cyUzNKUWJwUG5lMVE2RXd2WFdvejhJL2s4dktFUFhnWEZRZkFWdjFhLwpDYmVlUGp4Y3VPbHM5QzcyT1FqZEN3M3E1T2czZEVza0hwWjZ4ODJ5QmVKTldWK010SzZUTjFZVzcyQTd2QW5ECnhHQTNST01SRkJJbzdQWkR3RkgyaFVKMitkeXV1YjZFbHFFdWhkemh0KzFwTS9WbGZQUEVrM0VnZkhkQ05lZkIKNzA2NndBRUNnWUVBM3RjNytIeFJRQ3FRUkVUOVdVQnFyd3YxS016SVVoZG1nVWV6b1lmYkpNY0NiUnMxc0pWeApiRmJCY01XYWlXR0o0TVNmWkpucnYxclhCL20yV0JCc3AyakswWXp6UElGREV3WWN6TmV0Uk5ySzh1OFh1Sjl6CmhtUXdwVlhNQzdiQjFFRndmMng4cDhKaHJnNkV1OUpQM1A4dE5HL09HcVdVWmJQSXBnb2VBd0VDZ1lFQTZhMXoKMDloN0hoZTVxUzN0TlJDNnBROXBvQWpBSHFGeW5wajViZlJnY1JieFRiemlqdzIxOEtmOFNjN21qZGZmQVRVWQorVTArYjVleExMRHpKaGpHZllwMDhXNnZVaGUxT2FSTlozdTZFcDFTdjl5cmdXRXV2TmpSSDhQc2g4YUJOTG10CmN3a0kxYWNVRk1KVG96Qy81VnAyUXB3Ukh1T0FqNGNxUmNXMnpORUNnWUJtVUJnZXpLVlplckZtUnU2emJkb04KcU1YVkI4RHB3QWkyVHI5dzZMbDdOMHdyNEJSVWtTalVmeml0bUd5TnF4VHMrQm5lekxUcTFNQnB6d01qaDliNwpQaWZ3OG5BelZYNEFYQXdaR09WYStjRzRySUlOcUZnWVdpUGpwWExiNWZzMGd4OHR3aGV4eHBPbW9NL2NsSUZLCmpIYXEzcktZbFhGL0NINlZqWXVlQVFLQmdFeEN1eVpMNUFJeUkvaytiOGQ5cWl2c0Y4Q09tb1JrbEErR1JRREoKWENBTUtMd0NCTDVDN3ptVzJSTU5YdGl6dHFlaU9JQkQ0VGh4L1BSazJ6VjNxRytZSEFvZTRVQ2RWQnQzcjNzeQpPY3VSWkV3UkxEZVJDN3U5MXFIVFF3SWNtbFltc3FCME5sbmpxUDROWFZaSXRwZVhLamthemN1UzI0WDd5cVB5Cm5uSEJBb0dBUFdMcjhZWVA4bFJIWEJIaEJLdHVRMVFTZGVObjZENnd2aUVRZkZ6MUtTSkt5YkNVaUE5RUdjcWsKYVJGakhIVzZ6WDh1VTAzZmNoQmVNd0NjVFNkWFJ1R0xFTUIxMHR0Y2VuN3VReFBxYVIzOVpUVjJvOWRXWTJxSgpYb28rT1NhZFJ1VUpMUmdUYkZJZ2VXWVc3OVptR2N3STNHWEFpc2JiM1NjK0F4SEI3V0E9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-sim-testfsp1-jws-priv-key
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp1-jws-priv-key
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
data:
  # Note that due to a bug with helm 2.9.1 the `required` function in combination with a missing
  # key will not work in place of this if statement.
  "private.key": LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRFpIY2k0UU9tb08yeEwKM3A2WWpTOTBJbWw1ditXY0xGSFkzRG5IcG5jYU1MMDlFVUluYUN4TFptcnZRMXBSRG5KYXV1dG4wTm53K09BSgplcCsxUW9iamE0V3lKc3NXazNUMGlOQzVrSU80Q1FKMFNNeUNiN0dKNnpqdHFOSE9YcDY4NXpRS1dSQUZsVWJKCnVYMUVDdm8xRk1VNWlSaU1uVEZMUXcyUjlHUU9JNFM3a0VEOWNwdm1ndHZKVXlNYks4dURKTFdEalhIaDhENEoKeHZrOFExcUgxMnFRVW5lUGJYeEd6NXNiSzJ0V3F1c0lLTlhVV0lqNWoxaU1xNU5GR2p0VCtOd1ljdDhSenRoRgp3L1pUMml6RkRFVytFZkZIdGJSN3ZoOEJUd0h4Z2duUENOcEMrc1NIMUlsRnpZaG15SG9SMEVCZGVadVRpd2NyCktHaGZSdkpSQWdNQkFBRUNnZ0VBSjFyNlFNZm5jc3Erc1N2NzFJdzNEMWFUaHZHdFpiYzA2Tm5Xa1dXUHprd0sKYVhEZzdISzZJTHJDWkhkeGZpTGZ3S21FTlUvS3laN2JRV3ljV1lkakd3TW8rMmVEeGFaWisxOTNja09MVk1jeApUakhKL0ZUUnVqM01sbXZWQ0JMbnREYzJuQytUczJkaEt2eTRBNmIzdnJweW02REp0ZWRpZ1pGNGVyM3hpd3c0CmE5WFY3dnI1eERFamY0a0ZXV0d0RUR1Ris0WUFFQmJtRDc2Y1J5RjVIdjhlb1UwTUVMQ2VsSHFMMWpMN1c2LzUKc1RmYlR4UklGTzN3bUpoVzJaUlJ5RDlFTjVsbVA5ZFJPeElFNEgzdFJCaWhVSlZEQkEwSVhHaUUyWitOak9VSgp5Y2JaVlQwTE1hM1hlWUtkcmhIUkdGYWZXUFNQSUpDeVFPSUszM1Y2QndLQmdRRC9UalM5c1hKOWhYdTUzYk0xCjgvWDc4MGtVcDY2R1FGNVYrUWhNQVZXLzZCZFExRmtodjZBdUpabCtGdWpCUnN6U2RsOTZ0aElMeTg3cWtQK24KZFVEeFhuNUIyQjdNUTFLN3V3bUtyWVcwODdCZkRQYSszUjd3S0o0Zm5kSWhycUFOR3kxS0Nmd2hlOEdKRXpwUAp2bEk0SmVJbnJnTVh5UWdaZ2orNjV6RTIyd0tCZ1FEWnRQdTFNRDhTSlZ2VVlYZ1AxdTBYcUpXWkRvNWRuZEkxCktBN1VsZWZiQnFxdFo4N0VQN3p4Y1RaSGFSTHVNQlBFcHBINCtLNE5zb3BuWmg0ckQrYlYvTk9KL3JJNlBNWmUKeklrakxZRStLVGd2TTdwdndEeStxMDhmRFludWNTNHhuSE9qTHp3OC9sNHB0SjF1aWdYa3g4UFNsOTQxMTgrNQpoNEFjNFpMMVF3S0JnUUNrLzNNZ2dYVC80R3ZVOUk0a3VWVnBqcExWa1lVK2FJMVBQTkg2NVFYNUw5TVp2eE1YCnQ1T2JIMXV5M0xWeWJBSmxwbkVRaW1qaFRNZWVXeldPa1QzMmdGNVN5WTBsOEFDaEtVRUNhaUMya0tPVTJua0IKWTBEaWJ5MjZPeklaNkpTeHc3V2lXdytpeUN1Tkhtc2FMR05RdkZNTDErOVJ5TysrSktweGJZY2w3d0tCZ0JiZApWaTVDWWUxaTlSRUtKNVRxU3I1WVcxWFczSWJpZzJoSHk3N3grNGJhWFdTVzZYVmRDRmdIUHQ4akh2VGJJY2hlCmdpZzIzZmpjVG9Mcmk3R1VHdmRRZFZzaDM5QVQvL1dHMzhSTkRDemVJV043dUZIeVM2N3V5UUdHNTN5ZWNHNlAKY3VtcGxWY0dsQmNuTy8yWEMyVnF3WnRGamZYenM0SlZ3OVBFc1MySEFvR0FOZGQ2ZE5mN0VUcEJnQWxlc1dnUwo3M0pBRWxNR2tRSDQyZHFlakV6TWE1Q1hVQ1BMUWRxSENneGFUNE0yNWM2Rjh0VWhiMnFTdlYrQ2wrelZrcWxBCkNwb2NNNitGVjRvWU5MSUpVdE5KaitYTGJEa1YyWGpYWXp1emNHbERkOUhBdjZoemcwekhPaE42RVRzeHFJeDcKZHZWNGR4TjE5ZURpcnA5QVZsNmszRXc9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-sim-testfsp1-tls-creds
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp1-tls-creds
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
data:
  "inbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQVBPVWFMYmN4aXpvNFVLbitHQkF6dWN3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JXOXFZV3h2YjNBdGMybHRkV3hoZEc5eU1CNFhEVEl4TURFd056QTNNRFl3TjFvWApEVE14TURFd05UQTNNRFl3TjFvd0hURWJNQmtHQTFVRUF4TVNiVzlxWVd4dmIzQXRjMmx0ZFd4aGRHOXlNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6cU45cVJueXk0MTVMQ21nOE9YSVowbFEKV3NrU3lCOWswSmUweVVSV2hlYjNZNEdJcWFQYVgyYlpSVVd1Z1o5VGZjT0liODJLYlpYOXc5RUI1cHhjMEl1QwpkUlhGYWhQcEpVbmlCZ0c0TWpvRG1HbSs0SUJiTEV4TUI5MWY0WmtEYTg4V3ZXMzZVYyt4Q01taDhQL2pwVFlZCnN3RDR2YWpiYTM0K0phWGp4VTlUS3pza2tYRUJRR0VVeDVwMFlQQk9KeVJvcEE5RVZyUmpYRXFvMHZRWDZTdTMKS0xnUXo5Z0Mwd1hEbHdUclZCUysxdzhxMWoyWGovM3ozd3hoS3RpRTBEQ2dCSFZ5MDlUSU51MEtrVVFKLy81dwpVR1J4OURrcmV5MDlLaDlnV2dNTWNYTC82WE5LNUhDZGlNT3NFcm5kUTJKRVpSNUFHK29jMlhwMVIrNVppd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWxpaXEwUlVpVVBjSWtaMVZybQprVDFRT0FJYU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmZIYXlEV0xZMG51ODBlOGFaQTBnUHlMdkhtVHNtCnFFdUtrZHB3a0xOLy9uaE5CdDhFWS84MWVKSnBhV2ZvTFFtZnlCL3FSb1llSE9MRWQxQ0dxUS9sU0c1MGFKNmYKZUMyZThHT3ZkM1J0VjRSR3hzRHlTVXFKRWNmMFNaM1NML095THBtbWdkRjljUVJzTHVEdHFPWjhNMVc3TDBjNQovbTBOYWR0ajRhYUhEWlVqamR3Q1Iyd2tGN0xIZjU1RFMyKzRwVER3ZnZOYjdSR0QrdWNXUUtHbVNZR2ZPenpNCkpQZDFOM0dJSXMrQXpRYW1lZzRnK096S0lzeFl4Q3hpMDFtQVZDQ3VIdzJSakFIc21jNThsZ2R4bWpjcjRsTG8Kck1LTzVGblBJQ2xEMUthdlcwdW1zelhiczd4UE8yd2JmSzM5RVBmWDgxdy94L0YvM21TNHgveGkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "inbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROakNDQWg2Z0F3SUJBZ0lRZkZUSisvZ2JtaG9JUEJQZnZBKzdPakFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05NakV3TVRBM01EY3dOakE0V2hjTgpNekV3TVRBMU1EY3dOakE0V2pBdk1TMHdLd1lEVlFRREV5UnRiMnBoYkc5dmNDMXphVzB0ZEdWemRHWnpjREV0CmMyTm9aVzFsTFdGa1lYQjBaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREgKZTFOVnJ4VVdUTXNNSDdqdncxWW56bjBoOEtRUDNWcE9TM2lQNG1XNEdiWjk3TE04WGloRGswd1JiVlJsSVlDagp0ZlIzYXhPNlN0UlVTNXAreWNaWUgrVHpqRCtvTklneks1S3phc2dtU00yL0ZkMVQyUUJyTWJmVi9YTE5kWStsCkFiYkMxWXljc00vOW4vR25JNzk4b2RyeHQrRjRXVHJnOGp3SlRRZWlDNW0yQnYwa09TekZEekU5aHMvaWwrSzIKK20vbTkxMzg3aUp5V3F5YkVSN0VCVlJSTHBaRkpTVnROWjhMa29IeEt0ZTdPQWovaVBQbktHbWpjRk80YVQxcApnU0J0eXNLaHcwN1N6T1Z1VTlUUXZzVlBQaUNJNzd1cklLd2w1c1U4TlUxL2RUMEd1UmJlVk4xd0t2Tm5lSkJnCi9YMGUvTzZEZWNzMUhDVzN2L2E1QWdNQkFBR2pZREJlTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUUKRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBVwpnQlRKWW9xdEVWSWxEM0NKR2RWYTVwRTlVRGdDR2pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVZoaUQ0Y3p3CnE2L3NxVHNlY1NIMjRlcmpNRGZrZzBZelFZbE9keW11bnZsaktnS1g1NkxtWmRaa2Yzd1FsZnJ3OTNvRVdTVUMKMXl2VnlkeW5KaHk5UDVlNU1kY0IxbWFDSnBtQXY3NUQrL3NmdElBY0ZiZ2ZuQ09GdlJUMWprTVdKSnV1ZS9GWApFYzkybTN0WmhrYTVWcTJtN2h2WVBTYWRjSU1TQlNmSCtpeDhVeWFicG41TnVmRCttTlFBckZHczhaMU5yVUNYCmFsTHBHQnpjME1BQ0RGQk9mdmorZ0tZSVp4ODdHZmhOdm4wYUhqYmtoaHUrSTRFTmhPZ1VuTXlybS9PeStEaG8KZmtTQ2tBTS9mOWxITjhYOUZVMUNnZWhvNENnOThDRlNuQjlsdEhIYWZiMy9IVjNaWkw2Nmd3ajFEQWdUeEFSagp1U2VvZnBzZ2UwVHByZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  "inbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeDN0VFZhOFZGa3pMREIrNDc4TldKODU5SWZDa0Q5MWFUa3Q0aitKbHVCbTJmZXl6ClBGNG9RNU5NRVcxVVpTR0FvN1gwZDJzVHVrclVWRXVhZnNuR1dCL2s4NHcvcURTSU15dVNzMnJJSmtqTnZ4WGQKVTlrQWF6RzMxZjF5elhXUHBRRzJ3dFdNbkxEUC9aL3hweU8vZktIYThiZmhlRms2NFBJOENVMEhvZ3VadGdiOQpKRGtzeFE4eFBZYlA0cGZpdHZwdjV2ZGQvTzRpY2xxc214RWV4QVZVVVM2V1JTVWxiVFdmQzVLQjhTclh1emdJCi80ano1eWhwbzNCVHVHazlhWUVnYmNyQ29jTk8wc3psYmxQVTBMN0ZUejRnaU8rN3F5Q3NKZWJGUERWTmYzVTkKQnJrVzNsVGRjQ3J6WjNpUVlQMTlIdnp1ZzNuTE5Sd2x0Ny8ydVFJREFRQUJBb0lCQUhtZkNrY0NjVFBnYkNlZgpLNjBiQm10TXJPUkZpSEdYdnBoZjBVakFlczRNOTBPOVRlWXZiaE1OT21LaHFzUGg4a0ZlRFlmRmhBaWYyT2J3CkZXalo4cEVHR1J3WVZUTmptK3ErMVRtSWtERXZVQ29CMWFocWRLUG1jelFIeTdmU3hscVBPZk4rS2JYYTQyUzUKNEtiTDE5TFFCK0k1LzBEVi9senBzNHJrS1JRMU5NbXB0WFNvZFNOS1lHMkJtTjRFQTZ6Z05OQllkRnpvS2YvbQpSS1NsT1VNOTZtNWJxNlB1ZXFGSjcvb1NmVVBrMlBXTWdETFM4TWtCM2ZxUkQ1SmNvZUdPUkpxUWtvbHFPZmFoCmZyR1M5K1R3Z1V3Z3dWRXQ0eXQ5RU5FS01vSzhPUDQxQVpoV1o5MmIzdnR2YVNQNTJwTDJnVUk5bndMT2pOQkwKSEpEaWovVUNnWUVBNXU3ZU5RckNCa0x3bzBENmU4ZmVGcXp4djduaEN3RVNrRWtmc210Y1c0ZGowMUJBTVJCSgpROEoydTc0R3ZQRFVXRTZOSW9TSjRnYzZpY0NZdlBDSDdMeDNxMXRHTTdKMU8xTjVhL2RzYmVZNTNJU1lHQzArCldsdGNhTmIxS1Z1V2NhNy9XUU9MS2ZFbFkyQ3BuV2xGYlRLNmFkRFpWeEVrS3EvMjd1ZG9TM01DZ1lFQTNTSisKSWlpak12Y0NmT1RJN0NlMm1ocklSTmdyS1VYTmVGQzFPVC81V3ZsOThQNkl6c2dlMWhkYUFOdWFWOUd3U09tQwpYWlVZM2RBTWV2ZnJxUzlnTFNZR0RlSlM5a1BnbmxSQmk4RjA1U2JPTUpiclJOOGtSY2tDVXhHU2RvMGorRXBICjlGM3p3WTFCdnRZbmwwaDM2eElEZDJiVFZsbVRIY25mWGZ4T1FpTUNnWUVBNEJLS1hXRXczaTU1bTQ1aS9WUHoKZElFZW1PL2RJblpKOHVKZzlSZ2pKMVI1VWdLZUpuMHMrYWhvMk1ZTGQ2MGQvUWxLL0dFcUFMME8yYmFjL1VkTwpQRENxMVFQZFhEQWVmQkFFMHZQaXE4Z21BSWhQbzdYU3VJM0pYcGlralJxbklXdXhyRWM1OHRwZmNzdktDRWlxCjZzZThCUXgydG5xVll5NFdKYjAzZjIwQ2dZRUFyNHZFU2VXc3VMYXlPT2QrUVVxOWdOU21DMUQzNG9uUk5TUU0KMldmWjBjaWhuQURVSmlOanAxMWVTN1FKY0pHN3VnWDFRY2tzdGxtRXJ0SEZPTWV0TitvcGdEZ2MxL2JHaDZvbgpab1NyQVlhdXhJL3FNUUJiVVRMakw0S1JuSjhxNE41SEJNell4dHdXUnlMR3h5ZjJXcHd3T0VkZW1mdjk5L1hiCjVrWjI4YlVDZ1lCN2UxY0pzWndralVpT3dqM2NyREUrQ3pNMFhieFQrZEF2b3BHTDBIMjJnMFdFYWNkUm1Kb3UKZWRUbHc3WS9jaERZT1k3WU00YU1LK2phV1dGWDB6eXZMZ0JxR1hqNnFpZko5YVI5bnk3dnJ1UE1rTTZvSFArOQpIWHJNQ29HTkE5RS9ETy9MMkJEY3Q4eFova0p0dlJwZVQzdGhUR25hb1BMaG5SdGV6cDRyVlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  "outbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQVBPVWFMYmN4aXpvNFVLbitHQkF6dWN3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JXOXFZV3h2YjNBdGMybHRkV3hoZEc5eU1CNFhEVEl4TURFd056QTNNRFl3TjFvWApEVE14TURFd05UQTNNRFl3TjFvd0hURWJNQmtHQTFVRUF4TVNiVzlxWVd4dmIzQXRjMmx0ZFd4aGRHOXlNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6cU45cVJueXk0MTVMQ21nOE9YSVowbFEKV3NrU3lCOWswSmUweVVSV2hlYjNZNEdJcWFQYVgyYlpSVVd1Z1o5VGZjT0liODJLYlpYOXc5RUI1cHhjMEl1QwpkUlhGYWhQcEpVbmlCZ0c0TWpvRG1HbSs0SUJiTEV4TUI5MWY0WmtEYTg4V3ZXMzZVYyt4Q01taDhQL2pwVFlZCnN3RDR2YWpiYTM0K0phWGp4VTlUS3pza2tYRUJRR0VVeDVwMFlQQk9KeVJvcEE5RVZyUmpYRXFvMHZRWDZTdTMKS0xnUXo5Z0Mwd1hEbHdUclZCUysxdzhxMWoyWGovM3ozd3hoS3RpRTBEQ2dCSFZ5MDlUSU51MEtrVVFKLy81dwpVR1J4OURrcmV5MDlLaDlnV2dNTWNYTC82WE5LNUhDZGlNT3NFcm5kUTJKRVpSNUFHK29jMlhwMVIrNVppd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWxpaXEwUlVpVVBjSWtaMVZybQprVDFRT0FJYU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmZIYXlEV0xZMG51ODBlOGFaQTBnUHlMdkhtVHNtCnFFdUtrZHB3a0xOLy9uaE5CdDhFWS84MWVKSnBhV2ZvTFFtZnlCL3FSb1llSE9MRWQxQ0dxUS9sU0c1MGFKNmYKZUMyZThHT3ZkM1J0VjRSR3hzRHlTVXFKRWNmMFNaM1NML095THBtbWdkRjljUVJzTHVEdHFPWjhNMVc3TDBjNQovbTBOYWR0ajRhYUhEWlVqamR3Q1Iyd2tGN0xIZjU1RFMyKzRwVER3ZnZOYjdSR0QrdWNXUUtHbVNZR2ZPenpNCkpQZDFOM0dJSXMrQXpRYW1lZzRnK096S0lzeFl4Q3hpMDFtQVZDQ3VIdzJSakFIc21jNThsZ2R4bWpjcjRsTG8Kck1LTzVGblBJQ2xEMUthdlcwdW1zelhiczd4UE8yd2JmSzM5RVBmWDgxdy94L0YvM21TNHgveGkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "outbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROakNDQWg2Z0F3SUJBZ0lRZkZUSisvZ2JtaG9JUEJQZnZBKzdPakFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05NakV3TVRBM01EY3dOakE0V2hjTgpNekV3TVRBMU1EY3dOakE0V2pBdk1TMHdLd1lEVlFRREV5UnRiMnBoYkc5dmNDMXphVzB0ZEdWemRHWnpjREV0CmMyTm9aVzFsTFdGa1lYQjBaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREgKZTFOVnJ4VVdUTXNNSDdqdncxWW56bjBoOEtRUDNWcE9TM2lQNG1XNEdiWjk3TE04WGloRGswd1JiVlJsSVlDagp0ZlIzYXhPNlN0UlVTNXAreWNaWUgrVHpqRCtvTklneks1S3phc2dtU00yL0ZkMVQyUUJyTWJmVi9YTE5kWStsCkFiYkMxWXljc00vOW4vR25JNzk4b2RyeHQrRjRXVHJnOGp3SlRRZWlDNW0yQnYwa09TekZEekU5aHMvaWwrSzIKK20vbTkxMzg3aUp5V3F5YkVSN0VCVlJSTHBaRkpTVnROWjhMa29IeEt0ZTdPQWovaVBQbktHbWpjRk80YVQxcApnU0J0eXNLaHcwN1N6T1Z1VTlUUXZzVlBQaUNJNzd1cklLd2w1c1U4TlUxL2RUMEd1UmJlVk4xd0t2Tm5lSkJnCi9YMGUvTzZEZWNzMUhDVzN2L2E1QWdNQkFBR2pZREJlTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUUKRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBVwpnQlRKWW9xdEVWSWxEM0NKR2RWYTVwRTlVRGdDR2pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVZoaUQ0Y3p3CnE2L3NxVHNlY1NIMjRlcmpNRGZrZzBZelFZbE9keW11bnZsaktnS1g1NkxtWmRaa2Yzd1FsZnJ3OTNvRVdTVUMKMXl2VnlkeW5KaHk5UDVlNU1kY0IxbWFDSnBtQXY3NUQrL3NmdElBY0ZiZ2ZuQ09GdlJUMWprTVdKSnV1ZS9GWApFYzkybTN0WmhrYTVWcTJtN2h2WVBTYWRjSU1TQlNmSCtpeDhVeWFicG41TnVmRCttTlFBckZHczhaMU5yVUNYCmFsTHBHQnpjME1BQ0RGQk9mdmorZ0tZSVp4ODdHZmhOdm4wYUhqYmtoaHUrSTRFTmhPZ1VuTXlybS9PeStEaG8KZmtTQ2tBTS9mOWxITjhYOUZVMUNnZWhvNENnOThDRlNuQjlsdEhIYWZiMy9IVjNaWkw2Nmd3ajFEQWdUeEFSagp1U2VvZnBzZ2UwVHByZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  "outbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeDN0VFZhOFZGa3pMREIrNDc4TldKODU5SWZDa0Q5MWFUa3Q0aitKbHVCbTJmZXl6ClBGNG9RNU5NRVcxVVpTR0FvN1gwZDJzVHVrclVWRXVhZnNuR1dCL2s4NHcvcURTSU15dVNzMnJJSmtqTnZ4WGQKVTlrQWF6RzMxZjF5elhXUHBRRzJ3dFdNbkxEUC9aL3hweU8vZktIYThiZmhlRms2NFBJOENVMEhvZ3VadGdiOQpKRGtzeFE4eFBZYlA0cGZpdHZwdjV2ZGQvTzRpY2xxc214RWV4QVZVVVM2V1JTVWxiVFdmQzVLQjhTclh1emdJCi80ano1eWhwbzNCVHVHazlhWUVnYmNyQ29jTk8wc3psYmxQVTBMN0ZUejRnaU8rN3F5Q3NKZWJGUERWTmYzVTkKQnJrVzNsVGRjQ3J6WjNpUVlQMTlIdnp1ZzNuTE5Sd2x0Ny8ydVFJREFRQUJBb0lCQUhtZkNrY0NjVFBnYkNlZgpLNjBiQm10TXJPUkZpSEdYdnBoZjBVakFlczRNOTBPOVRlWXZiaE1OT21LaHFzUGg4a0ZlRFlmRmhBaWYyT2J3CkZXalo4cEVHR1J3WVZUTmptK3ErMVRtSWtERXZVQ29CMWFocWRLUG1jelFIeTdmU3hscVBPZk4rS2JYYTQyUzUKNEtiTDE5TFFCK0k1LzBEVi9senBzNHJrS1JRMU5NbXB0WFNvZFNOS1lHMkJtTjRFQTZ6Z05OQllkRnpvS2YvbQpSS1NsT1VNOTZtNWJxNlB1ZXFGSjcvb1NmVVBrMlBXTWdETFM4TWtCM2ZxUkQ1SmNvZUdPUkpxUWtvbHFPZmFoCmZyR1M5K1R3Z1V3Z3dWRXQ0eXQ5RU5FS01vSzhPUDQxQVpoV1o5MmIzdnR2YVNQNTJwTDJnVUk5bndMT2pOQkwKSEpEaWovVUNnWUVBNXU3ZU5RckNCa0x3bzBENmU4ZmVGcXp4djduaEN3RVNrRWtmc210Y1c0ZGowMUJBTVJCSgpROEoydTc0R3ZQRFVXRTZOSW9TSjRnYzZpY0NZdlBDSDdMeDNxMXRHTTdKMU8xTjVhL2RzYmVZNTNJU1lHQzArCldsdGNhTmIxS1Z1V2NhNy9XUU9MS2ZFbFkyQ3BuV2xGYlRLNmFkRFpWeEVrS3EvMjd1ZG9TM01DZ1lFQTNTSisKSWlpak12Y0NmT1RJN0NlMm1ocklSTmdyS1VYTmVGQzFPVC81V3ZsOThQNkl6c2dlMWhkYUFOdWFWOUd3U09tQwpYWlVZM2RBTWV2ZnJxUzlnTFNZR0RlSlM5a1BnbmxSQmk4RjA1U2JPTUpiclJOOGtSY2tDVXhHU2RvMGorRXBICjlGM3p3WTFCdnRZbmwwaDM2eElEZDJiVFZsbVRIY25mWGZ4T1FpTUNnWUVBNEJLS1hXRXczaTU1bTQ1aS9WUHoKZElFZW1PL2RJblpKOHVKZzlSZ2pKMVI1VWdLZUpuMHMrYWhvMk1ZTGQ2MGQvUWxLL0dFcUFMME8yYmFjL1VkTwpQRENxMVFQZFhEQWVmQkFFMHZQaXE4Z21BSWhQbzdYU3VJM0pYcGlralJxbklXdXhyRWM1OHRwZmNzdktDRWlxCjZzZThCUXgydG5xVll5NFdKYjAzZjIwQ2dZRUFyNHZFU2VXc3VMYXlPT2QrUVVxOWdOU21DMUQzNG9uUk5TUU0KMldmWjBjaWhuQURVSmlOanAxMWVTN1FKY0pHN3VnWDFRY2tzdGxtRXJ0SEZPTWV0TitvcGdEZ2MxL2JHaDZvbgpab1NyQVlhdXhJL3FNUUJiVVRMakw0S1JuSjhxNE41SEJNell4dHdXUnlMR3h5ZjJXcHd3T0VkZW1mdjk5L1hiCjVrWjI4YlVDZ1lCN2UxY0pzWndralVpT3dqM2NyREUrQ3pNMFhieFQrZEF2b3BHTDBIMjJnMFdFYWNkUm1Kb3UKZWRUbHc3WS9jaERZT1k3WU00YU1LK2phV1dGWDB6eXZMZ0JxR1hqNnFpZko5YVI5bnk3dnJ1UE1rTTZvSFArOQpIWHJNQ29HTkE5RS9ETy9MMkJEY3Q4eFova0p0dlJwZVQzdGhUR25hb1BMaG5SdGV6cDRyVlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-sim-testfsp2-jws-priv-key
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp2-jws-priv-key
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
data:
  # Note that due to a bug with helm 2.9.1 the `required` function in combination with a missing
  # key will not work in place of this if statement.
  "private.key": LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQy91VFF5ckxTTkpjV2sKY1AzOXI1aVhsMk5lcm9kM0lMNEd4SUQreEVwek1RRXBESmJ5WVFsVWdzQXFRNkp0Yk1ydDc1SW1OQTlzV09DcQpKUm05RWpuNkNBZVJJbGNSWGJ3R0xhd1hud0RYbXhDUEJwS1FUYThIQXNBdmtaKzFLWnFqUkJLak5KOUQ1RVhEClkzNldoRVpoNTFkbWxFeXhnV3ZXNERXcHE5d0dPaVBzbW8ra2dQdFJwT0JmREFkWnRYNlBhNkZCK2kycEc4NUQKa3BPYkhrY2xyNVdNKzc3RUFMdWFad3Y1M0daNEdsc2trUGt1THdIeUNBbGNZbFNUNFNmcGRJaUJtUkRxOHE4TAowZkpxd1RwWmt0ZFQ0a21nS25iQ1FJODFOSEhNOFRZOGFlVWpScmhrL2IvTC9iSnB4emdkQVlHRVF4ejVKVlA5ClZKbG94TDRCQWdNQkFBRUNnZ0VBR1pKbER5NUFiY1FnT3JqMGM3SUlYdzNLNi8zSTVUK0pnUU1VTm9idGJEUlkKMUlZUW14Y014TWdrdys1ZCs0emplejExUjZHeGZmRFQxSFhhMjBCVFdkRlkyd2VTeCtieDlYd0JoR3dKazNoawpDc09rYUZsb016M3ZidGpVVGJoVkh4b3RCelkxV1B1WlA0Q2xpWU51bE0vanRUT3FFQkgwVllaMXVlSUptSTNOCkV0U1VPMUlBWU84U3lQNHNvekxwQUlmcDQrZnRNTDRIVkNpRDZhS2RWbDM4UzNQWDY1ajFRM3g5SnozR0JTQm8KOVVBNmNRSFJvQ01ydWplSUFlWTJ1VUNldmhkbTc1eG95d1ZGU0NwUkNndUZ4SVg1R2J2SVNKUkw4WEZOaERIbApPWTd5SFNPSlNtbmVkRmg4b1J3QkRLa294aHdiK25uMXdqZjRGWGRZL1FLQmdRRGdSdXFQeDJvdTI1dktPbngxCkcveHZ2TUxXekI5S0Yyd3FxRlA0dU52MGRJOXFKN3pDZjFpZm5lQXYvQ0VVK0p3WDVLSmtuVXRhbkNwV1phcmUKdmxXU0gwVUl0Z3MwY2dFS2pLRndZelhJbGMwNlRmZmtGeitVbEdsTFhTRkQzQlI1OXhtT1kvWndYbGdQejRpVwo2VGVmWHZyVStqTkdpZ0pWSVlFTXpCYUNMUUtCZ1FEYTE0VnVDT2pNYTBZdHpBZDFjUTJqZDhkWW92bmtvL0owCk9RdGR4OVdvRWRlS3NDSjhjd1ZKeFNPRjQ3MzlpMGgyQnhhL2xMSTZtbjlWdUJLZGRCTFRoTzErdkJDUTFTQ2kKclFHWXkxSlVjaHk3T1RCbzFwRU1BUTlBc0ZHWERNZzQvdVdkTTE4TzlKd0RIQUlLc2ordkdQK05UZ1ZTTzVDcQpsTzZRZ0crVHBRS0JnSHNLTE5Eb1EvYWxBRmozc1NQR1VMMDBQMmY3NEFhVHh3RzRDeWxlc1R6eFhXU05uRjdQCjRsemZEZ2tGTjFqNzh4YWdsZjdBMUlCSFFHclpwOTQvYVU2YTNSS2tYSTFQSmdjVms5UEdlZEVyYmNYWTFIQkwKMk5PNGYvT2FpZzlpZzlGTm9MV2ZYYW5UK0Zma01Ua3BoUnhuelJCZW14Yk55KzNNVGJJcG5RZVpBb0dCQU1TRgp5S0FBeGpaVW0yZ2pFZ3VvSTZ4SnN5M281V29xeEY4VW54MXZpSEh1MjlZQ3lHVmowVHJuR3pod1JUeDhLTzA4Ci9uTzY3N2JxNlRDc0phTmFDbElDekZnRVFRZ2ZMTGlKanFhTTUvbEhwSCtKSXV6eXlyeXg4dVdQc1NWcGFDQ3UKM3JvbDJOYVFXYzM5QitSZElBMTQ4SDBQdEgyZFdoT2x2UHJ0SzhXMUFvR0JBTXphNk9raHlDSXpTVEtWU1d1RgpkdklVYmo2ampGTHVSYXB1c0crSlgrQjEyVXBhNlozbE9IZTdlMFZXcTNyZ1RrdG5mcWYyZ081NWIrM28zMG80Cnd3K3NHbVJkcU1UdVBDQ1p4NDFYVC92MGxvWW0raWsxR0FKejFUVUZERHRYbG91RDJRQ0RKSmZacVBJUWYyOS8KYkZ0OHUrODQ0ZGRGMCtqNXI1UTJhWGRSCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-sim-testfsp2-tls-creds
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp2-tls-creds
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
data:
  "inbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQVBPVWFMYmN4aXpvNFVLbitHQkF6dWN3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JXOXFZV3h2YjNBdGMybHRkV3hoZEc5eU1CNFhEVEl4TURFd056QTNNRFl3TjFvWApEVE14TURFd05UQTNNRFl3TjFvd0hURWJNQmtHQTFVRUF4TVNiVzlxWVd4dmIzQXRjMmx0ZFd4aGRHOXlNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6cU45cVJueXk0MTVMQ21nOE9YSVowbFEKV3NrU3lCOWswSmUweVVSV2hlYjNZNEdJcWFQYVgyYlpSVVd1Z1o5VGZjT0liODJLYlpYOXc5RUI1cHhjMEl1QwpkUlhGYWhQcEpVbmlCZ0c0TWpvRG1HbSs0SUJiTEV4TUI5MWY0WmtEYTg4V3ZXMzZVYyt4Q01taDhQL2pwVFlZCnN3RDR2YWpiYTM0K0phWGp4VTlUS3pza2tYRUJRR0VVeDVwMFlQQk9KeVJvcEE5RVZyUmpYRXFvMHZRWDZTdTMKS0xnUXo5Z0Mwd1hEbHdUclZCUysxdzhxMWoyWGovM3ozd3hoS3RpRTBEQ2dCSFZ5MDlUSU51MEtrVVFKLy81dwpVR1J4OURrcmV5MDlLaDlnV2dNTWNYTC82WE5LNUhDZGlNT3NFcm5kUTJKRVpSNUFHK29jMlhwMVIrNVppd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWxpaXEwUlVpVVBjSWtaMVZybQprVDFRT0FJYU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmZIYXlEV0xZMG51ODBlOGFaQTBnUHlMdkhtVHNtCnFFdUtrZHB3a0xOLy9uaE5CdDhFWS84MWVKSnBhV2ZvTFFtZnlCL3FSb1llSE9MRWQxQ0dxUS9sU0c1MGFKNmYKZUMyZThHT3ZkM1J0VjRSR3hzRHlTVXFKRWNmMFNaM1NML095THBtbWdkRjljUVJzTHVEdHFPWjhNMVc3TDBjNQovbTBOYWR0ajRhYUhEWlVqamR3Q1Iyd2tGN0xIZjU1RFMyKzRwVER3ZnZOYjdSR0QrdWNXUUtHbVNZR2ZPenpNCkpQZDFOM0dJSXMrQXpRYW1lZzRnK096S0lzeFl4Q3hpMDFtQVZDQ3VIdzJSakFIc21jNThsZ2R4bWpjcjRsTG8Kck1LTzVGblBJQ2xEMUthdlcwdW1zelhiczd4UE8yd2JmSzM5RVBmWDgxdy94L0YvM21TNHgveGkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "inbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROakNDQWg2Z0F3SUJBZ0lRVHQyN1FUem1SRkRQZXloaFJSbHNrVEFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05NakV3TVRBM01EY3dOakE0V2hjTgpNekV3TVRBMU1EY3dOakE0V2pBdk1TMHdLd1lEVlFRREV5UnRiMnBoYkc5dmNDMXphVzB0ZEdWemRHWnpjREl0CmMyTm9aVzFsTFdGa1lYQjBaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREMKTXFyT0QrbWlPRVd6WFM1Z2hqVWI2b3dSMm9XTHVPZW9wcmRLdTFaemxkbzJzTE16WVovUkV3K0V1VVhqK3VqTAo4TFN2ZnNEZXZwMVRZTUQ2WFYyY0t2TmNHQ3plaW1jZWZ0UmxDTU5mbDlUa3R4dDhOUVYrbHZLb3ljYlV1SEg3CmxJeVFBWXI0K3ZJNDFTM1NuTEdXWUpwcSt2MnkydkEwL3F1amswSjg4WjhyWjhYNWhIdUUvTncvMTRhZkF0RUIKYmlKdW9nYkRVRnRFTVAzQ2pqMTd2NXhiUStabDRnSEtrY2ZjL0hRVVEyb2VNYUhLNXR4aTBQc2dld2pxM0tabwpBY1pjK1Vsa3kzanlhUHlyNWJRRjg1TU52VmZPL3czcmQwS241MGVXeTl5a01YaEtkUXV5d2RLd3l0S2d6elRKCldjemZMS2hqRGowcVZMTms3MkpkQWdNQkFBR2pZREJlTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUUKRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBVwpnQlRKWW9xdEVWSWxEM0NKR2RWYTVwRTlVRGdDR2pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVhFNVYxUnc3CjZVZTJ4c0Q2TEptMFVSVVpwZFFBWkdZSEN2aG5xbUpSdnVXb01iKy9LcDJaVEx2WjFiZWtSb2pvZWkyalVaTUkKVEdBNXBxKy8yUUpKYWEyWVMwM3JlRjRIV2hNL2swWDJBSUNUdmtRODJFWWJqTjRXWGNCVDA4U28vT0R5dTlXUwp3SHY3ME13bWM1N1BLWGUzT0czeXMybGo2RlBjajZqaGNxeVBJWVEvSGZzKzZraUh6SVNGbjFrbklkMUhSWXVXCnA3dGNiNGRuMHk0dTYzZ2xPbnFaZUw0TXhmOXc3UjRkSmJKZkpKazUrWlc2SWc0NTRSTTJ6bHFjU0o2bFE2WWkKU2xWdHBRRnFVWE8rL3JONGhqV0pHazVOY0lLZUh0NVpPZHMzYUtxN0hCZForM1doR2dvVjQ1eEFhN3pHRENqSwpOSFoxbXBwLzg1YVJRQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  "inbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd2pLcXpnL3BvamhGczEwdVlJWTFHK3FNRWRxRmk3am5xS2EzU3J0V2M1WGFOckN6Ck0yR2YwUk1QaExsRjQvcm95L0MwcjM3QTNyNmRVMkRBK2wxZG5DcnpYQmdzM29wbkhuN1VaUWpEWDVmVTVMY2IKZkRVRmZwYnlxTW5HMUxoeCs1U01rQUdLK1ByeU9OVXQwcHl4bG1DYWF2cjlzdHJ3TlA2cm81TkNmUEdmSzJmRgorWVI3aFB6Y1A5ZUdud0xSQVc0aWJxSUd3MUJiUkREOXdvNDllNytjVzBQbVplSUJ5cEhIM1B4MEZFTnFIakdoCnl1YmNZdEQ3SUhzSTZ0eW1hQUhHWFBsSlpNdDQ4bWo4cStXMEJmT1REYjFYenY4TjYzZENwK2RIbHN2Y3BERjQKU25VTHNzSFNzTXJTb004MHlWbk0zeXlvWXc0OUtsU3paTzlpWFFJREFRQUJBb0lCQUZFT0NOQzlQNHpmNCtlNwphdElLOGp2V3ArUUR5MTNJTFpqdERPLzZSVmsxSU1GVysxVGsyR25SaE5hbTVnOEQrUXEyU3hRODJZK2ZDOWR6Ck9OakhBMzFkUi9vV2RSUGx2S2l6MHo3Z2EzdUl5ZWswckJvcG4wTjVDWXQ5dkttbzJwcGhKRkl1OHF4OVFZQ0wKS2ZjUVErYzZKdm1rRFNRTDBkcXN1VU1yQWNOWDg5SDJneDUvNktNK1hrSzU1QVNBck5Fc2p4U20va1BjMGdNYQo1Njl1NkhLekpnY1VxaGRpQkRPVmk3S3ZrN1lnWnFWdWJDSXJNSDM2QWZIVzRFTEI5dktWaTlRVGsrcjkxYlRtCjcxQzUzTG1najRER0ZYVVFPbTVtakNtaUM4Z0t0SGVYbHRVVVp0MUlJb1NsYlN1L21uakpGa3V2NU9oczJWMUsKU2QwVjM0RUNnWUVBMFZrOXNScmoycDV3ZitWaUVxTHFBSUt3cEEreFYrdXBYNGRMY0VNRUFJakJjOWNYbFFrSgpLdmJmbWx4Y2xpcUhqQzZaSmVSVnVXM0VETTZDRnlFOVNObTc0WFl2QmMzcGpYdjVkeEtGclZjdVVLa0pnYmpJCmtBL08rY2dCeXQ1SHFQQmxjaTk4cFdYeC9TQTJ4Ylp1L3FRa2tYUzJmU2cyQ0VtbUdYMDJ3dzBDZ1lFQTdYa2YKTWsySnZybS9iVWhSOEZ2Mk5raFZpTEVOcXZxRFR4R3loWEpORnNUZ1kvcldBQTJkVndiM084Z2g0QkY5SitqRgp2MEoxTDEveEdVSjhQMGdkR0JJd2tpeG4velYxdnBiNnZiTGxFMXY0aENLNkdzQXdubm9TMXFQQlJqSVo0YWtYCkNqSy9yNW5ZRFprS0IyYk5pZWNiY3Ftd0RvT2U1VGJsK2NOOGlKRUNnWUJXeGxQZy9sRm1BL2lEdXZQYzM3UjUKQTdMdVBpYjNWNUo4SzF0a3JCS1RtaHY5eFRGY01FT2hrSFQ4eWI0QzdKd0V5aWZtNGU5Nmpmb09pT2E1YWFpNgpjcTRDOVhibVJBVEVCWmhROTlkN0UwRDZaQ2F4bzROVzI0YWlXSG9OdWZjZ0dvMGlPSGJGSkMyYkMyaElxYWIyClc5bGdoVzFERVpEYi9KTWh5NW9RWFFLQmdRRE5sRUNVakptRm1rb0U4a20xR2ZlUTBKZnppTXM3VERtbWxyeUUKV0FveWZ1ZCt4aVRDMFFaMzA1anVrUGY2Z1VsbTVsVmltTWJYNTJmU0pVTm9pU1plczBpSEVwaEpVRitKU2l6eApVbENMck4vOGpBK3VudGk0S1JmcjVzR240akdUc0kwNGoreHZ1WEJYZlRnNFpoL2psVVdtd3cyZDB3WVlpcWtXCnlzd2hjUUtCZ1FDa0o5Z1NrOFBZZkk3K3lxc3pNb3BFSFNYbjZQMGV6UXk4TjVRMGhFYm52ZjMvZjN2ZStESzEKY29SZGdkRnlMYUlDOHJyend4U3ZSOWNKMTBHTklLU3R1ZlM1SksvUEdEUzhUU0xsL1JzNmVBR1N6ZnVvamtwbQpyV0Y3OW5ybGdxVVEzbUJRNUZ1OWZJQmV2ZGJLb1M1UC9ld3l4Y24zdGNMSWJYYThuclVIekE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  "outbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQVBPVWFMYmN4aXpvNFVLbitHQkF6dWN3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JXOXFZV3h2YjNBdGMybHRkV3hoZEc5eU1CNFhEVEl4TURFd056QTNNRFl3TjFvWApEVE14TURFd05UQTNNRFl3TjFvd0hURWJNQmtHQTFVRUF4TVNiVzlxWVd4dmIzQXRjMmx0ZFd4aGRHOXlNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6cU45cVJueXk0MTVMQ21nOE9YSVowbFEKV3NrU3lCOWswSmUweVVSV2hlYjNZNEdJcWFQYVgyYlpSVVd1Z1o5VGZjT0liODJLYlpYOXc5RUI1cHhjMEl1QwpkUlhGYWhQcEpVbmlCZ0c0TWpvRG1HbSs0SUJiTEV4TUI5MWY0WmtEYTg4V3ZXMzZVYyt4Q01taDhQL2pwVFlZCnN3RDR2YWpiYTM0K0phWGp4VTlUS3pza2tYRUJRR0VVeDVwMFlQQk9KeVJvcEE5RVZyUmpYRXFvMHZRWDZTdTMKS0xnUXo5Z0Mwd1hEbHdUclZCUysxdzhxMWoyWGovM3ozd3hoS3RpRTBEQ2dCSFZ5MDlUSU51MEtrVVFKLy81dwpVR1J4OURrcmV5MDlLaDlnV2dNTWNYTC82WE5LNUhDZGlNT3NFcm5kUTJKRVpSNUFHK29jMlhwMVIrNVppd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWxpaXEwUlVpVVBjSWtaMVZybQprVDFRT0FJYU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmZIYXlEV0xZMG51ODBlOGFaQTBnUHlMdkhtVHNtCnFFdUtrZHB3a0xOLy9uaE5CdDhFWS84MWVKSnBhV2ZvTFFtZnlCL3FSb1llSE9MRWQxQ0dxUS9sU0c1MGFKNmYKZUMyZThHT3ZkM1J0VjRSR3hzRHlTVXFKRWNmMFNaM1NML095THBtbWdkRjljUVJzTHVEdHFPWjhNMVc3TDBjNQovbTBOYWR0ajRhYUhEWlVqamR3Q1Iyd2tGN0xIZjU1RFMyKzRwVER3ZnZOYjdSR0QrdWNXUUtHbVNZR2ZPenpNCkpQZDFOM0dJSXMrQXpRYW1lZzRnK096S0lzeFl4Q3hpMDFtQVZDQ3VIdzJSakFIc21jNThsZ2R4bWpjcjRsTG8Kck1LTzVGblBJQ2xEMUthdlcwdW1zelhiczd4UE8yd2JmSzM5RVBmWDgxdy94L0YvM21TNHgveGkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "outbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROakNDQWg2Z0F3SUJBZ0lRVHQyN1FUem1SRkRQZXloaFJSbHNrVEFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05NakV3TVRBM01EY3dOakE0V2hjTgpNekV3TVRBMU1EY3dOakE0V2pBdk1TMHdLd1lEVlFRREV5UnRiMnBoYkc5dmNDMXphVzB0ZEdWemRHWnpjREl0CmMyTm9aVzFsTFdGa1lYQjBaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREMKTXFyT0QrbWlPRVd6WFM1Z2hqVWI2b3dSMm9XTHVPZW9wcmRLdTFaemxkbzJzTE16WVovUkV3K0V1VVhqK3VqTAo4TFN2ZnNEZXZwMVRZTUQ2WFYyY0t2TmNHQ3plaW1jZWZ0UmxDTU5mbDlUa3R4dDhOUVYrbHZLb3ljYlV1SEg3CmxJeVFBWXI0K3ZJNDFTM1NuTEdXWUpwcSt2MnkydkEwL3F1amswSjg4WjhyWjhYNWhIdUUvTncvMTRhZkF0RUIKYmlKdW9nYkRVRnRFTVAzQ2pqMTd2NXhiUStabDRnSEtrY2ZjL0hRVVEyb2VNYUhLNXR4aTBQc2dld2pxM0tabwpBY1pjK1Vsa3kzanlhUHlyNWJRRjg1TU52VmZPL3czcmQwS241MGVXeTl5a01YaEtkUXV5d2RLd3l0S2d6elRKCldjemZMS2hqRGowcVZMTms3MkpkQWdNQkFBR2pZREJlTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUUKRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBVwpnQlRKWW9xdEVWSWxEM0NKR2RWYTVwRTlVRGdDR2pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVhFNVYxUnc3CjZVZTJ4c0Q2TEptMFVSVVpwZFFBWkdZSEN2aG5xbUpSdnVXb01iKy9LcDJaVEx2WjFiZWtSb2pvZWkyalVaTUkKVEdBNXBxKy8yUUpKYWEyWVMwM3JlRjRIV2hNL2swWDJBSUNUdmtRODJFWWJqTjRXWGNCVDA4U28vT0R5dTlXUwp3SHY3ME13bWM1N1BLWGUzT0czeXMybGo2RlBjajZqaGNxeVBJWVEvSGZzKzZraUh6SVNGbjFrbklkMUhSWXVXCnA3dGNiNGRuMHk0dTYzZ2xPbnFaZUw0TXhmOXc3UjRkSmJKZkpKazUrWlc2SWc0NTRSTTJ6bHFjU0o2bFE2WWkKU2xWdHBRRnFVWE8rL3JONGhqV0pHazVOY0lLZUh0NVpPZHMzYUtxN0hCZForM1doR2dvVjQ1eEFhN3pHRENqSwpOSFoxbXBwLzg1YVJRQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  "outbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd2pLcXpnL3BvamhGczEwdVlJWTFHK3FNRWRxRmk3am5xS2EzU3J0V2M1WGFOckN6Ck0yR2YwUk1QaExsRjQvcm95L0MwcjM3QTNyNmRVMkRBK2wxZG5DcnpYQmdzM29wbkhuN1VaUWpEWDVmVTVMY2IKZkRVRmZwYnlxTW5HMUxoeCs1U01rQUdLK1ByeU9OVXQwcHl4bG1DYWF2cjlzdHJ3TlA2cm81TkNmUEdmSzJmRgorWVI3aFB6Y1A5ZUdud0xSQVc0aWJxSUd3MUJiUkREOXdvNDllNytjVzBQbVplSUJ5cEhIM1B4MEZFTnFIakdoCnl1YmNZdEQ3SUhzSTZ0eW1hQUhHWFBsSlpNdDQ4bWo4cStXMEJmT1REYjFYenY4TjYzZENwK2RIbHN2Y3BERjQKU25VTHNzSFNzTXJTb004MHlWbk0zeXlvWXc0OUtsU3paTzlpWFFJREFRQUJBb0lCQUZFT0NOQzlQNHpmNCtlNwphdElLOGp2V3ArUUR5MTNJTFpqdERPLzZSVmsxSU1GVysxVGsyR25SaE5hbTVnOEQrUXEyU3hRODJZK2ZDOWR6Ck9OakhBMzFkUi9vV2RSUGx2S2l6MHo3Z2EzdUl5ZWswckJvcG4wTjVDWXQ5dkttbzJwcGhKRkl1OHF4OVFZQ0wKS2ZjUVErYzZKdm1rRFNRTDBkcXN1VU1yQWNOWDg5SDJneDUvNktNK1hrSzU1QVNBck5Fc2p4U20va1BjMGdNYQo1Njl1NkhLekpnY1VxaGRpQkRPVmk3S3ZrN1lnWnFWdWJDSXJNSDM2QWZIVzRFTEI5dktWaTlRVGsrcjkxYlRtCjcxQzUzTG1najRER0ZYVVFPbTVtakNtaUM4Z0t0SGVYbHRVVVp0MUlJb1NsYlN1L21uakpGa3V2NU9oczJWMUsKU2QwVjM0RUNnWUVBMFZrOXNScmoycDV3ZitWaUVxTHFBSUt3cEEreFYrdXBYNGRMY0VNRUFJakJjOWNYbFFrSgpLdmJmbWx4Y2xpcUhqQzZaSmVSVnVXM0VETTZDRnlFOVNObTc0WFl2QmMzcGpYdjVkeEtGclZjdVVLa0pnYmpJCmtBL08rY2dCeXQ1SHFQQmxjaTk4cFdYeC9TQTJ4Ylp1L3FRa2tYUzJmU2cyQ0VtbUdYMDJ3dzBDZ1lFQTdYa2YKTWsySnZybS9iVWhSOEZ2Mk5raFZpTEVOcXZxRFR4R3loWEpORnNUZ1kvcldBQTJkVndiM084Z2g0QkY5SitqRgp2MEoxTDEveEdVSjhQMGdkR0JJd2tpeG4velYxdnBiNnZiTGxFMXY0aENLNkdzQXdubm9TMXFQQlJqSVo0YWtYCkNqSy9yNW5ZRFprS0IyYk5pZWNiY3Ftd0RvT2U1VGJsK2NOOGlKRUNnWUJXeGxQZy9sRm1BL2lEdXZQYzM3UjUKQTdMdVBpYjNWNUo4SzF0a3JCS1RtaHY5eFRGY01FT2hrSFQ4eWI0QzdKd0V5aWZtNGU5Nmpmb09pT2E1YWFpNgpjcTRDOVhibVJBVEVCWmhROTlkN0UwRDZaQ2F4bzROVzI0YWlXSG9OdWZjZ0dvMGlPSGJGSkMyYkMyaElxYWIyClc5bGdoVzFERVpEYi9KTWh5NW9RWFFLQmdRRE5sRUNVakptRm1rb0U4a20xR2ZlUTBKZnppTXM3VERtbWxyeUUKV0FveWZ1ZCt4aVRDMFFaMzA1anVrUGY2Z1VsbTVsVmltTWJYNTJmU0pVTm9pU1plczBpSEVwaEpVRitKU2l6eApVbENMck4vOGpBK3VudGk0S1JmcjVzR240akdUc0kwNGoreHZ1WEJYZlRnNFpoL2psVVdtd3cyZDB3WVlpcWtXCnlzd2hjUUtCZ1FDa0o5Z1NrOFBZZkk3K3lxc3pNb3BFSFNYbjZQMGV6UXk4TjVRMGhFYm52ZjMvZjN2ZStESzEKY29SZGdkRnlMYUlDOHJyend4U3ZSOWNKMTBHTklLU3R1ZlM1SksvUEdEUzhUU0xsL1JzNmVBR1N6ZnVvamtwbQpyV0Y3OW5ybGdxVVEzbUJRNUZ1OWZJQmV2ZGJLb1M1UC9ld3l4Y24zdGNMSWJYYThuclVIekE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-sim-testfsp3-jws-priv-key
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp3-jws-priv-key
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
data:
  # Note that due to a bug with helm 2.9.1 the `required` function in combination with a missing
  # key will not work in place of this if statement.
  "private.key": LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV1d0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktVd2dnU2hBZ0VBQW9JQkFRQ1pLWERWRkk3MDNmdksKU2REbkZ1a1dDNkViUWlwTlNnK016elp2dCtFL3lua0JPMzVRSzRFOVozUmdPV1M3NEd4TUkrSytoNms0KzNaMApYUUpqSkFqOGRQZXNlckNNblRnVGhRNzZmWjVrRGkzWXRkb0ZveHZOVlFoVFZCR2U0c29vY2IvSDZYS29VWFZICnFESTRKK0tpVzR0L2J6M09uVlJoSEl6Q2RuTTVrR0ZRblhjaFdnTDN5bWh1ZVU4bTJkNjUzMkdxc0ViaEM5ZFoKRDNjYm83NTdVWkFuNFRaVWdpVFZTbFkwN2U0blV1bFV2VlYwK3BRbWpaTXdCUU54b25CVmtGUVd1aXRyYk1WaApaWUVZVUw1dEIwN09BZk4vcDJMY3h1bUNKNDlkR3FMdkMwVnlNc0dRa1ozZFM5a05LeC9zUDY3eGxTbDlZZUNJClBOOTV3eGNGQWdNQkFBRUNnZ0VBQitFUTRoLzg5TzNlK1NHcEFQaVpUeE9VRkFrRXlUSXoxQ1I2a0lzdE5oRUIKNGlWWXp5a0JWMkQvM1laOWNPeGsvcjFOM1dnR1VnZ0NHbFlsUEV0TzFVSms4Zy8vOGphUk5FWVdacDU4Mm5rUgptRVdqaktXVU9SOHB1MEpZZFVUTTBWYTJDWXJheVVNR29QWFp6TnRQaUN3NXEwQzNweWNSRGRuZ1FNYUtncmE3CmtqMHBPSVRIcGdONGJDUGV1dEtBWDUxNGFEK25vYko0VU9qY1djQWVtdW9NNFpTbC90cVp6aVhBSGkzRGp1SUwKalRmZUJLYWU3dFZpVXVRUHd4Y0NOZmZUQXNLQWxJMEJhRDEwZmIxZ3p3TFprWTRFOExUaGxJUjNQazZCZFBsQQphYjBHdTlydGdJYlBKbk5GcDVRV01WZWxXKzJXRjJxV2ZzenUySGxvRlFLQmdRRExoTGg4eHNQMmlvR1dMeUZsCkpLR0R6eU5ZbitNQzNaV2FOdHRzcHJsK2hCWFJNR1hmTURsR1NKMFdBSFlEZ2pNSkljWnFVbVBHR2NoUWt3QzAKUW5UZVJiRkxTbHpWb3JtcVlWeEpxcmxOczN0MEtScWFycTFTM2FGRVBRSS9hTEJqc3VYRmxIZWdkcExKSFFXNgpleFp2VTQrU2hTK0xNWmV1L3l3cXNVSXFnd0tCZ1FEQXFHM21GbVkzTllaTEFBMllXc3hVMmJReUhncW5LN0NKClhaeForRkUrMlhvMkVxQU1NM2ZKajVJU2hsQ25qRTdjaU10MWh5aWdLVFpsS0lpTzdpT0NBaVowUDRYT1p1T0EKcDN3UUVGQ2pmbDdtalRYajc1THpXVGxhKzkyQjF0MnRIaFlYZGQxeTNNM3ljaThVSzc2TXhDWnJLL29sNG9ONQpVaEVIUWFlaDF3Si9YUU5MVGJ1SjFDTjVGaXAwR01XbEM1aWZqdUdEM3N0bWxCUitOQ24rbk5QQkpObjV0UWRWCkpjb0tBUVEwNjJXVjdaYUNHQldQZy9wRWtvNmN3OFdiby9vMkRUTHZPclFrSnJwWWMxS1RYZStwZkcxTXUyVVoKMGNWNDdyYnpVQWVJbGdncyt4L2ZqSGFrbjBXa1dKWG9xdmlGcFhFNVNXUmc3cG13bGRKdGF3S0JnUUNFajkvKwpuNDc1a2dTemVuZmdTeW1wZ0pxeW1XVXZIYXE4K2dKcERhbXBteTZ5SWlLcUFvZjcwcVBweHkyYis3a1BtYmlWClI4aTJXMlVvT2Jtc3owTHpZOU5kelkrZU04RjZkc093c2VrcWRmdUttOE5tOFNPbCtkQ3pQL1pzTHBJZFdrUk4KSkRhWm9FQzgvOEJSR3NCa1QxczRCdXg2UU4vQ0RLdlcyR0FseFFLQmdEY1REYlN4aG15TWpESnI1cDFveTRyZQpKdTBiTXRGeWY5NUIybXFNdzc4MUpvS3hYSGZITkJ3dEhna3UxSkhTS3RUUkNIN3c0dW9Mck4rZERYZDY4UTZiCnFtSjRLTkwrOGFjMnNKV095aldQMmJCNjIvWXF4L1hjRkpYSGJmbnZTRVhSR2F2K0QvYXEzeGttUkR3YTh3cU0Kem1WUWFla1JsNFhiWkE4K0Z2Z3cKLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQ==
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-sim-testfsp3-tls-creds
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp3-tls-creds
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
data:
  "inbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQVBPVWFMYmN4aXpvNFVLbitHQkF6dWN3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JXOXFZV3h2YjNBdGMybHRkV3hoZEc5eU1CNFhEVEl4TURFd056QTNNRFl3TjFvWApEVE14TURFd05UQTNNRFl3TjFvd0hURWJNQmtHQTFVRUF4TVNiVzlxWVd4dmIzQXRjMmx0ZFd4aGRHOXlNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6cU45cVJueXk0MTVMQ21nOE9YSVowbFEKV3NrU3lCOWswSmUweVVSV2hlYjNZNEdJcWFQYVgyYlpSVVd1Z1o5VGZjT0liODJLYlpYOXc5RUI1cHhjMEl1QwpkUlhGYWhQcEpVbmlCZ0c0TWpvRG1HbSs0SUJiTEV4TUI5MWY0WmtEYTg4V3ZXMzZVYyt4Q01taDhQL2pwVFlZCnN3RDR2YWpiYTM0K0phWGp4VTlUS3pza2tYRUJRR0VVeDVwMFlQQk9KeVJvcEE5RVZyUmpYRXFvMHZRWDZTdTMKS0xnUXo5Z0Mwd1hEbHdUclZCUysxdzhxMWoyWGovM3ozd3hoS3RpRTBEQ2dCSFZ5MDlUSU51MEtrVVFKLy81dwpVR1J4OURrcmV5MDlLaDlnV2dNTWNYTC82WE5LNUhDZGlNT3NFcm5kUTJKRVpSNUFHK29jMlhwMVIrNVppd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWxpaXEwUlVpVVBjSWtaMVZybQprVDFRT0FJYU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmZIYXlEV0xZMG51ODBlOGFaQTBnUHlMdkhtVHNtCnFFdUtrZHB3a0xOLy9uaE5CdDhFWS84MWVKSnBhV2ZvTFFtZnlCL3FSb1llSE9MRWQxQ0dxUS9sU0c1MGFKNmYKZUMyZThHT3ZkM1J0VjRSR3hzRHlTVXFKRWNmMFNaM1NML095THBtbWdkRjljUVJzTHVEdHFPWjhNMVc3TDBjNQovbTBOYWR0ajRhYUhEWlVqamR3Q1Iyd2tGN0xIZjU1RFMyKzRwVER3ZnZOYjdSR0QrdWNXUUtHbVNZR2ZPenpNCkpQZDFOM0dJSXMrQXpRYW1lZzRnK096S0lzeFl4Q3hpMDFtQVZDQ3VIdzJSakFIc21jNThsZ2R4bWpjcjRsTG8Kck1LTzVGblBJQ2xEMUthdlcwdW1zelhiczd4UE8yd2JmSzM5RVBmWDgxdy94L0YvM21TNHgveGkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "inbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROakNDQWg2Z0F3SUJBZ0lRRVhCcFhBOXUreGl3U1MyZGlHN1lOekFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05NakV3TVRBM01EY3dOakE0V2hjTgpNekV3TVRBMU1EY3dOakE0V2pBdk1TMHdLd1lEVlFRREV5UnRiMnBoYkc5dmNDMXphVzB0ZEdWemRHWnpjRE10CmMyTm9aVzFsTFdGa1lYQjBaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFAKREpmTTkrbmFnTGpUNTd6ejdnV0VlVWJCdFRUeXlnL3djWmtWMi9XNy93U2ZWSGlUQkNLSHBHWHZrbEUwVGtsZgpCWmhzbkUzY3QrdGNOQnNqTUNjeUtzSU5Ib3k4OURjL0RQOXNiNkZWQkZLc3BUTE04VVpVaDhSVUxYakZjSmNPCnhzMDJITUFsRTF6R241S01nOVdQSDBLczBEdlZIVXpjT2xDZGtBckNCNHhLOWdDdzBCb3ZKYXR5QmZtSXZrSysKME5SVFlWLzQvT0lMQmFTOThBdUhZRUR5UzRKb01DaHcvNzVrNkFpN3ZwOEp4Tk1pQzdXVHFqT0RUS3IyS0VYNgp5R1Q0c2x3T2tUd0NETldZMGxDUXgrVkhsL1pUY296ZUNJeTc0YmNvUWNZQTJGRWRIZ0wyMGVwa1Rqb2J0Q2RNClY2UWVTd1lQaVcxRUE2VUJzMXRwQWdNQkFBR2pZREJlTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUUKRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBVwpnQlRKWW9xdEVWSWxEM0NKR2RWYTVwRTlVRGdDR2pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVAwdU0rR0tZCktneVczb3I3NjFyVVYzNG4waXlVdlFCR1lnUFJ2cE4zMnJDMDVuZk5zQ21HRmZZU0NNbEpXTGlxTUt5T1hLYzAKNkVWMlFGenU5VWx0bTdJdWd0N3NwaVIvdHVzL3BlK2FVdU1TU3BXTTNvRTdyYUVjbmtjSW9IeTQxZllrQmUvWApGQmF3N0ZrUzZZNnQ3TEhQbEREQkFZOWt3Mk42VktUS0VkbXp4R1cwdnJZMnhVRS9ETklvQTV0N2MzR3l0dE9WClpmdHJ1eHVUYnhvamtYT1FhaktnY0N5blJTOTVJTzRRcXlacmtSYndQRGIzUFVncnhobmFmVllvYnZlSm1vNisKcnNGQU1kdTZDY1p0WXk4dlJMeGF4U0lxMytpaFhyK3ZDak9kVG5nSkNabGg1d0pRWUNaaElzc1VobmlmTndtRApIN1ZUVWZBVERPVW8rZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  "inbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBend5WHpQZnAyb0M0MCtlODgrNEZoSGxHd2JVMDhzb1A4SEdaRmR2MXUvOEVuMVI0Cmt3UWloNlJsNzVKUk5FNUpYd1dZYkp4TjNMZnJYRFFiSXpBbk1pckNEUjZNdlBRM1B3ei9iRytoVlFSU3JLVXkKelBGR1ZJZkVWQzE0eFhDWERzYk5OaHpBSlJOY3hwK1NqSVBWang5Q3JOQTcxUjFNM0RwUW5aQUt3Z2VNU3ZZQQpzTkFhTHlXcmNnWDVpTDVDdnREVVUyRmYrUHppQ3dXa3ZmQUxoMkJBOGt1Q2FEQW9jUCsrWk9nSXU3NmZDY1RUCklndTFrNm96ZzB5cTlpaEYrc2hrK0xKY0RwRThBZ3pWbU5KUWtNZmxSNWYyVTNLTTNnaU11K0czS0VIR0FOaFIKSFI0Qzl0SHFaRTQ2RzdRblRGZWtIa3NHRDRsdFJBT2xBYk5iYVFJREFRQUJBb0lCQVFDZXQvbWFUNlcrTVpUKwpKSlNOcmJZZkVsVHlZM1crZExWNVRhdmJ2TzJJZXZyUkpSRDFLbU5KOWZXS2pIQ2hseTNab05GeTJQTTdNdVpDCm5WTDhTNHFRZzRTVVNBbjlRMzBpWVZWZ2k4WnlCTWxYdlovT3lWcHZyRkFOYzNvMGFKWHo1dVFqQ2pFbGVzMVIKR2J4ZTZTVUovUjNBbWpSenIyMWZHWGo1QUJXdkhIY1JNaFU0L0hUVmpZTDFCcUtmZ3JrN2VROWo2SWlxeUM3eQpMNWJvUk5PM3lUUk1RSnFWRHVSZlJRUC8welVkRk5sMjB6YTM5Y0l1YUJTcTNBRHpQSkVLQThSVWwxRVJ2ZkZwCkJwWXVRazRXNHhKOTA2RTBKOWVYa0YyL2g4SUtNR2NJV0tmejRHeGsyZkFtRDVET3FIRzl0Z1pqRGRYZGdmaWgKeEp4eU9XYTlBb0dCQU9CN2NsV0dlWTBrVDIxZ25lZ0ZBazZyaGs0Q1dVWVdVZUhDRkdsa3p3Unl1SVNUMkxvLwpLekZXRXJzSTJEd3l4RkEvY2ZxYm5mYmRMbmJIbVUwSUFRcWpKTTVESXJZUUhQb3BqQVZmZXNLbHR0OVVmMWlqCkdsQXQyOXhLYk81aFV4YXN1Uk9Oa2NoT2d4REVTMGFEWVhPTXZGZ0hYMGtSdHA3OUZUdDd1V3JqQW9HQkFPd2UKalZVNkhhZG03Rys4MGlnSlhadmhCQmsyd1Bram8xL1RpOUZmOHNaS280djVLYXVocHJiTUhxZE1KWis0OXEvbApBWXdSdHpWSVViNWhJSlV5UjRReVpxc2xZYmZRS1ArMjhYdHBzOGlpWkVEb0hVc3FmMGY2WWZQUUxuMzVLd1Z3Cjd6UExkZDQ1NTNSVUtoSkxqUUp4M1JUYmduWnlGM0dBaFdFMVJiWkRBb0dCQUpkTVBJeE9QV0NXcDMzMXo1ZlEKd0hSYmdRTFU3R3lqb0g2RGU1UnBZR29FRkQ4dkVyUzgzSlM5Q1pUTDZrbndnWVlBclFhV21nb0htMGh0VVBLdApRVjUxQk5xTVB6bnNkRXRiYzBjdnlpS2s1RE56MVB6ZHVWOXUrUzlwYmkvZ29zcTJrV3NQVU1GcndVU3N1SHVICkUwaDVBM3hsUTZDUThzQUhuYWJneGVDM0FvR0FCaStpdWtua2Z2OUdVSU1jNm1tY1p6b1U5bWdsMUNFbjVablEKUHZNSmxFSmVXSXQxbVFhS0xKM2FhNzJsK3JKSTNFRGVzb0hBVUFnT0JEUGRPNnR1ampzWHo0SVNObE9nejFwRwpwMW9VbUx3UWJsYm1kWkt1ZFA5TlU2cnZuT05MU2tBME5DSXZlMXYvQVdBM0hmV1d3eXFpaFNwZkY2VlRrZWl4CkZlUGthS3NDZ1lBdlhGTEd3eTNmNzcvWmRPNE1pYkMvbFBMT25pazBtTkdpMWNhRHoyd1hTN2VZekxmcHd0cm8KSyt2c3BMcXUwU3M3K1lxR0NxY0ZvTVZ2Y0dNZURXcUFxV2JMb2hjamFxL25kS01iZnhPVFFHVmlUWUlvYkoxeQpwRkgxUUMydm9QemVUZ0NHYy90eEFSQjZqNWlHdkxpOGd3dXpWYkxLalRvMWFKWU1VUXRHU2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  "outbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQVBPVWFMYmN4aXpvNFVLbitHQkF6dWN3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JXOXFZV3h2YjNBdGMybHRkV3hoZEc5eU1CNFhEVEl4TURFd056QTNNRFl3TjFvWApEVE14TURFd05UQTNNRFl3TjFvd0hURWJNQmtHQTFVRUF4TVNiVzlxWVd4dmIzQXRjMmx0ZFd4aGRHOXlNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6cU45cVJueXk0MTVMQ21nOE9YSVowbFEKV3NrU3lCOWswSmUweVVSV2hlYjNZNEdJcWFQYVgyYlpSVVd1Z1o5VGZjT0liODJLYlpYOXc5RUI1cHhjMEl1QwpkUlhGYWhQcEpVbmlCZ0c0TWpvRG1HbSs0SUJiTEV4TUI5MWY0WmtEYTg4V3ZXMzZVYyt4Q01taDhQL2pwVFlZCnN3RDR2YWpiYTM0K0phWGp4VTlUS3pza2tYRUJRR0VVeDVwMFlQQk9KeVJvcEE5RVZyUmpYRXFvMHZRWDZTdTMKS0xnUXo5Z0Mwd1hEbHdUclZCUysxdzhxMWoyWGovM3ozd3hoS3RpRTBEQ2dCSFZ5MDlUSU51MEtrVVFKLy81dwpVR1J4OURrcmV5MDlLaDlnV2dNTWNYTC82WE5LNUhDZGlNT3NFcm5kUTJKRVpSNUFHK29jMlhwMVIrNVppd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWxpaXEwUlVpVVBjSWtaMVZybQprVDFRT0FJYU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmZIYXlEV0xZMG51ODBlOGFaQTBnUHlMdkhtVHNtCnFFdUtrZHB3a0xOLy9uaE5CdDhFWS84MWVKSnBhV2ZvTFFtZnlCL3FSb1llSE9MRWQxQ0dxUS9sU0c1MGFKNmYKZUMyZThHT3ZkM1J0VjRSR3hzRHlTVXFKRWNmMFNaM1NML095THBtbWdkRjljUVJzTHVEdHFPWjhNMVc3TDBjNQovbTBOYWR0ajRhYUhEWlVqamR3Q1Iyd2tGN0xIZjU1RFMyKzRwVER3ZnZOYjdSR0QrdWNXUUtHbVNZR2ZPenpNCkpQZDFOM0dJSXMrQXpRYW1lZzRnK096S0lzeFl4Q3hpMDFtQVZDQ3VIdzJSakFIc21jNThsZ2R4bWpjcjRsTG8Kck1LTzVGblBJQ2xEMUthdlcwdW1zelhiczd4UE8yd2JmSzM5RVBmWDgxdy94L0YvM21TNHgveGkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "outbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROakNDQWg2Z0F3SUJBZ0lRRVhCcFhBOXUreGl3U1MyZGlHN1lOekFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05NakV3TVRBM01EY3dOakE0V2hjTgpNekV3TVRBMU1EY3dOakE0V2pBdk1TMHdLd1lEVlFRREV5UnRiMnBoYkc5dmNDMXphVzB0ZEdWemRHWnpjRE10CmMyTm9aVzFsTFdGa1lYQjBaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFAKREpmTTkrbmFnTGpUNTd6ejdnV0VlVWJCdFRUeXlnL3djWmtWMi9XNy93U2ZWSGlUQkNLSHBHWHZrbEUwVGtsZgpCWmhzbkUzY3QrdGNOQnNqTUNjeUtzSU5Ib3k4OURjL0RQOXNiNkZWQkZLc3BUTE04VVpVaDhSVUxYakZjSmNPCnhzMDJITUFsRTF6R241S01nOVdQSDBLczBEdlZIVXpjT2xDZGtBckNCNHhLOWdDdzBCb3ZKYXR5QmZtSXZrSysKME5SVFlWLzQvT0lMQmFTOThBdUhZRUR5UzRKb01DaHcvNzVrNkFpN3ZwOEp4Tk1pQzdXVHFqT0RUS3IyS0VYNgp5R1Q0c2x3T2tUd0NETldZMGxDUXgrVkhsL1pUY296ZUNJeTc0YmNvUWNZQTJGRWRIZ0wyMGVwa1Rqb2J0Q2RNClY2UWVTd1lQaVcxRUE2VUJzMXRwQWdNQkFBR2pZREJlTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUUKRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBVwpnQlRKWW9xdEVWSWxEM0NKR2RWYTVwRTlVRGdDR2pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVAwdU0rR0tZCktneVczb3I3NjFyVVYzNG4waXlVdlFCR1lnUFJ2cE4zMnJDMDVuZk5zQ21HRmZZU0NNbEpXTGlxTUt5T1hLYzAKNkVWMlFGenU5VWx0bTdJdWd0N3NwaVIvdHVzL3BlK2FVdU1TU3BXTTNvRTdyYUVjbmtjSW9IeTQxZllrQmUvWApGQmF3N0ZrUzZZNnQ3TEhQbEREQkFZOWt3Mk42VktUS0VkbXp4R1cwdnJZMnhVRS9ETklvQTV0N2MzR3l0dE9WClpmdHJ1eHVUYnhvamtYT1FhaktnY0N5blJTOTVJTzRRcXlacmtSYndQRGIzUFVncnhobmFmVllvYnZlSm1vNisKcnNGQU1kdTZDY1p0WXk4dlJMeGF4U0lxMytpaFhyK3ZDak9kVG5nSkNabGg1d0pRWUNaaElzc1VobmlmTndtRApIN1ZUVWZBVERPVW8rZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  "outbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBend5WHpQZnAyb0M0MCtlODgrNEZoSGxHd2JVMDhzb1A4SEdaRmR2MXUvOEVuMVI0Cmt3UWloNlJsNzVKUk5FNUpYd1dZYkp4TjNMZnJYRFFiSXpBbk1pckNEUjZNdlBRM1B3ei9iRytoVlFSU3JLVXkKelBGR1ZJZkVWQzE0eFhDWERzYk5OaHpBSlJOY3hwK1NqSVBWang5Q3JOQTcxUjFNM0RwUW5aQUt3Z2VNU3ZZQQpzTkFhTHlXcmNnWDVpTDVDdnREVVUyRmYrUHppQ3dXa3ZmQUxoMkJBOGt1Q2FEQW9jUCsrWk9nSXU3NmZDY1RUCklndTFrNm96ZzB5cTlpaEYrc2hrK0xKY0RwRThBZ3pWbU5KUWtNZmxSNWYyVTNLTTNnaU11K0czS0VIR0FOaFIKSFI0Qzl0SHFaRTQ2RzdRblRGZWtIa3NHRDRsdFJBT2xBYk5iYVFJREFRQUJBb0lCQVFDZXQvbWFUNlcrTVpUKwpKSlNOcmJZZkVsVHlZM1crZExWNVRhdmJ2TzJJZXZyUkpSRDFLbU5KOWZXS2pIQ2hseTNab05GeTJQTTdNdVpDCm5WTDhTNHFRZzRTVVNBbjlRMzBpWVZWZ2k4WnlCTWxYdlovT3lWcHZyRkFOYzNvMGFKWHo1dVFqQ2pFbGVzMVIKR2J4ZTZTVUovUjNBbWpSenIyMWZHWGo1QUJXdkhIY1JNaFU0L0hUVmpZTDFCcUtmZ3JrN2VROWo2SWlxeUM3eQpMNWJvUk5PM3lUUk1RSnFWRHVSZlJRUC8welVkRk5sMjB6YTM5Y0l1YUJTcTNBRHpQSkVLQThSVWwxRVJ2ZkZwCkJwWXVRazRXNHhKOTA2RTBKOWVYa0YyL2g4SUtNR2NJV0tmejRHeGsyZkFtRDVET3FIRzl0Z1pqRGRYZGdmaWgKeEp4eU9XYTlBb0dCQU9CN2NsV0dlWTBrVDIxZ25lZ0ZBazZyaGs0Q1dVWVdVZUhDRkdsa3p3Unl1SVNUMkxvLwpLekZXRXJzSTJEd3l4RkEvY2ZxYm5mYmRMbmJIbVUwSUFRcWpKTTVESXJZUUhQb3BqQVZmZXNLbHR0OVVmMWlqCkdsQXQyOXhLYk81aFV4YXN1Uk9Oa2NoT2d4REVTMGFEWVhPTXZGZ0hYMGtSdHA3OUZUdDd1V3JqQW9HQkFPd2UKalZVNkhhZG03Rys4MGlnSlhadmhCQmsyd1Bram8xL1RpOUZmOHNaS280djVLYXVocHJiTUhxZE1KWis0OXEvbApBWXdSdHpWSVViNWhJSlV5UjRReVpxc2xZYmZRS1ArMjhYdHBzOGlpWkVEb0hVc3FmMGY2WWZQUUxuMzVLd1Z3Cjd6UExkZDQ1NTNSVUtoSkxqUUp4M1JUYmduWnlGM0dBaFdFMVJiWkRBb0dCQUpkTVBJeE9QV0NXcDMzMXo1ZlEKd0hSYmdRTFU3R3lqb0g2RGU1UnBZR29FRkQ4dkVyUzgzSlM5Q1pUTDZrbndnWVlBclFhV21nb0htMGh0VVBLdApRVjUxQk5xTVB6bnNkRXRiYzBjdnlpS2s1RE56MVB6ZHVWOXUrUzlwYmkvZ29zcTJrV3NQVU1GcndVU3N1SHVICkUwaDVBM3hsUTZDUThzQUhuYWJneGVDM0FvR0FCaStpdWtua2Z2OUdVSU1jNm1tY1p6b1U5bWdsMUNFbjVablEKUHZNSmxFSmVXSXQxbVFhS0xKM2FhNzJsK3JKSTNFRGVzb0hBVUFnT0JEUGRPNnR1ampzWHo0SVNObE9nejFwRwpwMW9VbUx3UWJsYm1kWkt1ZFA5TlU2cnZuT05MU2tBME5DSXZlMXYvQVdBM0hmV1d3eXFpaFNwZkY2VlRrZWl4CkZlUGthS3NDZ1lBdlhGTEd3eTNmNzcvWmRPNE1pYkMvbFBMT25pazBtTkdpMWNhRHoyd1hTN2VZekxmcHd0cm8KSyt2c3BMcXUwU3M3K1lxR0NxY0ZvTVZ2Y0dNZURXcUFxV2JMb2hjamFxL25kS01iZnhPVFFHVmlUWUlvYkoxeQpwRkgxUUMydm9QemVUZ0NHYy90eEFSQjZqNWlHdkxpOGd3dXpWYkxLalRvMWFKWU1VUXRHU2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-sim-testfsp4-jws-priv-key
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp4-jws-priv-key
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
data:
  # Note that due to a bug with helm 2.9.1 the `required` function in combination with a missing
  # key will not work in place of this if statement.
  "private.key": LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRREg1USt1eklkZjd5VFgKNEEyM1RUYUdTQ01VNmllS1VtZzJxc1JKMC9sbms1MEEwZUZRYjk4dXgvWFQ5MG9FcHFhOGRxcGxhN2xpYzNCSwpYZFdvVVlJK3ptYXV6ZXBURTNMMElaSkI3VnpRY1BmYlppRkc3T3JHUEFVdHh4ejRGQmJLU0E3RkpuY2hJQUVzCmJsc3l1Mm1ReCt6YmVham5RUzNQKzZvcURqZHl1VDVKeURqbmE3VUZhcm96eDFZWEV4d3lmS3NFdElQdU1oL1UKTC9xODBndFdiWEE5bkEzOHQ3dm1kcXhoaDRQTWRkSGdTRWw2S0syOXlxd0hzZ3BWZy81WWkwdWJoYmdMUWJIbQo2WGZsQlFLMDV0NUFxRDJqNWg5NGgvZGs5V3pvV2Z0OC9oYXhJM09xRm9hT09RbUhlbVNzM0tKbmRMK1B5ekw3CjZKQ01sc0hCQWdNQkFBRUNnZ0VBQ3NBNFYzV2pHMGNFbzRLbW9qTHFLWTgwS2RJTkpkeVlROFpyNzYrUnBKODEKREwvOC93TkJUT1lPdytOekxPeGNuOXErLzl6ckY4OHZIU1RPVXJMdGp4eXhPNW9TRGYxSUM3YkpnN2UxSy9YRApjdDZia0JHNmI4WjNIZGJ0YVM5RmFZUTJIU2JjTmVFZmh3ajVhVEZZdEdONFN2YVFYYjJzN2RoeWRyZ1VoZHcxCjFUeFhEaW83MjhCalJ2Q09leDRIMmxtSlNmbEdZd0hHSnB5MUM1UTh1cEFBTWhLTVAxMTU5OGk5Vnc3SkpJNHQKd1oydnYzdzcyOEFwblF6RElpTHpLTXZOdHZvRXdRN1BsblNldkw2VjRzWUFuc0FteDZaY3RFRXY2MzJuR1BxawpmNVhMbERhY3pjUkRjcEFDK255SktFUjdULytlbVdORmxWME1qK0pNUVFLQmdRRG5jUjBFelBSV0dDREJtSDhLCmUyaHp6UzBSbUxiMW5vdWhjRmI2RWlRUjRXVHZCOEJqQUp1ZjFCcnE3Z1gxYi9nR2ZXa1lQUy85QUtPSS9Kek8KWUhBQ2dRbXZUYUYyV01IY3ZoYjJGL1o5NmNLSXBzRCsrUklBUkNsdjdNU2ZiVEJWY0JYYndhYm9OL0I4OXNHRwo0KzA3Y2l5NHVDd2RLN3dKUDJnU3l5M0FzUUtCZ1FEZEd3REdwcFZkY0djNGNTdGxDS29HUW5UNW93Q2lkcVArCnBMZEY1ZDY5cExLYUZLRnpVaDkyZFVPd0xoNHFvbnVPZ0dHeTU3NEpFMG9uY0tuNzJlaWU2YmlFZXN1KzR1dVIKVGV1MnFyS2lIQlBEdFBsckJacllubHlFNmg5ZGZ0QWllKytidTBVek1TUDRXdGV2eHpGMHh5a0VMWHRsSlV4NwpmU2paN1VuV0VRS0JnUUMvcWRQUFF1L2hVRy9vQXlMS0NuTHcyMnhFVTBUSTJYaG14RUt6SzB6RnBmUFJZNGoyCk0rMnRDWmtWRHZMT1UrQ0JkMkFPRzdYZS9xVnZiMHRvT1VMcFAvVkdRTExDOERQelcxUm1qbWVwMUdrdWczSDIKZFV0ci93YVYwdXp0M2gyVjA1RzJnSU41Y2NIdHF1ZVBqcmZLYi80TEp6SVpJanZCS01wR0xnNkFzUUtCZ0FzMgozMmN6ODhkMWVBYkkxcWFkTmVKelpITjA3UWRRZFNqcE9kSjF3a0prSkJya2lQdk1Zb1FqbG5kTkg0S1NFeW83CklMbHVQNWsrUFRpYTRrUS8zU2lTT2lXZUJNOTl1dXozd3NqVkI1SnBVaWRPK29lUEZUZC9jTG5kRmhJcjZHcVgKVnFQVGI4TVU3dm9kd1dyTTg1azBzTVBoZXF5Nm81SnYycTZTOW5mQkFvR0FhaTM0TlVKYW0zckF3KzVFRjFmSQo5djFBUXhGbUNYMXhQYXdhRnF1ZEd4d29kK050clU1VDExTzA3Z0RPQzlWMVpkRFU1YnRUbEVvRGdEaXk1R05vCjlCdmU2eUN4cjJMN1phS05jY3creXVxVHJJekhENEpCcGFuSGphZlBDREIrYXVXMFUxbFA3UTdURFN6SjQyRTkKeXE4VjhGS0tqQVEyaGxHb1NWZkV2RzA9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=
---
# Source: mojaloop/charts/mojaloop-simulator/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-sim-testfsp4-tls-creds
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp4-tls-creds
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
data:
  "inbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQVBPVWFMYmN4aXpvNFVLbitHQkF6dWN3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JXOXFZV3h2YjNBdGMybHRkV3hoZEc5eU1CNFhEVEl4TURFd056QTNNRFl3TjFvWApEVE14TURFd05UQTNNRFl3TjFvd0hURWJNQmtHQTFVRUF4TVNiVzlxWVd4dmIzQXRjMmx0ZFd4aGRHOXlNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6cU45cVJueXk0MTVMQ21nOE9YSVowbFEKV3NrU3lCOWswSmUweVVSV2hlYjNZNEdJcWFQYVgyYlpSVVd1Z1o5VGZjT0liODJLYlpYOXc5RUI1cHhjMEl1QwpkUlhGYWhQcEpVbmlCZ0c0TWpvRG1HbSs0SUJiTEV4TUI5MWY0WmtEYTg4V3ZXMzZVYyt4Q01taDhQL2pwVFlZCnN3RDR2YWpiYTM0K0phWGp4VTlUS3pza2tYRUJRR0VVeDVwMFlQQk9KeVJvcEE5RVZyUmpYRXFvMHZRWDZTdTMKS0xnUXo5Z0Mwd1hEbHdUclZCUysxdzhxMWoyWGovM3ozd3hoS3RpRTBEQ2dCSFZ5MDlUSU51MEtrVVFKLy81dwpVR1J4OURrcmV5MDlLaDlnV2dNTWNYTC82WE5LNUhDZGlNT3NFcm5kUTJKRVpSNUFHK29jMlhwMVIrNVppd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWxpaXEwUlVpVVBjSWtaMVZybQprVDFRT0FJYU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmZIYXlEV0xZMG51ODBlOGFaQTBnUHlMdkhtVHNtCnFFdUtrZHB3a0xOLy9uaE5CdDhFWS84MWVKSnBhV2ZvTFFtZnlCL3FSb1llSE9MRWQxQ0dxUS9sU0c1MGFKNmYKZUMyZThHT3ZkM1J0VjRSR3hzRHlTVXFKRWNmMFNaM1NML095THBtbWdkRjljUVJzTHVEdHFPWjhNMVc3TDBjNQovbTBOYWR0ajRhYUhEWlVqamR3Q1Iyd2tGN0xIZjU1RFMyKzRwVER3ZnZOYjdSR0QrdWNXUUtHbVNZR2ZPenpNCkpQZDFOM0dJSXMrQXpRYW1lZzRnK096S0lzeFl4Q3hpMDFtQVZDQ3VIdzJSakFIc21jNThsZ2R4bWpjcjRsTG8Kck1LTzVGblBJQ2xEMUthdlcwdW1zelhiczd4UE8yd2JmSzM5RVBmWDgxdy94L0YvM21TNHgveGkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "inbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROakNDQWg2Z0F3SUJBZ0lRTU52T0xHWGpVd0NlMmVpTW0rYStHekFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05NakV3TVRBM01EY3dOakE0V2hjTgpNekV3TVRBMU1EY3dOakE0V2pBdk1TMHdLd1lEVlFRREV5UnRiMnBoYkc5dmNDMXphVzB0ZEdWemRHWnpjRFF0CmMyTm9aVzFsTFdGa1lYQjBaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREUKQ3hRaFhwaUY1MVIwRTNsQ3VQNmh3Nms4WlVmRm11cGlLOTZkTVgwNHNabXZBNkw1d0hQWXRFYXdMZ0dxaTVWSgoxVy9SdlZoWUEwQUxsSlpsdHRDeU5uMzBhYWUyMHkrU3lvNXdDVUY1djRheXZvV3h4dlZLQ0dGWFptUEhLK3ZpCkdPMmdiWnBjUUFmc082OHk4VFFMY1JjemN0Wm1zenR2NU9kdzRJM1djakFqcWZXdGhQV2dKNm1lb3c5VDA1RlIKYTZxR011WURmS0IvL1E0TU90Y3Z5bzYxM0tZdzczWll6UUFiZmlNRUMwQ3pIUldEV2lseWpKbGttRGg1Nkg1bwovdVk5UEw0alpsZWJjcUVLWmpvcHZFYy9ycHdHaG5mVk0xMk1GR1IvMVV3L25OUGZldjRFcnl5MHA3TFpKYmlMCldKQ2c3anZ2aFVsTGNVSnRUN3hsQWdNQkFBR2pZREJlTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUUKRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBVwpnQlRKWW9xdEVWSWxEM0NKR2RWYTVwRTlVRGdDR2pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXJ6UWExbnhjCkE5cFBYRmNsUDFNZVpaV0tQOGVXenJ3QmN5YWZNaWlBbjN1VGtMZXRDVHordE5ncGh5ZWRMTDlZcHJFMmQ0UVYKaG9qUlk2REF4N0tjZFAvMDFXSkZXUnB1czh2dlNlMVYybTB4UVBEdm92dHZqaFUrN2VoTFRmNUZXU05DZkhoTQpuQTJWME1SSHdXMmlXRFUxVTZsN09jOGppS3NJL05YWUt6L0FVR09ORktrZnRkZ1dRUEdycTZocm5xTFFocVBrCjg2OUxLVC9uK3Vpck4vYjZsWFdzaytBV0VrVFJNdjlTUW5vYlpaa2VRbHA3V3pzSWF6YS9WMVZBMlBkRU1GU1YKZEpKUjBpR2ErRDhJbFVsYldNNEpUY05pUWNXbnFvd2JRbFlCMlBEM0djazBqdUpzUXN5K2paT2Yzalc0bk1nNQpaNEZXbHBGY0UvVVlTdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  "inbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBeEFzVUlWNlloZWRVZEJONVFyaitvY09wUEdWSHhacnFZaXZlblRGOU9MR1pyd09pCitjQnoyTFJHc0M0QnFvdVZTZFZ2MGIxWVdBTkFDNVNXWmJiUXNqWjk5R21udHRNdmtzcU9jQWxCZWIrR3NyNkYKc2NiMVNnaGhWMlpqeHl2cjRoanRvRzJhWEVBSDdEdXZNdkUwQzNFWE0zTFdack03YitUbmNPQ04xbkl3STZuMQpyWVQxb0NlcG5xTVBVOU9SVVd1cWhqTG1BM3lnZi8wT0REclhMOHFPdGR5bU1POTJXTTBBRzM0akJBdEFzeDBWCmcxb3Bjb3laWkpnNGVlaCthUDdtUFR5K0kyWlhtM0toQ21ZNktieEhQNjZjQm9aMzFUTmRqQlJrZjlWTVA1elQKMzNyK0JLOHN0S2V5MlNXNGkxaVFvTzQ3NzRWSlMzRkNiVSs4WlFJREFRQUJBb0lCQVFDNFYxYUpma0xiZnNmYQpFa211NVBlQ3N0SmJHVDFnNGFmTndrU2srVmt2UzBrZzJjR1JLVmVGaVJjREtXK2xwM1VzcFVkdEtLZCtzeWV3CisvcGtFSUN6WXl3Uy9KcVkvb0k0Zk1GdE5qYmNQYTF5UEZiSThUWExkSS9idUVyUWlVdFlJbXFudFFnMkFIdXkKdGZpclpVVzBFSlpwYVcyVHlxdDBMd0UyRWVFdHFES24wM3hXd3ZIR2tlOE9yYXg4K2EvQ0xieUw2RUpKYlN5QwprNDd0dWVjdjl5ekhER2JERHNyL255RlB2VnpHb2Ryd210Yms1amQxY01UTW43WGlVYXJKVUZNcHBiSytlYVc0CjB2dnV4OHl5N3hNelh4SlBNeHErcVA5L3ljNVhzaUQ2ekF1dm9ZSlp2dDFpZ0pkYU1KQW9HdjUvODd5cE00WW4KZ1E1bWcweHRBb0dCQU4yU0NpUEt3dWNPVFd3RWJlaGRjLzVidHIvaVIzRWtUK2diVVBkTStWaDFOVHBmMnQ3VQpqOGFISi92R1ZOQnhpNDdmNzJGeTY4ZEVYSlA5SWhGY0hLSjRvM0x4SUhHZ2VvMDJnSGpOTHg4T3pFV2s3NzQyCmQ5cWRid01DaEF6T2FTaXFvR0xRYnNPQWptV1FBSFhaTU8xZTNDOC9vbzR4YWZDV2xQREI3d0piQW9HQkFPS0IKbEpIWk1Kako5Yk4vdmhzVlBPM3k2YjN5ZStkei9MZ2c0RWFEdTBxSld1UEtZNXdteW9nUTZYSEtocXNpZ1JWNgpJNlBTa0JiQUtldjd0R2VudjkyYTA2bFRqejBZT0VuaUs0c3lRT2hmSVFRM01LWng2ZkVES09tbk5PYVN3QlJLCmM3d09IYzROM01jbmRBbjBWbCtXSzlJSVloaWJ5LzhYeGorVmd2Zy9Bb0dCQU1WYWZSbWdVcllIY1VLVE4ycFAKUXkvK2RPcTVIRFZVeUsvUEZQRVJhTTgzcHUrVnpaZkk4VDg5eDRsbEFNcWhPRk5NZHlYdmZMK0N6b3NxWHh2agpWY1lKZWx5NUZkTGZ4QWpmME5MSXYvNEQ2a0xtUkh6Q2UwTUlFNGMweUhXM3JNY0NJOVdnSGVpWkt6eWZaU21UCkNSZUU5TTVJK2Z0NVhBbGx0c2d6bFRZZEFvR0JBTGR2ZjdXYU1od2F1d3dTY1JBWDVBOUVnWDNlS2ZBbzQ4cnUKZlJNK1RlaXdVbFpXS3ROa0t2T0Uxcm5iN2JJY3NIT0hSZU8vZkFlZ3VwS3RkczNYY2EveldtVXdFYm5GcXBoVApQVFp1alZoaTZpY3kxd2lGQ3BPd0htc1RpZWtOZ2RjczhJdWsxd2h2KzVPaDVQekd6MGg4SXFMblBTSjIwZitWCjdtekNGWjRiQW9HQkFJb3JHL3huaWkybTFFMXNSY25aVldJaEhPenFocW1RdVZ3dGRQZC9JbEhFWkZwdU9kNGQKRVFSeTZUK3ZENmM4QklkYkpkQkYxZFlnVm5IN2IzUFdVWGNlNzcyaUNRS3h1SnFNNDIzanQ1SHJvcTRSd0xDWgovbUZza2RzaG81RXRqRG1qYlBlMUJGaS81V1AvY1lNYkFCSkFWbkRzenREWnpBWVNvZk9ianhOSwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  "outbound-cacert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lSQVBPVWFMYmN4aXpvNFVLbitHQkF6dWN3RFFZSktvWklodmNOQVFFTEJRQXcKSFRFYk1Ca0dBMVVFQXhNU2JXOXFZV3h2YjNBdGMybHRkV3hoZEc5eU1CNFhEVEl4TURFd056QTNNRFl3TjFvWApEVE14TURFd05UQTNNRFl3TjFvd0hURWJNQmtHQTFVRUF4TVNiVzlxWVd4dmIzQXRjMmx0ZFd4aGRHOXlNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF6cU45cVJueXk0MTVMQ21nOE9YSVowbFEKV3NrU3lCOWswSmUweVVSV2hlYjNZNEdJcWFQYVgyYlpSVVd1Z1o5VGZjT0liODJLYlpYOXc5RUI1cHhjMEl1QwpkUlhGYWhQcEpVbmlCZ0c0TWpvRG1HbSs0SUJiTEV4TUI5MWY0WmtEYTg4V3ZXMzZVYyt4Q01taDhQL2pwVFlZCnN3RDR2YWpiYTM0K0phWGp4VTlUS3pza2tYRUJRR0VVeDVwMFlQQk9KeVJvcEE5RVZyUmpYRXFvMHZRWDZTdTMKS0xnUXo5Z0Mwd1hEbHdUclZCUysxdzhxMWoyWGovM3ozd3hoS3RpRTBEQ2dCSFZ5MDlUSU51MEtrVVFKLy81dwpVR1J4OURrcmV5MDlLaDlnV2dNTWNYTC82WE5LNUhDZGlNT3NFcm5kUTJKRVpSNUFHK29jMlhwMVIrNVppd0lECkFRQUJvMkV3WHpBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWxpaXEwUlVpVVBjSWtaMVZybQprVDFRT0FJYU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmZIYXlEV0xZMG51ODBlOGFaQTBnUHlMdkhtVHNtCnFFdUtrZHB3a0xOLy9uaE5CdDhFWS84MWVKSnBhV2ZvTFFtZnlCL3FSb1llSE9MRWQxQ0dxUS9sU0c1MGFKNmYKZUMyZThHT3ZkM1J0VjRSR3hzRHlTVXFKRWNmMFNaM1NML095THBtbWdkRjljUVJzTHVEdHFPWjhNMVc3TDBjNQovbTBOYWR0ajRhYUhEWlVqamR3Q1Iyd2tGN0xIZjU1RFMyKzRwVER3ZnZOYjdSR0QrdWNXUUtHbVNZR2ZPenpNCkpQZDFOM0dJSXMrQXpRYW1lZzRnK096S0lzeFl4Q3hpMDFtQVZDQ3VIdzJSakFIc21jNThsZ2R4bWpjcjRsTG8Kck1LTzVGblBJQ2xEMUthdlcwdW1zelhiczd4UE8yd2JmSzM5RVBmWDgxdy94L0YvM21TNHgveGkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  "outbound-cert.pem": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROakNDQWg2Z0F3SUJBZ0lRTU52T0xHWGpVd0NlMmVpTW0rYStHekFOQmdrcWhraUc5dzBCQVFzRkFEQWQKTVJzd0dRWURWUVFERXhKdGIycGhiRzl2Y0MxemFXMTFiR0YwYjNJd0hoY05NakV3TVRBM01EY3dOakE0V2hjTgpNekV3TVRBMU1EY3dOakE0V2pBdk1TMHdLd1lEVlFRREV5UnRiMnBoYkc5dmNDMXphVzB0ZEdWemRHWnpjRFF0CmMyTm9aVzFsTFdGa1lYQjBaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREUKQ3hRaFhwaUY1MVIwRTNsQ3VQNmh3Nms4WlVmRm11cGlLOTZkTVgwNHNabXZBNkw1d0hQWXRFYXdMZ0dxaTVWSgoxVy9SdlZoWUEwQUxsSlpsdHRDeU5uMzBhYWUyMHkrU3lvNXdDVUY1djRheXZvV3h4dlZLQ0dGWFptUEhLK3ZpCkdPMmdiWnBjUUFmc082OHk4VFFMY1JjemN0Wm1zenR2NU9kdzRJM1djakFqcWZXdGhQV2dKNm1lb3c5VDA1RlIKYTZxR011WURmS0IvL1E0TU90Y3Z5bzYxM0tZdzczWll6UUFiZmlNRUMwQ3pIUldEV2lseWpKbGttRGg1Nkg1bwovdVk5UEw0alpsZWJjcUVLWmpvcHZFYy9ycHdHaG5mVk0xMk1GR1IvMVV3L25OUGZldjRFcnl5MHA3TFpKYmlMCldKQ2c3anZ2aFVsTGNVSnRUN3hsQWdNQkFBR2pZREJlTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUUKRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBVwpnQlRKWW9xdEVWSWxEM0NKR2RWYTVwRTlVRGdDR2pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXJ6UWExbnhjCkE5cFBYRmNsUDFNZVpaV0tQOGVXenJ3QmN5YWZNaWlBbjN1VGtMZXRDVHordE5ncGh5ZWRMTDlZcHJFMmQ0UVYKaG9qUlk2REF4N0tjZFAvMDFXSkZXUnB1czh2dlNlMVYybTB4UVBEdm92dHZqaFUrN2VoTFRmNUZXU05DZkhoTQpuQTJWME1SSHdXMmlXRFUxVTZsN09jOGppS3NJL05YWUt6L0FVR09ORktrZnRkZ1dRUEdycTZocm5xTFFocVBrCjg2OUxLVC9uK3Vpck4vYjZsWFdzaytBV0VrVFJNdjlTUW5vYlpaa2VRbHA3V3pzSWF6YS9WMVZBMlBkRU1GU1YKZEpKUjBpR2ErRDhJbFVsYldNNEpUY05pUWNXbnFvd2JRbFlCMlBEM0djazBqdUpzUXN5K2paT2Yzalc0bk1nNQpaNEZXbHBGY0UvVVlTdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  "outbound-key.pem": LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBeEFzVUlWNlloZWRVZEJONVFyaitvY09wUEdWSHhacnFZaXZlblRGOU9MR1pyd09pCitjQnoyTFJHc0M0QnFvdVZTZFZ2MGIxWVdBTkFDNVNXWmJiUXNqWjk5R21udHRNdmtzcU9jQWxCZWIrR3NyNkYKc2NiMVNnaGhWMlpqeHl2cjRoanRvRzJhWEVBSDdEdXZNdkUwQzNFWE0zTFdack03YitUbmNPQ04xbkl3STZuMQpyWVQxb0NlcG5xTVBVOU9SVVd1cWhqTG1BM3lnZi8wT0REclhMOHFPdGR5bU1POTJXTTBBRzM0akJBdEFzeDBWCmcxb3Bjb3laWkpnNGVlaCthUDdtUFR5K0kyWlhtM0toQ21ZNktieEhQNjZjQm9aMzFUTmRqQlJrZjlWTVA1elQKMzNyK0JLOHN0S2V5MlNXNGkxaVFvTzQ3NzRWSlMzRkNiVSs4WlFJREFRQUJBb0lCQVFDNFYxYUpma0xiZnNmYQpFa211NVBlQ3N0SmJHVDFnNGFmTndrU2srVmt2UzBrZzJjR1JLVmVGaVJjREtXK2xwM1VzcFVkdEtLZCtzeWV3CisvcGtFSUN6WXl3Uy9KcVkvb0k0Zk1GdE5qYmNQYTF5UEZiSThUWExkSS9idUVyUWlVdFlJbXFudFFnMkFIdXkKdGZpclpVVzBFSlpwYVcyVHlxdDBMd0UyRWVFdHFES24wM3hXd3ZIR2tlOE9yYXg4K2EvQ0xieUw2RUpKYlN5QwprNDd0dWVjdjl5ekhER2JERHNyL255RlB2VnpHb2Ryd210Yms1amQxY01UTW43WGlVYXJKVUZNcHBiSytlYVc0CjB2dnV4OHl5N3hNelh4SlBNeHErcVA5L3ljNVhzaUQ2ekF1dm9ZSlp2dDFpZ0pkYU1KQW9HdjUvODd5cE00WW4KZ1E1bWcweHRBb0dCQU4yU0NpUEt3dWNPVFd3RWJlaGRjLzVidHIvaVIzRWtUK2diVVBkTStWaDFOVHBmMnQ3VQpqOGFISi92R1ZOQnhpNDdmNzJGeTY4ZEVYSlA5SWhGY0hLSjRvM0x4SUhHZ2VvMDJnSGpOTHg4T3pFV2s3NzQyCmQ5cWRid01DaEF6T2FTaXFvR0xRYnNPQWptV1FBSFhaTU8xZTNDOC9vbzR4YWZDV2xQREI3d0piQW9HQkFPS0IKbEpIWk1Kako5Yk4vdmhzVlBPM3k2YjN5ZStkei9MZ2c0RWFEdTBxSld1UEtZNXdteW9nUTZYSEtocXNpZ1JWNgpJNlBTa0JiQUtldjd0R2VudjkyYTA2bFRqejBZT0VuaUs0c3lRT2hmSVFRM01LWng2ZkVES09tbk5PYVN3QlJLCmM3d09IYzROM01jbmRBbjBWbCtXSzlJSVloaWJ5LzhYeGorVmd2Zy9Bb0dCQU1WYWZSbWdVcllIY1VLVE4ycFAKUXkvK2RPcTVIRFZVeUsvUEZQRVJhTTgzcHUrVnpaZkk4VDg5eDRsbEFNcWhPRk5NZHlYdmZMK0N6b3NxWHh2agpWY1lKZWx5NUZkTGZ4QWpmME5MSXYvNEQ2a0xtUkh6Q2UwTUlFNGMweUhXM3JNY0NJOVdnSGVpWkt6eWZaU21UCkNSZUU5TTVJK2Z0NVhBbGx0c2d6bFRZZEFvR0JBTGR2ZjdXYU1od2F1d3dTY1JBWDVBOUVnWDNlS2ZBbzQ4cnUKZlJNK1RlaXdVbFpXS3ROa0t2T0Uxcm5iN2JJY3NIT0hSZU8vZkFlZ3VwS3RkczNYY2EveldtVXdFYm5GcXBoVApQVFp1alZoaTZpY3kxd2lGQ3BPd0htc1RpZWtOZ2RjczhJdWsxd2h2KzVPaDVQekd6MGg4SXFMblBTSjIwZitWCjdtekNGWjRiQW9HQkFJb3JHL3huaWkybTFFMXNSY25aVldJaEhPenFocW1RdVZ3dGRQZC9JbEhFWkZwdU9kNGQKRVFSeTZUK3ZENmM4QklkYkpkQkYxZFlnVm5IN2IzUFdVWGNlNzcyaUNRS3h1SnFNNDIzanQ1SHJvcTRSd0xDWgovbUZza2RzaG81RXRqRG1qYlBlMUJGaS81V1AvY1lNYkFCSkFWbkRzenREWnpBWVNvZk9ianhOSwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: mojaloop/charts/quoting-service/templates/secret-jws.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-quoting-service-jws-signing-key
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.4
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-11.0.0
type: Opaque
data:
  jwsSigningKey.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV1Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktRd2dnU2dBZ0VBQW9JQkFRRHVCNUh1SFJINUJxSS8KICBWQUMvaXhtNmx6OGtKbWlnSUI1ak14THJoQjljZ3FNK3BiME8raXM4OFZSSGR4dHc4ZUtHM252clpZeS80bnNKCiAgejMycW80c09JTXFIV1RsWmdiVVJWSzRGQVVFWi9xbjYzVW5YSjFZVnFUNFVHZzMxQkJqMmMxSmRseEcydDRKVgogIER2ekdySTIvaWEvdDRnWVpDV3JRejZhOE9DbEJJYVh1MnQ2RUdGbnlzeVMrMVlEV3ROSUhPK3owbHZBWTlvYWQKICA1TVpQSE41MW8wNGVJb0xPMHRQZmt6MCtORHM0RUN3VVd1RkFnOHlvMWh4bnZTb0VSaUNBd0ViRmdxMndEZTErCiAgb0JoT3B1c2Q0VmFzdEQvVEVxTzhSaHJ3VG9kZGRPTUt6YXBKUHJRSnV2VGtycGtta1BPR0U4RGdJVkhzVUxMUgogIFVZRU1LdlRWQWdNQkFBRUNnZjk0TWVxNzd4cmNGZzhzU3FlNWVOSFlQMzl0dmFXeXFFN21ZL3NsdnBOREg1UGwKICBEL3AyMWFrUzE1NkUzMkJFSnVZUGsvVExpSTJrTVdqbnZiSHZOZ3I5dHE4eDNUb3lUanRyZzVjbHE4SHIxT3pvCiAgRm5GaXFrVkhNRlBGUFFaRVZVNjRDUVBBMzNEaXh1V2pNV1MzWUlOZkNBaW5FckJyeTBQaU5aR211RmkxSy93eQogIGUxejJGOVdmRzNJRUJFZTNOYWVYd041NVpQSnZlMEx0bmVKeTNZcU53TWcyRnBQS0JSSEZWNGxLVGFVL2hxaEMKICBOSzZIUW9FWE40WTlBUUhuNTNGbDhuMGlOTzNxeDBUYjdFdUdORm1aMnhUbHBES0FwOE0rQkE1UW01WURrYmQ2CiAgT294YkdqMll4Wm5jYkcrUnN2SUN0Vk1McUl5dHVidllSRVk5V0drQ2dZRUErSzY0eGhKeldWM2NHYzgvOTBrbwogIFRyeUdNQmoxbHk1VE5hMVl5T1F4bDV6NEdsYzBhSThhKzF2SkdFQUErYy9PRWhNUjhNUm4zK1FmVjJMSk9JNVgKICBWOFpvMkdlcjZMbjk5TEJkZFRoMkhYTDNNNjBjTWdzOE1ZR3VKNzVnNVIvVUhuSkJMbzdORnlWZGRDT01UM2hjCiAgQVlTRE4zWEN3OXljcVR3Mi9tSkhCOWtDZ1lFQTlRaWFDZlR0blhkak1xTGVZYnAydVFFeXlPNklaczk1NnltNwogIHNFUU13eC8zd25sRTllaUo2aVF4WmZkZGtmT0N5Vi80TU1BbFlmcFRCUUZnN0N3YjMyWHJ2M0V6eTBIZlpybnQKICA1Tmo0U1ZRV3VPWEpoZGZDOWRtVEYrY3ZCZVArdkM2UHlEYmlreGRDbzkrMDVjaHhTN0kzTUx4Q3VlNHF4eTBDCiAgUWZRSUUxMENnWUEra0hhY0huZzJ1NDVzVDkvZjd0L2RMMER6U05SQXZMN2lla0lrQ0lVUmg4UkRuRHpyTVZXdwogIGQxOFlZc0hjRjVQWXFFT1ROMWFLMVhHdElvVk5YVUpNS3ZhbHV5OWMxYTQycVVoWi9XSjU5anFMSGJwQ1BPRmYKICA4eWhGaDNnSkxRREl5Q1h0K0s5UWEyNGZrZkh5N0d6NVZNVk9acW9oYkpkZFhIRFpmeEF2d1FLQmdBZFU5NDcrCiAgdGpGMUJoSFl6OENxM0t5U2ZadUhqNnRMNEFFS1lhUlhsTzR0d2JNZS85SS80QWlTaHF2ZloveGJCZm5TbGxHWAogIEhrYzlQMGl5RHQxaVFIOUJ4SGtaQVF5Kzd0bGJET1JCSGNUTDhGWWVBaGF3S3hSQ0syV1d0RkIvenZxQWhpcmUKICBnWThYTGhaTE5sVjkxdTRGNmlMYUwwRHpBSEt2UlJjR0gwdTlBb0dBVE5pZ1pnYlJSSEpDMjFKdWNIZUUwdFA3CiAgSGpHQUx2YjRxbjFvMG9ESHN4Tlk4aTZ2Vk53OVllUXBaYUpoY2V1UkhKVEdjc3EyZEpTWHBZd0loSVZzLzhSSwogIGJLYmtFbmRyYTk2TDZGUlpOOExZQmw4emJSVVB4MzlvakdlU2JGbGlRdjFlYW9BLzFERGhDaUMyTmxjU21iSmwKICBlY2FHL095by9TK2VNOG5SN21jPQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t
---
# Source: mojaloop/charts/quoting-service/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-quoting-service
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.4
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-11.0.0
type: Opaque
data:
  # base64 encoded string
  db.uri: bXlzcWw6Ly9jZW50cmFsX2xlZGdlcjpveU14Z1pDaHV1QG1vamFsb29wLWNlbnRyYWxsZWRnZXItbXlzcWw6MzMwNi9jZW50cmFsX2xlZGdlcg==
---
# Source: mojaloop/charts/transaction-requests-service/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mojaloop-transaction-requests-service
  labels:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: transaction-requests-service-11.0.0
type: Opaque
data: {}
# base64 encoded string
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service-admin/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-account-lookup-service-admin-config
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-admin-11.0.0
data:
  default.json: "{\n  \"ADMIN_PORT\":  4001,\n  \"API_PORT\":  4002,\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"mojaloop-account-lookup-mysql\",\n    \"PORT\": 3306,\n    \"USER\": \"account_lookup\",\n    \"PASSWORD\": \"OdonPianoX\",\n    \"DATABASE\": \"account_lookup\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"DISPLAY_ROUTES\": true,\n  \"RUN_MIGRATIONS\": false,\n  \"ENDPOINT_CACHE_CONFIG\": {\n    \"expiresIn\": 180000,\n    \"generateTimeout\": 30000\n  },\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"SWITCH_ENDPOINT\": \"http://mojaloop-centralledger-service:80\",\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"fspId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"account-lookup-service-admin\"\n        }\n      }\n    }\n  },\n  \"ENDPOINT_SECURITY\": {\n    \"JWS\": {\n      \"JWS_SIGN\": false,\n      \"FSPIOP_SOURCE_TO_SIGN\": \"switch\",\n      \"JWS_SIGNING_KEY_PATH\": \"secrets/jwsSigningKey.key\"\n    }\n  }\n}\n\n"
  knexfile.js: "'use strict'\nconst migrationsDirectory = '/opt/account-lookup-service/migrations'\nconst seedsDirectory = '/opt/account-lookup-service/seeds'\nconst Config = require('/opt/account-lookup-service/src/lib/config')\nmodule.exports = {\n    client: 'mysql',\n    version: '5.7',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}\n"
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service-admin/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-account-lookup-service-admin-sidecar
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-admin-11.0.0
data:
  default.json: "{\n  \"PORT\": 4003,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"account-lookup-service-admin-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-account-lookup-service-config
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-11.0.0
data:
  default.json: "{\n  \"ADMIN_PORT\":  4001,\n  \"API_PORT\":  4002,\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"mojaloop-account-lookup-mysql\",\n    \"PORT\": 3306,\n    \"USER\": \"account_lookup\",\n    \"PASSWORD\": \"OdonPianoX\",\n    \"DATABASE\": \"account_lookup\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"DISPLAY_ROUTES\": true,\n  \"RUN_MIGRATIONS\": false,\n  \"ENDPOINT_CACHE_CONFIG\": {\n    \"expiresIn\": 180000,\n    \"generateTimeout\": 30000\n  },\n  \"SWITCH_ENDPOINT\": \"http://mojaloop-centralledger-service:80\",\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"fspId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"account-lookup-service\"\n        }\n      }\n    }\n  },\n  \"ENDPOINT_SECURITY\": {\n    \"JWS\": {\n      \"JWS_SIGN\": true,\n      \"FSPIOP_SOURCE_TO_SIGN\": \"switch\",\n      \"JWS_SIGNING_KEY_PATH\": \"secrets/jwsSigningKey.key\"\n    }\n  }\n}\n\n"
  knexfile.js: "'use strict'\nconst migrationsDirectory = '/opt/account-lookup-service/migrations'\nconst seedsDirectory = '/opt/account-lookup-service/seeds'\nconst Config = require('/opt/account-lookup-service/src/lib/config')\nmodule.exports = {\n    client: 'mysql',\n    version: '5.7',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}\n"
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-account-lookup-service-sidecar
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-11.0.0
data:
  default.json: "{\n  \"PORT\": 4003,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"account-lookup-service-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/account-lookup-service/charts/mysql/templates/config-map_mysql-config.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: mojaloop-account-lookup-mysql-config-files
  labels:
    app: mojaloop-account-lookup-mysql
    chart: "mysql-1.0.4"
    release: "mojaloop"
    heritage: "Helm"
data:
  node.cnf: |
    [mysqld]
    datadir=/var/lib/mysql
    default_storage_engine=InnoDB
    binlog_format=ROW
    innodb_flush_log_at_trx_commit  = 0
    innodb_flush_method             = O_DIRECT
    innodb_file_per_table           = 1
    innodb_autoinc_lock_mode=2
    bind_address = 0.0.0.0
    wsrep_slave_threads=2
    wsrep_cluster_address=gcomm://
    wsrep_provider=/usr/lib/galera3/libgalera_smm.so
    wsrep_cluster_name=galera
    wsrep_sst_method=xtrabackup-v2
    pxc_strict_mode=DISABLED
    max_connections=999
    max_user_connections=994
    thread_cache_size=999
---
# Source: mojaloop/charts/account-lookup-service/charts/mysql/templates/config-map_startup-scripts.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: mojaloop-account-lookup-mysql-startup-scripts
  labels:
    app: mojaloop-account-lookup-mysql
    chart: "mysql-1.0.4"
    release: "mojaloop"
    heritage: "Helm"
data:
  entrypoint.sh: |
    #!/bin/bash
    set -e
    
    if [[ -n "${DEBUG}" ]]; then
        set -x
    fi
    
    . /startup-scripts/functions.sh
    
    ipaddr=$(hostname -i | awk ' { print $1 } ')
    hostname=$(hostname)
    echo "I AM $hostname - $ipaddr"
    
    # if command starts with an option, prepend mysqld
    if [ "${1:0:1}" = '-' ]; then
        CMDARG="$@"
    fi
    
    cluster_join=$(resolveip -s "${K8S_SERVICE_NAME}" || echo "")
    if [[ -z "${cluster_join}" ]]; then
        echo "I am the Primary Node"
        init_mysql
        write_password_file
        exec mysqld --user=mysql --wsrep_cluster_name=$SHORT_CLUSTER_NAME --wsrep_node_name=$hostname \
        --wsrep_cluster_address=gcomm:// --wsrep_sst_method=xtrabackup-v2 \
        --wsrep_sst_auth="xtrabackup:$XTRABACKUP_PASSWORD" \
        --wsrep_node_address="$ipaddr" --pxc_strict_mode="$PXC_STRICT_MODE" $CMDARG
    else
        echo "I am not the Primary Node"
        chown -R mysql:mysql /var/lib/mysql || true # default is root:root 777
        touch /var/log/mysqld.log
        chown mysql:mysql /var/log/mysqld.log
        write_password_file
        exec mysqld --user=mysql --wsrep_cluster_name=$SHORT_CLUSTER_NAME --wsrep_node_name=$hostname \
        --wsrep_cluster_address="gcomm://$cluster_join" --wsrep_sst_method=xtrabackup-v2 \
        --wsrep_sst_auth="xtrabackup:$XTRABACKUP_PASSWORD" \
        --wsrep_node_address="$ipaddr" --pxc_strict_mode="$PXC_STRICT_MODE" $CMDARG
    fi
    
  functions.sh: |
    #!/bin/bash
    
    write_password_file() {
        if [[ -n "${MYSQL_ROOT_PASSWORD}" ]]; then
            cat <<EOF > /root/.my.cnf
            [client]
            user=root
            password=${MYSQL_ROOT_PASSWORD}
    EOF
        fi
    }
    
    init_mysql() {
        DATADIR=/var/lib/mysql
        # if we have CLUSTER_JOIN - then we do not need to perform datadir initialize
        # the data will be copied from another node
        if [ ! -e "$DATADIR/mysql" ]; then
            if [ -z "$MYSQL_ROOT_PASSWORD" -a -z "$MYSQL_ALLOW_EMPTY_PASSWORD" -a -z "$MYSQL_RANDOM_ROOT_PASSWORD" -a -z "$MYSQL_ROOT_PASSWORD_FILE" ]; then
                echo >&2 'error: database is uninitialized and password option is not specified '
                echo >&2 '  You need to specify one of MYSQL_ROOT_PASSWORD, MYSQL_ROOT_PASSWORD_FILE,  MYSQL_ALLOW_EMPTY_PASSWORD or MYSQL_RANDOM_ROOT_PASSWORD'
                exit 1
            fi
    
            if [ ! -z "$MYSQL_ROOT_PASSWORD_FILE" -a -z "$MYSQL_ROOT_PASSWORD" ]; then
                MYSQL_ROOT_PASSWORD=$(cat $MYSQL_ROOT_PASSWORD_FILE)
            fi
            mkdir -p "$DATADIR"
    
            echo "Running --initialize-insecure on $DATADIR"
            ls -lah $DATADIR
            if [ "$PERCONA_MAJOR" = "5.6" ]; then
                mysql_install_db --user=mysql --datadir="$DATADIR"
            else
                mysqld --user=mysql --datadir="$DATADIR" --initialize-insecure
            fi
            chown -R mysql:mysql "$DATADIR" || true # default is root:root 777
            if [ -f /var/log/mysqld.log ]; then
                chown mysql:mysql /var/log/mysqld.log
            fi
            echo 'Finished --initialize-insecure'
    
            mysqld --user=mysql --datadir="$DATADIR" --skip-networking &
            pid="$!"
    
            mysql=( mysql --protocol=socket -uroot )
    
            for i in {30..0}; do
                if echo 'SELECT 1' | "${mysql[@]}" &> /dev/null; then
                    break
                fi
                echo 'MySQL init process in progress...'
                sleep 1
            done
    
            if [ "$i" = 0 ]; then
                echo >&2 'MySQL init process failed.'
                exit 1
            fi
    
            # sed is for https://bugs.mysql.com/bug.php?id=20545
            mysql_tzinfo_to_sql /usr/share/zoneinfo | sed 's/Local time zone must be set--see zic manual page/FCTY/' | "${mysql[@]}" mysql
            "${mysql[@]}" <<-EOSQL
            -- What's done in this file shouldn't be replicated
            --  or products like mysql-fabric won't work
            SET @@SESSION.SQL_LOG_BIN=0;
            CREATE USER 'root'@'${ALLOW_ROOT_FROM}' IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}' ;
            GRANT ALL ON *.* TO 'root'@'${ALLOW_ROOT_FROM}' WITH GRANT OPTION ;
            GRANT ALL ON *.* TO 'root'@'localhost' WITH GRANT OPTION ;
            CREATE USER 'xtrabackup'@'localhost' IDENTIFIED BY '$XTRABACKUP_PASSWORD';
            GRANT RELOAD,PROCESS,LOCK TABLES,REPLICATION CLIENT ON *.* TO 'xtrabackup'@'localhost';
            GRANT REPLICATION CLIENT ON *.* TO monitor@'%' IDENTIFIED BY 'monitor';
            GRANT PROCESS ON *.* TO monitor@localhost IDENTIFIED BY 'monitor';
            CREATE USER 'mysql'@'localhost' IDENTIFIED BY '' ;
            DROP DATABASE IF EXISTS test ;
            FLUSH PRIVILEGES ;
    EOSQL
    
            if [ "$PERCONA_MAJOR" = "5.6" ]; then
                echo "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('${MYSQL_ROOT_PASSWORD}'); FLUSH PRIVILEGES;" | "${mysql[@]}"
            else
                echo "ALTER USER 'root'@'localhost' IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}'; FLUSH PRIVILEGES;" | "${mysql[@]}"
            fi
    
            if [ ! -z "$MYSQL_ROOT_PASSWORD" ]; then
                mysql+=( -p"${MYSQL_ROOT_PASSWORD}" )
            fi
    
            if [ "$MYSQL_DATABASE" ]; then
                echo "CREATE DATABASE IF NOT EXISTS \`$MYSQL_DATABASE\` ;" | "${mysql[@]}"
                mysql+=( "$MYSQL_DATABASE" )
            fi
    
            if [ "$MYSQL_USER" -a "$MYSQL_PASSWORD" ]; then
                echo "CREATE USER '"$MYSQL_USER"'@'%' IDENTIFIED BY '"$MYSQL_PASSWORD"' ;" | "${mysql[@]}"
    
                if [ "$MYSQL_DATABASE" ]; then
                    echo "GRANT ALL ON \`"$MYSQL_DATABASE"\`.* TO '"$MYSQL_USER"'@'%' ;" | "${mysql[@]}"
                fi
    
                echo 'FLUSH PRIVILEGES ;' | "${mysql[@]}"
            fi
    
            if [ ! -z "$MYSQL_ONETIME_PASSWORD" ]; then
                "${mysql[@]}" <<-EOSQL
                ALTER USER 'root'@'%' PASSWORD EXPIRE;
    EOSQL
            fi
            if ! kill -s TERM "$pid" || ! wait "$pid"; then
                echo >&2 'MySQL init process failed.'
                exit 1
            fi
    
            echo
            echo 'MySQL init process done. Ready for start up.'
            echo
        fi
    }
---
# Source: mojaloop/charts/account-lookup-service/charts/mysql/templates/tests/pxc-test-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-account-lookup-mysql-tests
data:
  run.sh: |-
    echo "Testing Percona XtraDB Cluster"
    creds="-uroot -p${MYSQL_ROOT_PASSWORD} -h mojaloop-account-lookup-mysql"
    echo "==> basic mysql ping"
    mysqladmin $creds ping
    [[ $? != "0" ]] && exit $?
    echo "==> test basic query"
    mysql $creds -e "select now() \G"
    [[ $? != "0" ]] && exit $?
    echo "==> checking if cluster is ready"
    mysql $creds -e "SHOW GLOBAL STATUS LIKE 'wsrep_ready' \G" | grep Value | awk '{ print $2}' | grep ON
    [[ $? != "0" ]] && exit $?
    echo "==> checking if cluster size matches replica count"
    cluster_size=$(mysql $creds -e "SHOW GLOBAL STATUS LIKE 'wsrep_cluster_size' \G" | grep Value | awk '{ print $2}')
    [[ $? != "0" ]] && exit $?
    [[ "${cluster_size}" == "1" ]] || exit 1
    echo "SUCCESS"
    exit 0
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-centraleventprocessor-config
  labels:
    app.kubernetes.io/name: centraleventprocessor
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 10.5.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centraleventprocessor-11.0.0
data:
  default.json: "{\n    \"notificationMinutes\": {\n        \"resetPeriod\": 60,\n        \"notificationInterval\": 3,\n        \"oscilateEvents\": [\"NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL\"]\n    },\n    \"swaggerOptions\": {\n        \"info\": {\n            \"title\": \"Central notification system API Documentation\",\n            \"description\": \"Api Documentation for central-notification\"\n        },\n        \"expanded\": \"full\"\n    },\n    \"HUB_PARTICIPANT\": {\n        \"NAME\": \"hub\"\n    },\n    \"PORT\": 3080,\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"centralLedgerAPI\": {\n        \"adminHost\": \"mojaloop-centralledger-service\",\n        \"adminPort\": 80\n    },\n    \"mongo\": {\n        \"user\": \"mojaloop\",\n        \"password\": \"password\",\n        \"uri\": \"mojaloop-mongodb:27017\",\n        \"database\": \"mojaloop\",\n        \"ruleCollection\": \"Rule\",\n        \"netDebitCapPositionCollection\": \"NDCPosition\",\n        \"actionCollection\": \"Actions\",\n        \"eventCollection\": \"Events\",\n        \"limitCollection\": \"Limits\",\n        \"notificationEndpointCollection\": \"NotificationEndpoints\"\n  },\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"NOTIFICATION_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-notification-event\",\n                \"REGEX\": \"topic-notification-event\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cep-con\",\n                            \"group.id\": \"cep-group\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.blocking.max.ms\": 1,\n                            \"fetch.wait.max.ms\": 1,\n                            \"fetch.error.backoff.ms\": 1,\n                            \"queue.buffering.max.ms\": 1,\n                            \"broker.version.fallback\": \"0.10.1.0\",\n                            \"api.version.request\": true,\n                            \"enable.auto.commit\": false,\n                            \"auto.commit.interval.ms\": 200,\n                            \"socket.keepalive.enable\": true,\n                            \"socket.max.fails\": 1\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"debug\": \"all\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cep-prod\",\n                            \"event_cb\": true,\n                            \"compression.codec\": \"none\",\n                            \"retry.backoff.ms\": 100,\n                            \"message.send.max.retries\": 2,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000,\n                            \"batch.num.messages\": 100,\n                            \"dr_cb\": true,\n                            \"socket.blocking.max.ms\": 1,\n                            \"queue.buffering.max.ms\": 1,\n                            \"broker.version.fallback\": \"0.10.1.0\",\n                            \"api.version.request\": true\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-admin-transfer/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-centralledger-handler-admin-transfer-config
  labels:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-admin-transfer-11.0.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-admin-transfer.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"mojaloop-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"mojaloop-centralledger-mysql\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"oyMxgZChuu\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://mojaloop-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"CRON\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/10 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": true,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-admin-transfer\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\nconst seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-centralledger-handler-timeout-config
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-11.0.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-timeout.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"mojaloop-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"mojaloop-centralledger-mysql\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"oyMxgZChuu\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://mojaloop-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"CRON\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/10 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": false,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": true,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-timeout\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\nconst seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-centralledger-handler-timeout-sidecar
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-11.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralledger-handler-timeout-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-centralledger-handler-transfer-fulfil-config
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-11.0.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-transfer-fulfil.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"mojaloop-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"mojaloop-centralledger-mysql\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"oyMxgZChuu\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://mojaloop-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"CRON\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/10 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-fulfil\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\nconst seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-centralledger-handler-transfer-fulfil-sidecar
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-11.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralledger-handler-transfer-fulfil-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-get/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-centralledger-handler-transfer-get-config
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-get-11.0.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-transfer-get.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"mojaloop-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"mojaloop-centralledger-mysql\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"oyMxgZChuu\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://mojaloop-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"CRON\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/10 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": true,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-get\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\nconst seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-centralledger-handler-transfer-position-config
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-11.0.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-transfer-position.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"mojaloop-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"mojaloop-centralledger-mysql\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"oyMxgZChuu\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://mojaloop-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"CRON\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/10 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-position\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\nconst seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-centralledger-handler-transfer-position-sidecar
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-11.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralledger-handler-transfer-position-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-centralledger-handler-transfer-prepare-config
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-11.0.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger-transfer-prepare.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"mojaloop-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"mojaloop-centralledger-mysql\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"oyMxgZChuu\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://mojaloop-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"CRON\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/10 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-handler-prepare\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"ENABLE_ON_US_TRANSFERS\": false,\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\nconst seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-centralledger-handler-transfer-prepare-sidecar
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-11.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"centralledger-handler-transfer-prepare-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-centralledger-service-config
  labels:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-service-11.0.0
data:
  default.json: "\n{\n    \"PORT\": 3001,\n    \"HOSTNAME\": \"central-ledger.local\",\n    \"MIGRATIONS\": {\n        \"DISABLED\": true,\n        \"RUN_DATA_MIGRATIONS\": true\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"SIDECAR\": {\n        \"DISABLED\": true,\n        \"HOST\": \"mojaloop-forensicloggingsidecar-ledger\",\n        \"PORT\": 5678,\n        \"CONNECT_TIMEOUT\": 45000,\n        \"RECONNECT_INTERVAL\": 5000\n    },\n    \"DATABASE\": {\n        \"DIALECT\": \"mysql\",\n        \"HOST\": \"mojaloop-centralledger-mysql\",\n        \"PORT\": 3306,\n        \"USER\": \"central_ledger\",\n        \"PASSWORD\": \"oyMxgZChuu\",\n        \"SCHEMA\": \"central_ledger\",\n        \"POOL_MIN_SIZE\": 10,\n        \"POOL_MAX_SIZE\": 30,\n        \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n        \"CREATE_TIMEOUT_MILLIS\": 30000,\n        \"DESTROY_TIMEOUT_MILLIS\": 5000,\n        \"IDLE_TIMEOUT_MILLIS\": 30000,\n        \"REAP_INTERVAL_MILLIS\": 1000,\n        \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n        \"DEBUG\": false\n    },\n    \"MONGODB\": {\n        \"DISABLED\": true,\n        \"URI\": \"mongodb://mojaloop-centralledger-obj:27017/mlos\"\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": true,\n        \"API\": {\n            \"DISABLED\": false\n        },\n        \"CRON\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/10 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        },\n        \"TIMEOUT\": {\n            \"DISABLED\": true,\n            \"TIMEXP\": \"*/15 * * * * *\",\n            \"TIMEZONE\": \"UTC\"\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"labels\": {\n                \"fspId\": \"*\"\n            },\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"central-service\"\n                }\n            }\n        }\n    },\n    \"EMAIL_USER\": \"user\",\n    \"EMAIL_PASSWORD\": \"password\",\n    \"EMAIL_SMTP\": \"smtp.local\",\n    \"PARTICIPANT_INITIAL_POSITION\": 0,\n    \"HUB_PARTICIPANT\": {\n        \"ID\": 1,\n        \"NAME\": \"Hub\",\n        \"ACCOUNTS\": [\n            \"HUB_RECONCILIATION\",\n            \"HUB_MULTILATERAL_SETTLEMENT\",\n            \"HUB_FEE\"\n        ]\n    },\n    \"INTERNAL_TRANSFER_VALIDITY_SECONDS\": \"432000\",\n    \"CACHE\": {\n        \"CACHE_ENABLED\": false,\n        \"MAX_BYTE_SIZE\": 1e+07,\n        \"EXPIRES_IN_MS\": 1000\n    },\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            }\n        },\n        \"CONSUMER\": {\n            \"BULK\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-prepare\",\n                            \"group.id\": \"cl-group-bulk-prepare\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-processing\",\n                            \"group.id\": \"cl-group-bulk-processing\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-fulfil\",\n                            \"group.id\": \"cl-group-bulk-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-bulk-get\",\n                            \"group.id\": \"cl-group-bulk-get\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-prepare\",\n                            \"group.id\": \"cl-group-transfer-prepare\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-position\",\n                            \"group.id\": \"cl-group-transfer-position\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-fulfil\",\n                            \"group.id\": \"cl-group-transfer-fulfil\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-get\",\n                            \"group.id\": \"cl-group-transfer-get\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"pollFrequency\": 10,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"cl-con-transfer-admin\",\n                            \"group.id\": \"cl-group-transfer-admin\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"BULK\": {\n                \"PROCESSING\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-bulk-processing\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"POSITION\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-position\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"cl-prod-notification-event\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            },\n            \"ADMIN\": {\n                \"TRANSFER\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"admin-transfer-produce\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
  knexfile.js: "'use strict'\n\nconst migrationsDirectory = '/opt/central-ledger/migrations'\nconst seedsDirectory = '/opt/central-ledger/seeds'\n\nconst Config = require('/opt/central-ledger/src/lib/config')\n\nmodule.exports = {\n    client: 'mysql',\n    connection: Config.DATABASE.connection,\n    pool: Config.DATABASE.pool,\n    migrations: {\n        directory: migrationsDirectory,\n        tableName: 'migration',\n        stub: `${migrationsDirectory}/migration.template`\n    },\n    seeds: {\n        directory: seedsDirectory,\n        loadExtensions: ['.js']\n    }\n}"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/charts/zookeeper/templates/config-script.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-zookeeper
  labels:
    app: zookeeper
    chart: zookeeper-2.1.0
    release: mojaloop
    heritage: Helm
    component: server
data:
    ok: |
      #!/bin/sh
      echo ruok | nc 127.0.0.1 ${1:-2181}

    ready: |
      #!/bin/sh
      echo ruok | nc 127.0.0.1 ${1:-2181}

    run: |
      #!/bin/bash

      set -a
      ROOT=$(echo /apache-zookeeper-*)

      ZK_USER=${ZK_USER:-"zookeeper"}
      ZK_LOG_LEVEL=${ZK_LOG_LEVEL:-"INFO"}
      ZK_DATA_DIR=${ZK_DATA_DIR:-"/data"}
      ZK_DATA_LOG_DIR=${ZK_DATA_LOG_DIR:-"/data/log"}
      ZK_CONF_DIR=${ZK_CONF_DIR:-"/conf"}
      ZK_CLIENT_PORT=${ZK_CLIENT_PORT:-2181}
      ZK_SERVER_PORT=${ZK_SERVER_PORT:-2888}
      ZK_ELECTION_PORT=${ZK_ELECTION_PORT:-3888}
      ZK_TICK_TIME=${ZK_TICK_TIME:-2000}
      ZK_INIT_LIMIT=${ZK_INIT_LIMIT:-10}
      ZK_SYNC_LIMIT=${ZK_SYNC_LIMIT:-5}
      ZK_HEAP_SIZE=${ZK_HEAP_SIZE:-2G}
      ZK_MAX_CLIENT_CNXNS=${ZK_MAX_CLIENT_CNXNS:-60}
      ZK_MIN_SESSION_TIMEOUT=${ZK_MIN_SESSION_TIMEOUT:- $((ZK_TICK_TIME*2))}
      ZK_MAX_SESSION_TIMEOUT=${ZK_MAX_SESSION_TIMEOUT:- $((ZK_TICK_TIME*20))}
      ZK_SNAP_RETAIN_COUNT=${ZK_SNAP_RETAIN_COUNT:-3}
      ZK_PURGE_INTERVAL=${ZK_PURGE_INTERVAL:-0}
      ID_FILE="$ZK_DATA_DIR/myid"
      ZK_CONFIG_FILE="$ZK_CONF_DIR/zoo.cfg"
      LOG4J_PROPERTIES="$ZK_CONF_DIR/log4j.properties"
      HOST=$(hostname)
      DOMAIN=`hostname -d`
      ZOOCFG=zoo.cfg
      ZOOCFGDIR=$ZK_CONF_DIR
      JVMFLAGS="-Xmx$ZK_HEAP_SIZE -Xms$ZK_HEAP_SIZE"

      APPJAR=$(echo $ROOT/*jar)
      CLASSPATH="${ROOT}/lib/*:${APPJAR}:${ZK_CONF_DIR}:"

      if [[ $HOST =~ (.*)-([0-9]+)$ ]]; then
          NAME=${BASH_REMATCH[1]}
          ORD=${BASH_REMATCH[2]}
          MY_ID=$((ORD+1))
      else
          echo "Failed to extract ordinal from hostname $HOST"
          exit 1
      fi

      mkdir -p $ZK_DATA_DIR
      mkdir -p $ZK_DATA_LOG_DIR
      echo $MY_ID >> $ID_FILE

      echo "clientPort=$ZK_CLIENT_PORT" >> $ZK_CONFIG_FILE
      echo "dataDir=$ZK_DATA_DIR" >> $ZK_CONFIG_FILE
      echo "dataLogDir=$ZK_DATA_LOG_DIR" >> $ZK_CONFIG_FILE
      echo "tickTime=$ZK_TICK_TIME" >> $ZK_CONFIG_FILE
      echo "initLimit=$ZK_INIT_LIMIT" >> $ZK_CONFIG_FILE
      echo "syncLimit=$ZK_SYNC_LIMIT" >> $ZK_CONFIG_FILE
      echo "maxClientCnxns=$ZK_MAX_CLIENT_CNXNS" >> $ZK_CONFIG_FILE
      echo "minSessionTimeout=$ZK_MIN_SESSION_TIMEOUT" >> $ZK_CONFIG_FILE
      echo "maxSessionTimeout=$ZK_MAX_SESSION_TIMEOUT" >> $ZK_CONFIG_FILE
      echo "autopurge.snapRetainCount=$ZK_SNAP_RETAIN_COUNT" >> $ZK_CONFIG_FILE
      echo "autopurge.purgeInterval=$ZK_PURGE_INTERVAL" >> $ZK_CONFIG_FILE
      echo "4lw.commands.whitelist=*" >> $ZK_CONFIG_FILE

      for (( i=1; i<=$ZK_REPLICAS; i++ ))
      do
          echo "server.$i=$NAME-$((i-1)).$DOMAIN:$ZK_SERVER_PORT:$ZK_ELECTION_PORT" >> $ZK_CONFIG_FILE
      done

      rm -f $LOG4J_PROPERTIES

      echo "zookeeper.root.logger=$ZK_LOG_LEVEL, CONSOLE" >> $LOG4J_PROPERTIES
      echo "zookeeper.console.threshold=$ZK_LOG_LEVEL" >> $LOG4J_PROPERTIES
      echo "zookeeper.log.threshold=$ZK_LOG_LEVEL" >> $LOG4J_PROPERTIES
      echo "zookeeper.log.dir=$ZK_DATA_LOG_DIR" >> $LOG4J_PROPERTIES
      echo "zookeeper.log.file=zookeeper.log" >> $LOG4J_PROPERTIES
      echo "zookeeper.log.maxfilesize=256MB" >> $LOG4J_PROPERTIES
      echo "zookeeper.log.maxbackupindex=10" >> $LOG4J_PROPERTIES
      echo "zookeeper.tracelog.dir=$ZK_DATA_LOG_DIR" >> $LOG4J_PROPERTIES
      echo "zookeeper.tracelog.file=zookeeper_trace.log" >> $LOG4J_PROPERTIES
      echo "log4j.rootLogger=\${zookeeper.root.logger}" >> $LOG4J_PROPERTIES
      echo "log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender" >> $LOG4J_PROPERTIES
      echo "log4j.appender.CONSOLE.Threshold=\${zookeeper.console.threshold}" >> $LOG4J_PROPERTIES
      echo "log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout" >> $LOG4J_PROPERTIES
      echo "log4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} [myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n" >> $LOG4J_PROPERTIES

      if [ -n "$JMXDISABLE" ]
      then
          MAIN=org.apache.zookeeper.server.quorum.QuorumPeerMain
      else
          MAIN="-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=$JMXPORT -Dcom.sun.management.jmxremote.authenticate=$JMXAUTH -Dcom.sun.management.jmxremote.ssl=$JMXSSL -Dzookeeper.jmx.log4j.disable=$JMXLOG4J org.apache.zookeeper.server.quorum.QuorumPeerMain"
      fi

      set -x
      exec java -cp "$CLASSPATH" $JVMFLAGS $MAIN $ZK_CONFIG_FILE
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/templates/configmap-jmx.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-kafka-metrics
  labels:
    helm.sh/chart: kafka-0.21.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kafka-monitor
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: mojaloop
data:
  jmx-kafka-prometheus.yml: |+
    jmxUrl: service:jmx:rmi:///jndi/rmi://127.0.0.1:5555/jmxrmi
    lowercaseOutputName: true
    lowercaseOutputLabelNames: true
    ssl: false
    
    whitelistObjectNames: ["kafka.controller:*","kafka.server:*","java.lang:*","kafka.network:*","kafka.log:*"]
    
    rules:
    - pattern: kafka.controller<type=(ControllerChannelManager), name=(QueueSize), broker-id=(\d+)><>(Value)
      name: kafka_controller_$1_$2_$4
      labels:
        broker_id: "$3"
    - pattern: kafka.controller<type=(ControllerChannelManager), name=(TotalQueueSize)><>(Value)
      name: kafka_controller_$1_$2_$3
    - pattern: kafka.controller<type=(KafkaController), name=(.+)><>(Value)
      name: kafka_controller_$1_$2_$3
    - pattern: kafka.controller<type=(ControllerStats), name=(.+)><>(Count)
      name: kafka_controller_$1_$2_$3
    - pattern: kafka.server<type=(ReplicaFetcherManager), name=(.+), clientId=(.+)><>(Value)
      name: kafka_server_$1_$2_$4
      labels:
        client_id: "$3"
    - pattern : kafka.network<type=(Processor), name=(IdlePercent), networkProcessor=(.+)><>(Value)
      name: kafka_network_$1_$2_$4
      labels:
        network_processor: $3
    - pattern : kafka.network<type=(RequestMetrics), name=(RequestsPerSec), request=(.+)><>(Count)
      name: kafka_network_$1_$2_$4
      labels:
        request: $3
    - pattern: kafka.server<type=(.+), name=(.+), topic=(.+)><>(Count|OneMinuteRate)
      name: kafka_server_$1_$2_$4
      labels:
        topic: $3
    - pattern: kafka.server<type=(DelayedOperationPurgatory), name=(.+), delayedOperation=(.+)><>(Value)
      name: kafka_server_$1_$2_$3_$4
    - pattern: kafka.server<type=(.+), name=(.+)><>(Count|Value|OneMinuteRate)
      name: kafka_server_$1_total_$2_$3
    - pattern: kafka.server<type=(.+)><>(queue-size)
      name: kafka_server_$1_$2
    - pattern: java.lang<type=(.+), name=(.+)><(.+)>(\w+)
      name: java_lang_$1_$4_$3_$2
    - pattern: java.lang<type=(.+), name=(.+)><>(\w+)
      name: java_lang_$1_$3_$2
    - pattern : java.lang<type=(.*)>
    - pattern: kafka.log<type=(.+), name=(.+), topic=(.+), partition=(.+)><>Value
      name: kafka_log_$1_$2
      labels:
        topic: $3
        partition: $4
---
# Source: mojaloop/charts/central/charts/centralledger/charts/mysql/templates/config-map_mysql-config.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: mojaloop-centralledger-mysql-config-files
  labels:
    app: mojaloop-centralledger-mysql
    chart: "mysql-1.0.4"
    release: "mojaloop"
    heritage: "Helm"
data:
  node.cnf: |
    [mysqld]
    datadir=/var/lib/mysql
    default_storage_engine=InnoDB
    binlog_format=ROW
    innodb_flush_log_at_trx_commit  = 0
    innodb_flush_method             = O_DIRECT
    innodb_file_per_table           = 1
    innodb_autoinc_lock_mode=2
    bind_address = 0.0.0.0
    wsrep_slave_threads=2
    wsrep_cluster_address=gcomm://
    wsrep_provider=/usr/lib/galera3/libgalera_smm.so
    wsrep_cluster_name=galera
    wsrep_sst_method=xtrabackup-v2
    pxc_strict_mode=DISABLED
---
# Source: mojaloop/charts/central/charts/centralledger/charts/mysql/templates/config-map_startup-scripts.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: mojaloop-centralledger-mysql-startup-scripts
  labels:
    app: mojaloop-centralledger-mysql
    chart: "mysql-1.0.4"
    release: "mojaloop"
    heritage: "Helm"
data:
  entrypoint.sh: |
    #!/bin/bash
    set -e
    
    if [[ -n "${DEBUG}" ]]; then
        set -x
    fi
    
    . /startup-scripts/functions.sh
    
    ipaddr=$(hostname -i | awk ' { print $1 } ')
    hostname=$(hostname)
    echo "I AM $hostname - $ipaddr"
    
    # if command starts with an option, prepend mysqld
    if [ "${1:0:1}" = '-' ]; then
        CMDARG="$@"
    fi
    
    cluster_join=$(resolveip -s "${K8S_SERVICE_NAME}" || echo "")
    if [[ -z "${cluster_join}" ]]; then
        echo "I am the Primary Node"
        init_mysql
        write_password_file
        exec mysqld --user=mysql --wsrep_cluster_name=$SHORT_CLUSTER_NAME --wsrep_node_name=$hostname \
        --wsrep_cluster_address=gcomm:// --wsrep_sst_method=xtrabackup-v2 \
        --wsrep_sst_auth="xtrabackup:$XTRABACKUP_PASSWORD" \
        --wsrep_node_address="$ipaddr" --pxc_strict_mode="$PXC_STRICT_MODE" $CMDARG
    else
        echo "I am not the Primary Node"
        chown -R mysql:mysql /var/lib/mysql || true # default is root:root 777
        touch /var/log/mysqld.log
        chown mysql:mysql /var/log/mysqld.log
        write_password_file
        exec mysqld --user=mysql --wsrep_cluster_name=$SHORT_CLUSTER_NAME --wsrep_node_name=$hostname \
        --wsrep_cluster_address="gcomm://$cluster_join" --wsrep_sst_method=xtrabackup-v2 \
        --wsrep_sst_auth="xtrabackup:$XTRABACKUP_PASSWORD" \
        --wsrep_node_address="$ipaddr" --pxc_strict_mode="$PXC_STRICT_MODE" $CMDARG
    fi
    
  functions.sh: |
    #!/bin/bash
    
    write_password_file() {
        if [[ -n "${MYSQL_ROOT_PASSWORD}" ]]; then
            cat <<EOF > /root/.my.cnf
            [client]
            user=root
            password=${MYSQL_ROOT_PASSWORD}
    EOF
        fi
    }
    
    init_mysql() {
        DATADIR=/var/lib/mysql
        # if we have CLUSTER_JOIN - then we do not need to perform datadir initialize
        # the data will be copied from another node
        if [ ! -e "$DATADIR/mysql" ]; then
            if [ -z "$MYSQL_ROOT_PASSWORD" -a -z "$MYSQL_ALLOW_EMPTY_PASSWORD" -a -z "$MYSQL_RANDOM_ROOT_PASSWORD" -a -z "$MYSQL_ROOT_PASSWORD_FILE" ]; then
                echo >&2 'error: database is uninitialized and password option is not specified '
                echo >&2 '  You need to specify one of MYSQL_ROOT_PASSWORD, MYSQL_ROOT_PASSWORD_FILE,  MYSQL_ALLOW_EMPTY_PASSWORD or MYSQL_RANDOM_ROOT_PASSWORD'
                exit 1
            fi
    
            if [ ! -z "$MYSQL_ROOT_PASSWORD_FILE" -a -z "$MYSQL_ROOT_PASSWORD" ]; then
                MYSQL_ROOT_PASSWORD=$(cat $MYSQL_ROOT_PASSWORD_FILE)
            fi
            mkdir -p "$DATADIR"
    
            echo "Running --initialize-insecure on $DATADIR"
            ls -lah $DATADIR
            if [ "$PERCONA_MAJOR" = "5.6" ]; then
                mysql_install_db --user=mysql --datadir="$DATADIR"
            else
                mysqld --user=mysql --datadir="$DATADIR" --initialize-insecure
            fi
            chown -R mysql:mysql "$DATADIR" || true # default is root:root 777
            if [ -f /var/log/mysqld.log ]; then
                chown mysql:mysql /var/log/mysqld.log
            fi
            echo 'Finished --initialize-insecure'
    
            mysqld --user=mysql --datadir="$DATADIR" --skip-networking &
            pid="$!"
    
            mysql=( mysql --protocol=socket -uroot )
    
            for i in {30..0}; do
                if echo 'SELECT 1' | "${mysql[@]}" &> /dev/null; then
                    break
                fi
                echo 'MySQL init process in progress...'
                sleep 1
            done
    
            if [ "$i" = 0 ]; then
                echo >&2 'MySQL init process failed.'
                exit 1
            fi
    
            # sed is for https://bugs.mysql.com/bug.php?id=20545
            mysql_tzinfo_to_sql /usr/share/zoneinfo | sed 's/Local time zone must be set--see zic manual page/FCTY/' | "${mysql[@]}" mysql
            "${mysql[@]}" <<-EOSQL
            -- What's done in this file shouldn't be replicated
            --  or products like mysql-fabric won't work
            SET @@SESSION.SQL_LOG_BIN=0;
            CREATE USER 'root'@'${ALLOW_ROOT_FROM}' IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}' ;
            GRANT ALL ON *.* TO 'root'@'${ALLOW_ROOT_FROM}' WITH GRANT OPTION ;
            GRANT ALL ON *.* TO 'root'@'localhost' WITH GRANT OPTION ;
            CREATE USER 'xtrabackup'@'localhost' IDENTIFIED BY '$XTRABACKUP_PASSWORD';
            GRANT RELOAD,PROCESS,LOCK TABLES,REPLICATION CLIENT ON *.* TO 'xtrabackup'@'localhost';
            GRANT REPLICATION CLIENT ON *.* TO monitor@'%' IDENTIFIED BY 'monitor';
            GRANT PROCESS ON *.* TO monitor@localhost IDENTIFIED BY 'monitor';
            CREATE USER 'mysql'@'localhost' IDENTIFIED BY '' ;
            DROP DATABASE IF EXISTS test ;
            FLUSH PRIVILEGES ;
    EOSQL
    
            if [ "$PERCONA_MAJOR" = "5.6" ]; then
                echo "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('${MYSQL_ROOT_PASSWORD}'); FLUSH PRIVILEGES;" | "${mysql[@]}"
            else
                echo "ALTER USER 'root'@'localhost' IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}'; FLUSH PRIVILEGES;" | "${mysql[@]}"
            fi
    
            if [ ! -z "$MYSQL_ROOT_PASSWORD" ]; then
                mysql+=( -p"${MYSQL_ROOT_PASSWORD}" )
            fi
    
            if [ "$MYSQL_DATABASE" ]; then
                echo "CREATE DATABASE IF NOT EXISTS \`$MYSQL_DATABASE\` ;" | "${mysql[@]}"
                mysql+=( "$MYSQL_DATABASE" )
            fi
    
            if [ "$MYSQL_USER" -a "$MYSQL_PASSWORD" ]; then
                echo "CREATE USER '"$MYSQL_USER"'@'%' IDENTIFIED BY '"$MYSQL_PASSWORD"' ;" | "${mysql[@]}"
    
                if [ "$MYSQL_DATABASE" ]; then
                    echo "GRANT ALL ON \`"$MYSQL_DATABASE"\`.* TO '"$MYSQL_USER"'@'%' ;" | "${mysql[@]}"
                fi
    
                echo 'FLUSH PRIVILEGES ;' | "${mysql[@]}"
            fi
    
            if [ ! -z "$MYSQL_ONETIME_PASSWORD" ]; then
                "${mysql[@]}" <<-EOSQL
                ALTER USER 'root'@'%' PASSWORD EXPIRE;
    EOSQL
            fi
            if ! kill -s TERM "$pid" || ! wait "$pid"; then
                echo >&2 'MySQL init process failed.'
                exit 1
            fi
    
            echo
            echo 'MySQL init process done. Ready for start up.'
            echo
        fi
    }
---
# Source: mojaloop/charts/central/charts/centralledger/charts/mysql/templates/tests/pxc-test-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-centralledger-mysql-tests
data:
  run.sh: |-
    echo "Testing Percona XtraDB Cluster"
    creds="-uroot -p${MYSQL_ROOT_PASSWORD} -h mojaloop-centralledger-mysql"
    echo "==> basic mysql ping"
    mysqladmin $creds ping
    [[ $? != "0" ]] && exit $?
    echo "==> test basic query"
    mysql $creds -e "select now() \G"
    [[ $? != "0" ]] && exit $?
    echo "==> checking if cluster is ready"
    mysql $creds -e "SHOW GLOBAL STATUS LIKE 'wsrep_ready' \G" | grep Value | awk '{ print $2}' | grep ON
    [[ $? != "0" ]] && exit $?
    echo "==> checking if cluster size matches replica count"
    cluster_size=$(mysql $creds -e "SHOW GLOBAL STATUS LIKE 'wsrep_cluster_size' \G" | grep Value | awk '{ print $2}')
    [[ $? != "0" ]] && exit $?
    [[ "${cluster_size}" == "1" ]] || exit 1
    echo "SUCCESS"
    exit 0
---
# Source: mojaloop/charts/central/charts/centralsettlement/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-centralsettlement-config
  labels:
    app.kubernetes.io/name: centralsettlement
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 10.5.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-11.0.0
data:
  default.json: "\n{\n  \"PORT\": 3007,\n  \"HOSTNAME\": \"http://central-settlements.local\",\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"mojaloop-centralledger-mysql\",\n    \"PORT\": 3306,\n    \"USER\": \"central_ledger\",\n    \"PASSWORD\": \"oyMxgZChuu\",\n    \"SCHEMA\": \"central_ledger\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"WINDOW_AGGREGATION\": {\n    \"RETRY_COUNT\": 3,\n    \"RETRY_INTERVAL\": 3000\n  },\n  \"TRANSFER_VALIDITY_SECONDS\": \"432000\",\n  \"HUB_PARTICIPANT\": {\n      \"ID\": 1,\n      \"NAME\": \"hub\"\n  },\n  \"HANDLERS\": {\n    \"DISABLED\": false,\n    \"API\": {\n      \"DISABLED\": false\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n        \"REGEX\": \"topic-(.*)-(.*)\"\n      }\n    },\n    \"CONSUMER\": {\n      \"SETTLEMENTWINDOW\": {\n        \"CLOSE\": {\n          \"config\": {\n            \"options\": {\n              \"mode\": 2,\n              \"batchSize\": 1,\n              \"pollFrequency\": 10,\n              \"recursiveTimeout\": 100,\n              \"messageCharset\": \"utf8\",\n              \"messageAsJSON\": true,\n              \"sync\": true,\n              \"consumeTimeout\": 1000\n            },\n            \"rdkafkaConf\": {\n              \"client.id\": \"cs-con-setlementwindow-close\",\n              \"group.id\": \"cs-group-setlementwindow-close\",\n              \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n              \"socket.keepalive.enable\": true\n            },\n            \"topicConf\": {\n              \"auto.offset.reset\": \"earliest\"\n            }\n          }\n        }\n      }\n    },\n    \"PRODUCER\": {\n      \"NOTIFICATION\": {\n        \"EVENT\": {\n          \"config\": {\n            \"options\": {\n              \"messageCharset\": \"utf8\"\n            },\n            \"rdkafkaConf\": {\n              \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n              \"client.id\": \"cs-prod-notification-event\",\n              \"event_cb\": true,\n              \"compression.codec\": \"none\",\n              \"retry.backoff.ms\": 100,\n              \"message.send.max.retries\": 2,\n              \"socket.keepalive.enable\": true,\n              \"queue.buffering.max.messages\": 10000000,\n              \"batch.num.messages\": 100,\n              \"dr_cb\": false,\n              \"socket.blocking.max.ms\": 1,\n              \"queue.buffering.max.ms\": 1,\n              \"broker.version.fallback\": \"0.10.1.0\",\n              \"api.version.request\": true\n            },\n            \"topicConf\": {\n                \"request.required.acks\": \"all\",\n                \"partitioner\": \"murmur2_random\"\n            }\n          }\n        }\n      },\n      \"SETTLEMENTWINDOW\": {\n        \"CLOSE\": {\n          \"config\": {\n            \"options\": {\n              \"messageCharset\": \"utf8\"\n            },\n            \"rdkafkaConf\": {\n              \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n              \"client.id\": \"cs-prod-setlementwindow-close\",\n              \"event_cb\": true,\n              \"dr_cb\": true,\n              \"socket.keepalive.enable\": true,\n              \"queue.buffering.max.messages\": 10000000\n            },\n            \"topicConf\": {\n              \"request.required.acks\": \"all\",\n              \"partitioner\": \"murmur2_random\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/finance-portal-settlement-management/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-finance-portal-settlement-management
  labels:
    app.kubernetes.io/name: finance-portal-settlement-management
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 9.2.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-settlement-management-11.0.0
data:
  ADMIN_ENDPOINT: "http://mojaloop-centralledger-service:80"
  MIN_WINDOW_AGE_MS: "5000"
  SETTLEMENT_ENDPOINT: "http://mojaloop-centralsettlement:80/v1"
  OPERATOR_SETTLEMENT_ENDPOINT: "http://mojaloop-finance-portal-settlement-management:80"
---
# Source: mojaloop/charts/finance-portal/templates/configmap-auth-init.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "ispopulate"
  labels:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 10.4.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-11.0.0
data:
  HTTP_HOST: "https://localhost"
  HTTP_PORT: "9443"
  HTTP_ENDPOINT: "something"
  HTTP_TIMEOUT: "30000"
  AUTHENTICATION_TYPE: "basic"
  AUTHENTICATION_CREDENTIALS_USERNAME: "admin"
  AUTHENTICATION_CREDENTIALS_PASSWORD: "admin"
---
# Source: mojaloop/charts/finance-portal/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-finance-portal
  labels:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 10.4.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-11.0.0
data:
  FXP_ENDPOINT: "http://mojaloop-fxp-server"
  EXTERNAL_SETTLEMENTS_ENDPOINT: "http://mojaloop-external-settlement-server"
  CENTRAL_SETTLEMENTS_ENDPOINT: "http://mojaloop-centralsettlement/v1"
  CENTRAL_LEDGER_ENDPOINT: "http://mojaloop-centralledger-service"
  HUB_REPORT_URL_312: "http://mojaloop-something"
  HUB_REPORT_URL_644: "http://mojaloop-something"
  SETTLEMENT_MANAGEMENT_ENDPOINT: "http://mojaloop-finance-portal-settlement-management:5000"
  LISTEN_PORT: "3000"
  NODE_ENV: "production"
  BYPASS_AUTH:  "true"
  CORS_ACCESS_CONTROL_REFLECT_ORIGIN: "false"
  INSECURE_COOKIE: "false"
  AUTH_SERVER: "https://localhost"
  AUTH_SERVER_PORT: "9443"
  AUTH_SERVICE: "/oauth2/token"
  VALIDATE_SERVICE: "/oauth2/introspect"
  USERINFO_SERVICE: "/oauth2/userinfo"
  REVOKE_SERVICE: "/oauth2/revoke"
  AZURE_AUTH_TOKEN_ENDPOINT: "https://login.microsoftonline.com"
  AZURE_GRANT_TYPE: "client_credentials"
  AZURE_KAFKA_MESSAGE_PATTERN: "Producer.sendMessage::messageProtocol:'({.*?})'"
  AZURE_LOG_API_ENDPOINT: "https://api.loganalytics.io/v1/"
  AZURE_REDIRECT_URI: "http://localhost:5000"
  AZURE_RESOURCE: "https://api.loganalytics.io/"
  AZURE_SEARCH_QUERY_REGEX: "search '(.*)' | where LogEntry matches regex '.*Producer.sendMessage::messageProtocol:.*' | where LogEntry matches regex '.*transferId.*' | where LogEntry matches regex '.*fspiop-signature.*' | take 1 | project LogEntry"
  AZURE_SEARCH_QUERY_TEMPLATE: "search '{{transferId}}' | where LogEntry matches regex '.*Producer.sendMessage::messageProtocol:.*' | where LogEntry matches regex '.*transferId.*' | where LogEntry matches regex '.*fspiop-signature.*' | take 1 | project LogEntry"
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-ml-api-adapter-handler-notification-config
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-11.0.0
data:
  default.json: "{\n    \"PORT\": 3000,\n    \"ENDPOINT_SOURCE_URL\": \"http://mojaloop-centralledger-service:80\",\n    \"ENDPOINT_HEALTH_URL\": \"http://mojaloop-centralledger-service:80/health\",\n    \"ENDPOINT_CACHE_CONFIG\": {\n        \"expiresIn\": 180000,\n        \"generateTimeout\": 30000\n    },\n    \"ENDPOINT_SECURITY\":{\n        \"JWS\": {\n          \"JWS_SIGN\": true,\n          \"FSPIOP_SOURCE_TO_SIGN\": \"switch\",\n          \"JWS_SIGNING_KEY_PATH\": \"secrets/jwsSigningKey.key\"\n        },\n        \"TLS\": {\n            \"rejectUnauthorized\": true\n        }\n    },\n    \"HOSTNAME\": \"ml-api-adapter-notification.local\",\n    \"MAX_CALLBACK_TIME_LAG_DILATION_MILLISECONDS\": 100,\n    \"MAX_FULFIL_TIMEOUT_DURATION_SECONDS\": 240,\n    \"TRANSFERS\": {\n        \"SEND_TRANSFER_CONFIRMATION_TO_PAYEE\": false\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": false,\n        \"API\": {\n            \"DISABLED\": false\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"ml-handler-notification\"\n                }\n            }\n        }\n    },\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            },\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"NOTIFICATION_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-notification-event\",\n                \"REGEX\": \"topic-notification-event\"\n            },\n            \"FULFIL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-transfer-fulfil\",\n                \"REGEX\": \"topic-transfer-fulfil\"\n            },\n            \"GET_TRANSFERS_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-transfer-get\",\n                \"REGEX\": \"topic-transfer-get\"\n            }\n        },\n        \"CONSUMER\": {\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"ml-con-notification-event\",\n                            \"group.id\": \"ml-group-notification-event\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-ml-api-adapter-handler-notification-sidecar
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-11.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"ml-api-adapter-handler-notification-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-ml-api-adapter-service-config
  labels:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.0.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-service-11.0.0
data:
  default.json: "{\n    \"PORT\": 3000,\n    \"ENDPOINT_SOURCE_URL\": \"http://mojaloop-centralledger-service:80\",\n    \"ENDPOINT_HEALTH_URL\": \"http://mojaloop-centralledger-service:80/health\",\n    \"ENDPOINT_CACHE_CONFIG\": {\n        \"expiresIn\": 180000,\n        \"generateTimeout\": 30000\n    },\n    \"ENDPOINT_SECURITY\":{\n        \"JWS\": {\n            \"JWS_SIGN\": false,\n            \"FSPIOP_SOURCE_TO_SIGN\": \"switch\",\n            \"JWS_SIGNING_KEY_PATH\": \"secrets/jwsSigningKey.key\"\n          },\n        \"TLS\": {\n            \"rejectUnauthorized\": true\n        }\n    },\n    \"HOSTNAME\": \"ml-api-adapter.local\",\n    \"MAX_CALLBACK_TIME_LAG_DILATION_MILLISECONDS\": 100,\n    \"MAX_FULFIL_TIMEOUT_DURATION_SECONDS\": 240,\n    \"TRANSFERS\": {\n        \"SEND_TRANSFER_CONFIRMATION_TO_PAYEE\": false\n    },\n    \"AMOUNT\": {\n        \"PRECISION\": 18,\n        \"SCALE\": 4\n    },\n    \"ERROR_HANDLING\": {\n        \"includeCauseExtension\": false,\n        \"truncateExtensions\": true\n    },\n    \"HANDLERS\": {\n        \"DISABLED\": true,\n        \"API\": {\n            \"DISABLED\": false\n        }\n    },\n    \"INSTRUMENTATION\": {\n        \"METRICS\": {\n            \"DISABLED\": false,\n            \"config\": {\n                \"timeout\": 5000,\n                \"prefix\": \"moja_\",\n                \"defaultLabels\": {\n                    \"serviceName\": \"ml-service\"\n                }\n            }\n        }\n    },\n    \"KAFKA\": {\n        \"TOPIC_TEMPLATES\": {\n            \"GENERAL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)\"\n            },\n            \"PARTICIPANT_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-{{participantName}}-{{functionality}}-{{action}}\",\n                \"REGEX\": \"topic-(.*)-(.*)-(.*)\"\n            },\n            \"NOTIFICATION_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-notification-event\",\n                \"REGEX\": \"topic-notification-event\"\n            },\n            \"FULFIL_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-transfer-fulfil\",\n                \"REGEX\": \"topic-transfer-fulfil\"\n            },\n            \"GET_TRANSFERS_TOPIC_TEMPLATE\": {\n                \"TEMPLATE\": \"topic-transfer-get\",\n                \"REGEX\": \"topic-transfer-get\"\n            }\n        },\n        \"CONSUMER\": {\n            \"NOTIFICATION\": {\n                \"EVENT\": {\n                    \"config\": {\n                        \"options\": {\n                            \"mode\": 2,\n                            \"batchSize\": 1,\n                            \"recursiveTimeout\": 100,\n                            \"messageCharset\": \"utf8\",\n                            \"messageAsJSON\": true,\n                            \"sync\": true,\n                            \"consumeTimeout\": 1000\n                        },\n                        \"rdkafkaConf\": {\n                            \"client.id\": \"ml-con-notification-event\",\n                            \"group.id\": \"ml-group-notification-event\",\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"socket.keepalive.enable\": true\n                        },\n                        \"topicConf\": {\n                            \"auto.offset.reset\": \"earliest\"\n                        }\n                    }\n                }\n            }\n        },\n        \"PRODUCER\": {\n            \"TRANSFER\": {\n                \"PREPARE\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-prepare\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"FULFIL\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-fulfil\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                },\n                \"GET\": {\n                    \"config\": {\n                        \"options\": {\n                            \"messageCharset\": \"utf8\"\n                        },\n                        \"rdkafkaConf\": {\n                            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n                            \"client.id\": \"ml-prod-transfer-get\",\n                            \"event_cb\": true,\n                            \"dr_cb\": false,\n                            \"socket.keepalive.enable\": true,\n                            \"queue.buffering.max.messages\": 10000000\n                        },\n                        \"topicConf\": {\n                            \"request.required.acks\": \"all\",\n                            \"partitioner\": \"murmur2_random\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-ml-api-adapter-service-sidecar
  labels:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.0.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-service-11.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"ml-api-adapter-service-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/mojaloop-simulator/templates/config-jws-public-keys.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-sim-jws-public-keys
  labels:
    app.kubernetes.io/name: mojaloop-sim-jws-public-keys
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
data:
---
# Source: mojaloop/charts/mojaloop-simulator/templates/config-rules.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-sim-payeefsp-rules
  labels:
    app.kubernetes.io/name: mojaloop-sim-payeefsp-rules
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
data:
  rules.json: "[]"
---
# Source: mojaloop/charts/mojaloop-simulator/templates/config-rules.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-sim-payerfsp-rules
  labels:
    app.kubernetes.io/name: mojaloop-sim-payerfsp-rules
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
data:
  rules.json: "[]"
---
# Source: mojaloop/charts/mojaloop-simulator/templates/config-rules.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-sim-testfsp1-rules
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp1-rules
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
data:
  rules.json: "[]"
---
# Source: mojaloop/charts/mojaloop-simulator/templates/config-rules.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-sim-testfsp2-rules
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp2-rules
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
data:
  rules.json: "[]"
---
# Source: mojaloop/charts/mojaloop-simulator/templates/config-rules.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-sim-testfsp3-rules
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp3-rules
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
data:
  rules.json: "[]"
---
# Source: mojaloop/charts/mojaloop-simulator/templates/config-rules.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-sim-testfsp4-rules
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp4-rules
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
data:
  rules.json: "[]"
---
# Source: mojaloop/charts/quoting-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-quoting-service-config
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.4
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-11.0.0
data:
  default.json: "\n{\n  \"HOSTNAME\": \"http://quoting-service.local\",\n  \"LISTEN_ADDRESS\": \"0.0.0.0\",\n  \"PORT\": 3002,\n  \"SWITCH_ENDPOINT\": \"http://mojaloop-centralledger-service:80\",\n  \"AMOUNT\": {\n    \"PRECISION\": 18,\n    \"SCALE\": 4\n  },\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"DATABASE\": {\n    \"DIALECT\": \"mysql\",\n    \"HOST\": \"mojaloop-centralledger-mysql\",\n    \"PORT\": 3306,\n    \"USER\": \"central_ledger\",\n    \"PASSWORD\": \"oyMxgZChuu\",\n    \"SCHEMA\": \"central_ledger\",\n    \"POOL_MIN_SIZE\": 10,\n    \"POOL_MAX_SIZE\": 30,\n    \"ACQUIRE_TIMEOUT_MILLIS\": 30000,\n    \"CREATE_TIMEOUT_MILLIS\": 30000,\n    \"DESTROY_TIMEOUT_MILLIS\": 5000,\n    \"IDLE_TIMEOUT_MILLIS\": 30000,\n    \"REAP_INTERVAL_MILLIS\": 1000,\n    \"CREATE_RETRY_INTERVAL_MILLIS\": 200,\n    \"DEBUG\": false\n  },\n  \"SIMPLE_ROUTING_MODE\": true,\n  \"ENDPOINT_SECURITY\": {\n    \"JWS\": {\n      \"JWS_SIGN\": true,\n      \"FSPIOP_SOURCE_TO_SIGN\": \"switch\",\n      \"JWS_SIGNING_KEY_PATH\": \"secrets/jwsSigningKey.key\"\n    }\n  }\n}\n"
  rules.json: "[]"
---
# Source: mojaloop/charts/quoting-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-quoting-service-sidecar
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.4
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-11.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"quoting-service-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/simulator/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-simulator-config
  labels:
    app.kubernetes.io/name: simulator
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: simulator-11.0.0
data:
  LOG_LEVEL: "info"
  PARTIES_ENDPOINT: http://mojaloop-account-lookup-service
  QUOTES_ENDPOINT: http://mojaloop-quoting-service
  TRANSFERS_ENDPOINT: http://mojaloop-ml-api-adapter-service
  BULK_TRANSFERS_ENDPOINT: http://mojaloop-bulk-api-adapter-service
  TRANSACTION_REQUESTS_ENDPOINT: http://mojaloop-transaction-requests-service
  TRANSFERS_FULFIL_RESPONSE_DISABLED: "false"
  TRANSFERS_FULFILMENT: "XoSz1cL0tljJSCp_VtIYmPNw-zFUgGfbUqf69AagUzY"
  TRANSFERS_CONDITION: "HOr22-H3AfTDHrSkPjJtVPRdKouuMkDXTR4ejlQa8Ks"
  TRANSFERS_ILPPACKET: "AQAAAAAAAADIEHByaXZhdGUucGF5ZWVmc3CCAiB7InRyYW5zYWN0aW9uSWQiOiIyZGY3NzRlMi1mMWRiLTRmZjctYTQ5NS0yZGRkMzdhZjdjMmMiLCJxdW90ZUlkIjoiMDNhNjA1NTAtNmYyZi00NTU2LThlMDQtMDcwM2UzOWI4N2ZmIiwicGF5ZWUiOnsicGFydHlJZEluZm8iOnsicGFydHlJZFR5cGUiOiJNU0lTRE4iLCJwYXJ0eUlkZW50aWZpZXIiOiIyNzcxMzgwMzkxMyIsImZzcElkIjoicGF5ZWVmc3AifSwicGVyc29uYWxJbmZvIjp7ImNvbXBsZXhOYW1lIjp7fX19LCJwYXllciI6eyJwYXJ0eUlkSW5mbyI6eyJwYXJ0eUlkVHlwZSI6Ik1TSVNETiIsInBhcnR5SWRlbnRpZmllciI6IjI3NzEzODAzOTExIiwiZnNwSWQiOiJwYXllcmZzcCJ9LCJwZXJzb25hbEluZm8iOnsiY29tcGxleE5hbWUiOnt9fX0sImFtb3VudCI6eyJjdXJyZW5jeSI6IlVTRCIsImFtb3VudCI6IjIwMCJ9LCJ0cmFuc2FjdGlvblR5cGUiOnsic2NlbmFyaW8iOiJERVBPU0lUIiwic3ViU2NlbmFyaW8iOiJERVBPU0lUIiwiaW5pdGlhdG9yIjoiUEFZRVIiLCJpbml0aWF0b3JUeXBlIjoiQ09OU1VNRVIiLCJyZWZ1bmRJbmZvIjp7fX19"
  MOCK_JWS_SIGNATURE: "abcJjvNrkyK2KBieDUbGfhaBUn75aDUATNF4joqA8OLs4QgSD7i6EO8BIdy6Crph3LnXnTM20Ai1Z6nt0zliS_qPPLU9_vi6qLb15FOkl64DQs9hnfoGeo2tcjZJ88gm19uLY_s27AJqC1GH1B8E2emLrwQMDMikwQcYvXoyLrL7LL3CjaLMKdzR7KTcQi1tCK4sNg0noIQLpV3eA61kess"
  METRICS_DISABLED: "false"
  METRICS_PREFIX: "moja_"
  METRICS_TIMEOUT: "5000"
  METRICS_SERVICENAME: simulator
---
# Source: mojaloop/charts/transaction-requests-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-transaction-requests-service-config
  labels:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: transaction-requests-service-11.0.0
data:
  default.json: "{\n  \"PORT\": 4000,\n  \"ENDPOINT_CACHE_CONFIG\": {\n    \"expiresIn\": 180000,\n    \"generateTimeout\": 30000\n  },\n  \"SWITCH_ENDPOINT\": \"http://mojaloop-centralledger-service:80\",\n  \"ERROR_HANDLING\": {\n    \"includeCauseExtension\": false,\n    \"truncateExtensions\": true\n  },\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": true,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n        \"serviceName\": \"transaction-requests\"\n        }\n      }\n    }\n  }\n}"
---
# Source: mojaloop/charts/transaction-requests-service/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mojaloop-transaction-requests-service-sidecar
  labels:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: transaction-requests-service-11.0.0
data:
  default.json: "{\n  \"PORT\": 4001,\n  \"EVENT_LOGGER_GRPC_HOST\": \"localhost\",\n  \"EVENT_LOGGER_GRPC_PORT\": 50051,\n  \"INSTRUMENTATION\": {\n    \"METRICS\": {\n      \"DISABLED\": false,\n      \"labels\": {\n        \"eventId\": \"*\"\n      },\n      \"config\": {\n        \"timeout\": 5000,\n        \"prefix\": \"moja_\",\n        \"defaultLabels\": {\n          \"serviceName\": \"transaction-requests-service-event-sidecar\"\n        }\n      }\n    }\n  },\n  \"KAFKA\": {\n    \"TOPIC_TEMPLATES\": {\n      \"GENERAL_TOPIC_TEMPLATE\": {\n        \"TEMPLATE\": \"topic-{{functionality}}\",\n        \"REGEX\": \"topic-(.*)\"\n      }\n    },\n    \"PRODUCER\": {\n      \"EVENT\": {\n        \"config\": {\n          \"options\": {\n            \"messageCharset\": \"utf8\"\n          },\n          \"rdkafkaConf\": {\n            \"metadata.broker.list\": \"mojaloop-kafka:9092\",\n            \"client.id\": \"es-prod-event\",\n            \"event_cb\": true,\n            \"dr_cb\": true,\n            \"socket.keepalive.enable\": true,\n            \"queue.buffering.max.messages\": 10000000\n          },\n          \"topicConf\": {\n            \"request.required.acks\": \"all\",\n            \"partitioner\": \"murmur2_random\"\n          }\n        }\n      }\n    }\n  }\n}\n"
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service-admin/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-account-lookup-service-admin
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-admin-11.0.0
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http-admin
      protocol: TCP
      name: http-admin
  selector:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-account-lookup-service
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-11.0.0
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http-api
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/account-lookup-service/charts/mysql/templates/service-metrics.yaml
apiVersion: v1
kind: Service
metadata:
  name: "mojaloop-account-lookup-mysql-metrics"
  labels:
    app: mojaloop-account-lookup-mysql
    chart: "mysql-1.0.4"
    release: "mojaloop"
    heritage: "Helm"
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9104
  selector:
    app: mojaloop-account-lookup-mysql
    release: "mojaloop"
---
# Source: mojaloop/charts/account-lookup-service/charts/mysql/templates/service-percona.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-account-lookup-mysql
  labels:
    app: mojaloop-account-lookup-mysql
    chart: "mysql-1.0.4"
    release: "mojaloop"
    heritage: "Helm"
spec:
  ports:
  - name: mysql
    port: 3306
    targetPort: mysql
  selector:
    app: mojaloop-account-lookup-mysql
    release: "mojaloop"
---
# Source: mojaloop/charts/account-lookup-service/charts/mysql/templates/service-repl.yaml
apiVersion: v1
kind: Service
metadata:
  name: "mojaloop-account-lookup-mysql-repl"
  labels:
    app: mojaloop-account-lookup-mysql
    chart: "mysql-1.0.4"
    release: "mojaloop"
    heritage: "Helm"
spec:
  clusterIP: None
  ports:
  - name: galera
    port: 4567
  - name: state-xfer
    port: 4568
  - name: state-snap
    port: 4444
  selector:
    app: mojaloop-account-lookup-mysql
    release: "mojaloop"
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/charts/mongodb/templates/svc-standalone.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-mongodb
  labels:
    app: mongodb
    chart: mongodb-7.8.10
    release: "mojaloop"
    heritage: "Helm"
spec:
  type: ClusterIP
  ports:
  - name: mongodb
    port: 27017
    targetPort: mongodb
  selector:
    app: mongodb
    release: "mojaloop"
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-centraleventprocessor
  labels:
    app.kubernetes.io/name: centraleventprocessor
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 10.5.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centraleventprocessor-11.0.0
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: centraleventprocessor
    app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-admin-transfer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-centralledger-handler-admin-transfer
  labels:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-admin-transfer-11.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-centralledger-handler-timeout
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-11.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-centralledger-handler-transfer-fulfil
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-11.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-get/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-centralledger-handler-transfer-get
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-get-11.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-centralledger-handler-transfer-position
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-11.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-centralledger-handler-transfer-prepare
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-11.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-centralledger-service
  labels:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-service-11.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3001
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/charts/zookeeper/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-zookeeper-headless
  labels:
    app: zookeeper
    chart: zookeeper-2.1.0
    release: mojaloop
    heritage: Helm
spec:
  clusterIP: None
  ports:
    - name: client
      port: 2181
      targetPort: client
      protocol: TCP
    - name: election
      port: 3888
      targetPort: election
      protocol: TCP
    - name: server
      port: 2888
      targetPort: server
      protocol: TCP
  selector:
    app: zookeeper
    release: mojaloop
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/charts/zookeeper/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-zookeeper
  labels:
    app: zookeeper
    chart: zookeeper-2.1.0
    release: mojaloop
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - name: client
      port: 2181
      protocol: TCP
      targetPort: client
  selector:
    app: zookeeper
    release: mojaloop
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/templates/service-brokers.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-kafka
  labels:
    helm.sh/chart: kafka-0.21.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kafka-broker
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: mojaloop
spec:
  ports:
  - name: broker
    port: 9092
    targetPort: kafka
  selector:
    app.kubernetes.io/component: kafka-broker
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-kafka-headless
  labels:
    helm.sh/chart: kafka-0.21.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kafka-broker
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: mojaloop
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
  - name: broker
    port: 9092
  clusterIP: None
  selector:
    app.kubernetes.io/component: kafka-broker
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/central/charts/centralledger/charts/mysql/templates/service-metrics.yaml
apiVersion: v1
kind: Service
metadata:
  name: "mojaloop-centralledger-mysql-metrics"
  labels:
    app: mojaloop-centralledger-mysql
    chart: "mysql-1.0.4"
    release: "mojaloop"
    heritage: "Helm"
spec:
  clusterIP: None
  ports:
  - name: metrics
    port: 9104
  selector:
    app: mojaloop-centralledger-mysql
    release: "mojaloop"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/mysql/templates/service-percona.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-centralledger-mysql
  labels:
    app: mojaloop-centralledger-mysql
    chart: "mysql-1.0.4"
    release: "mojaloop"
    heritage: "Helm"
spec:
  ports:
  - name: mysql
    port: 3306
    targetPort: mysql
  selector:
    app: mojaloop-centralledger-mysql
    release: "mojaloop"
---
# Source: mojaloop/charts/central/charts/centralledger/charts/mysql/templates/service-repl.yaml
apiVersion: v1
kind: Service
metadata:
  name: "mojaloop-centralledger-mysql-repl"
  labels:
    app: mojaloop-centralledger-mysql
    chart: "mysql-1.0.4"
    release: "mojaloop"
    heritage: "Helm"
spec:
  clusterIP: None
  ports:
  - name: galera
    port: 4567
  - name: state-xfer
    port: 4568
  - name: state-snap
    port: 4444
  selector:
    app: mojaloop-centralledger-mysql
    release: "mojaloop"
---
# Source: mojaloop/charts/central/charts/centralsettlement/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-centralsettlement
  labels:
    app.kubernetes.io/name: centralsettlement
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 10.5.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-11.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3007
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: centralsettlement
    app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/finance-portal-settlement-management/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-finance-portal-settlement-management
  labels:
    app.kubernetes.io/name: finance-portal-settlement-management
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 9.2.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-settlement-management-11.0.0
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: operator
      protocol: TCP
      name: http-operator-settlement
    - port: 5000
      targetPort: management
      protocol: TCP
      name: http-settlement-management
  selector:
    app.kubernetes.io/name: finance-portal-settlement-management
    app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/finance-portal/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-finance-portal
  labels:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 10.4.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-11.0.0
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: backend
      protocol: TCP
      name: http-finance-portal-backend
    - port: 80
      targetPort: frontend
      protocol: TCP
      name: http-finance-portal-ui
  selector:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-ml-api-adapter-handler-notification
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-11.0.0
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: 
  selector:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-ml-api-adapter-service
  labels:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.0.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-service-11.0.0
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: 
  selector:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-sim-payeefsp-backend
  labels:
    app.kubernetes.io/name: mojaloop-sim-payeefsp-backend
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
   type: ClusterIP
   ports:
     - port: 3000
       protocol: TCP
       name: simapi
       targetPort: simapi
     - port: 3002
       protocol: TCP
       name: reportapi
       targetPort: reportapi
     - port: 3003
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: mojaloop-sim-payeefsp-backend
      app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-sim-payeefsp-scheme-adapter
  labels:
    app.kubernetes.io/name: mojaloop-sim-payeefsp-scheme-adapter
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
   type: ClusterIP
   ports:
     - port: 4000
       protocol: TCP
       name: inboundapi
       targetPort: inboundapi
     - port: 4001
       protocol: TCP
       name: outboundapi
       targetPort: outboundapi
     - port: 4002
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: mojaloop-sim-payeefsp-scheme-adapter
      app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-sim-payeefsp-cache
  labels:
    app.kubernetes.io/name: mojaloop-sim-payeefsp-cache
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
   type: ClusterIP
   ports:
     - port: 6379
       protocol: TCP
       name: redis
       targetPort: redis
   selector:
      app.kubernetes.io/name: mojaloop-sim-payeefsp-cache
      app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-sim-payerfsp-backend
  labels:
    app.kubernetes.io/name: mojaloop-sim-payerfsp-backend
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
   type: ClusterIP
   ports:
     - port: 3000
       protocol: TCP
       name: simapi
       targetPort: simapi
     - port: 3002
       protocol: TCP
       name: reportapi
       targetPort: reportapi
     - port: 3003
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: mojaloop-sim-payerfsp-backend
      app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-sim-payerfsp-scheme-adapter
  labels:
    app.kubernetes.io/name: mojaloop-sim-payerfsp-scheme-adapter
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
   type: ClusterIP
   ports:
     - port: 4000
       protocol: TCP
       name: inboundapi
       targetPort: inboundapi
     - port: 4001
       protocol: TCP
       name: outboundapi
       targetPort: outboundapi
     - port: 4002
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: mojaloop-sim-payerfsp-scheme-adapter
      app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-sim-payerfsp-cache
  labels:
    app.kubernetes.io/name: mojaloop-sim-payerfsp-cache
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
   type: ClusterIP
   ports:
     - port: 6379
       protocol: TCP
       name: redis
       targetPort: redis
   selector:
      app.kubernetes.io/name: mojaloop-sim-payerfsp-cache
      app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-sim-testfsp1-backend
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp1-backend
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
   type: ClusterIP
   ports:
     - port: 3000
       protocol: TCP
       name: simapi
       targetPort: simapi
     - port: 3002
       protocol: TCP
       name: reportapi
       targetPort: reportapi
     - port: 3003
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: mojaloop-sim-testfsp1-backend
      app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-sim-testfsp1-scheme-adapter
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp1-scheme-adapter
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
   type: ClusterIP
   ports:
     - port: 4000
       protocol: TCP
       name: inboundapi
       targetPort: inboundapi
     - port: 4001
       protocol: TCP
       name: outboundapi
       targetPort: outboundapi
     - port: 4002
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: mojaloop-sim-testfsp1-scheme-adapter
      app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-sim-testfsp1-cache
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp1-cache
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
   type: ClusterIP
   ports:
     - port: 6379
       protocol: TCP
       name: redis
       targetPort: redis
   selector:
      app.kubernetes.io/name: mojaloop-sim-testfsp1-cache
      app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-sim-testfsp2-backend
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp2-backend
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
   type: ClusterIP
   ports:
     - port: 3000
       protocol: TCP
       name: simapi
       targetPort: simapi
     - port: 3002
       protocol: TCP
       name: reportapi
       targetPort: reportapi
     - port: 3003
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: mojaloop-sim-testfsp2-backend
      app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-sim-testfsp2-scheme-adapter
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp2-scheme-adapter
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
   type: ClusterIP
   ports:
     - port: 4000
       protocol: TCP
       name: inboundapi
       targetPort: inboundapi
     - port: 4001
       protocol: TCP
       name: outboundapi
       targetPort: outboundapi
     - port: 4002
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: mojaloop-sim-testfsp2-scheme-adapter
      app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-sim-testfsp2-cache
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp2-cache
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
   type: ClusterIP
   ports:
     - port: 6379
       protocol: TCP
       name: redis
       targetPort: redis
   selector:
      app.kubernetes.io/name: mojaloop-sim-testfsp2-cache
      app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-sim-testfsp3-backend
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp3-backend
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
   type: ClusterIP
   ports:
     - port: 3000
       protocol: TCP
       name: simapi
       targetPort: simapi
     - port: 3002
       protocol: TCP
       name: reportapi
       targetPort: reportapi
     - port: 3003
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: mojaloop-sim-testfsp3-backend
      app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-sim-testfsp3-scheme-adapter
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp3-scheme-adapter
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
   type: ClusterIP
   ports:
     - port: 4000
       protocol: TCP
       name: inboundapi
       targetPort: inboundapi
     - port: 4001
       protocol: TCP
       name: outboundapi
       targetPort: outboundapi
     - port: 4002
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: mojaloop-sim-testfsp3-scheme-adapter
      app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-sim-testfsp3-cache
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp3-cache
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
   type: ClusterIP
   ports:
     - port: 6379
       protocol: TCP
       name: redis
       targetPort: redis
   selector:
      app.kubernetes.io/name: mojaloop-sim-testfsp3-cache
      app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-sim-testfsp4-backend
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp4-backend
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
   type: ClusterIP
   ports:
     - port: 3000
       protocol: TCP
       name: simapi
       targetPort: simapi
     - port: 3002
       protocol: TCP
       name: reportapi
       targetPort: reportapi
     - port: 3003
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: mojaloop-sim-testfsp4-backend
      app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-sim-testfsp4-scheme-adapter
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp4-scheme-adapter
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
   type: ClusterIP
   ports:
     - port: 4000
       protocol: TCP
       name: inboundapi
       targetPort: inboundapi
     - port: 4001
       protocol: TCP
       name: outboundapi
       targetPort: outboundapi
     - port: 4002
       protocol: TCP
       name: testapi
       targetPort: testapi
   selector:
      app.kubernetes.io/name: mojaloop-sim-testfsp4-scheme-adapter
      app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/mojaloop-simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-sim-testfsp4-cache
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp4-cache
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
   type: ClusterIP
   ports:
     - port: 6379
       protocol: TCP
       name: redis
       targetPort: redis
   selector:
      app.kubernetes.io/name: mojaloop-sim-testfsp4-cache
      app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/quoting-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-quoting-service
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.4
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-11.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3002
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/simulator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-simulator
  labels:
    app.kubernetes.io/name: simulator
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: simulator-11.0.0
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: "http"
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: simulator
    app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/transaction-requests-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mojaloop-transaction-requests-service
  labels:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: transaction-requests-service-11.0.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 4000
      protocol: TCP
      name: http-api
  selector:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: mojaloop
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service-admin/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-account-lookup-service-admin
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-admin-11.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: account-lookup-service-admin
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: account-lookup-service-admin
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: 11.1.2
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: account-lookup-service-admin-11.0.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - "until mysql -h mojaloop-account-lookup-mysql -P 3306 -u account_lookup --password=OdonPianoX  account_lookup   -e 'select version()' ; do echo waiting for MySQL; sleep 2; done;"
        - name: run-migration
          image: mojaloop/account-lookup-service:v11.1.2
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - npm run migrate
          volumeMounts:
            - name: mojaloop-account-lookup-service-admin-config-volume
              mountPath: /opt/account-lookup-service/config
      containers:
        - name: account-lookup-service-admin
          image: mojaloop/account-lookup-service:v11.1.2
          imagePullPolicy: Always
          command: ["node", "src/index.js", "server", "--admin"]
          env:
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: 
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: 
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: 
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: 
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: 
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: 
          ports:
            - name: http-admin
              containerPort: 4001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http-admin
          readinessProbe:
            httpGet:
              path: /health
              port: http-admin
          resources:
            {}
          volumeMounts:
          - name: mojaloop-account-lookup-service-admin-config-volume
            mountPath: /opt/account-lookup-service/config
        - name: account-lookup-service-admin-sidecar
          image: "mojaloop/event-sidecar:v9.5.1"
          imagePullPolicy: Always
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4003
          readinessProbe:
            httpGet:
              path: /health
              port: 4003
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4003
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop-account-lookup-service-admin-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: mojaloop-account-lookup-service-admin-config-volume
          configMap:
            name: mojaloop-account-lookup-service-admin-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: mojaloop-account-lookup-service-admin-sidecar-volume
          configMap:
            name: mojaloop-account-lookup-service-admin-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-account-lookup-service
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-11.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: account-lookup-service
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: account-lookup-service
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: 11.1.2
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: account-lookup-service-11.0.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - "until mysql -h mojaloop-account-lookup-mysql -P 3306 -u account_lookup --password=OdonPianoX  account_lookup   -e 'select * from oracleEndpoint;' ; do echo waiting for MySQL; sleep 2; done;"
      containers:
        - name: account-lookup-service
          image: "mojaloop/account-lookup-service:v11.1.2"
          imagePullPolicy: Always
          command: ["node", "src/index.js", "server", "--api"]
          env:
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: 
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: 
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: 
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: 
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: 
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: 
          ports:
            - name: http-api
              containerPort: 4002
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http-api
          readinessProbe:
            httpGet:
              path: /health
              port: http-api
          resources:
            {}
          volumeMounts:
          - name: mojaloop-account-lookup-service-config-volume
            mountPath: /opt/account-lookup-service/config
          - name: jws-signing-key
            mountPath: /opt/account-lookup-service/secrets
        - name: account-lookup-service-sidecar
          image: "mojaloop/event-sidecar:v9.5.1"
          imagePullPolicy: Always
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4003
          readinessProbe:
            httpGet:
              path: /health
              port: 4003
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4003
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop-account-lookup-service-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: mojaloop-account-lookup-service-config-volume
          configMap:
            name: mojaloop-account-lookup-service-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: jws-signing-key
          secret:
            secretName: mojaloop-account-lookup-service-jws-signing-key
        - name: mojaloop-account-lookup-service-sidecar-volume
          configMap:
            name: mojaloop-account-lookup-service-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/charts/mongodb/templates/deployment-standalone.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-mongodb
  labels:
    app: mongodb
    chart: mongodb-7.8.10
    release: "mojaloop"
    heritage: "Helm"
spec:
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: mongodb
      release: "mojaloop"
  template:
    metadata:
      labels:
        app: mongodb
        release: "mojaloop"
        chart: mongodb-7.8.10
    spec:
      securityContext:
        fsGroup: 1001      
      initContainers:
      containers:
      - name: mojaloop-mongodb
        image: docker.io/bitnami/mongodb:4.0.3
        imagePullPolicy: "Always"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mojaloop-mongodb
              key: mongodb-password
        - name: MONGODB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mojaloop-mongodb
              key: mongodb-root-password
        - name: MONGODB_USERNAME
          value: "mojaloop"
        - name: MONGODB_SYSTEM_LOG_VERBOSITY
          value: "0"
        - name: MONGODB_DISABLE_SYSTEM_LOG
          value: "no"
        - name: MONGODB_DATABASE
          value: "mojaloop"
        - name: MONGODB_ENABLE_IPV6
          value: "yes"
        - name: MONGODB_ENABLE_DIRECTORY_PER_DB
          value: "no"
        ports:
        - name: mongodb
          containerPort: 27017
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        volumeMounts:
        - name: data
          mountPath: /bitnami/mongodb
          subPath: 
        resources:
          {}
      volumes:
      - name: data
        emptyDir: {}
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-centraleventprocessor
  labels:
    app.kubernetes.io/name: centraleventprocessor
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 10.5.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centraleventprocessor-11.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centraleventprocessor
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centraleventprocessor
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: 10.5.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centraleventprocessor-11.0.0
    spec:
      initContainers:
        - name: wait-for-mongodb
          image: bitnami/mongodb:latest
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - "mongo mongodb://mojaloop-mongodb:27017 --eval \"db.adminCommand('ping')\""
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server mojaloop-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:

      containers:
        - name: centraleventprocessor
          image: "mojaloop/central-event-processor:v10.5.0"
          imagePullPolicy: Always
          ports:
            - containerPort: 3080
              name: http
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: 3080
            initialDelaySeconds: 30
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3080
            initialDelaySeconds: 30
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop-centraleventprocessor-config-volume
              mountPath: /opt/central-event-processor/config
          env:
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
      volumes:
        - name: mojaloop-centraleventprocessor-config-volume
          configMap:
            name: mojaloop-centraleventprocessor-config
            items:
              - key: default.json
                path: default.json
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-admin-transfer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-centralledger-handler-admin-transfer
  labels:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-admin-transfer-11.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-admin-transfer
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-admin-transfer
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: 11.2.3
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-admin-transfer-11.0.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mojaloop-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server mojaloop-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-admin-transfer
          image: "mojaloop/central-ledger:v11.2.3"
          imagePullPolicy: Always
          command: ["node", "src/handlers/index.js", "handler", "--admin"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
          volumeMounts:
          - name: mojaloop-centralledger-handler-admin-transfer-config-volume
            mountPath: /opt/central-ledger/config
      volumes:
        - name: mojaloop-centralledger-handler-admin-transfer-config-volume
          configMap:
            name: mojaloop-centralledger-handler-admin-transfer-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-centralledger-handler-timeout
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-11.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-timeout
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-timeout
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: 11.2.3
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-timeout-11.0.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mojaloop-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server mojaloop-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-timeout
          image: "mojaloop/central-ledger:v11.2.3"
          imagePullPolicy: Always
          command: ["node", "src/handlers/index.js", "handler", "--timeout"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
          volumeMounts:
          - name: mojaloop-centralledger-handler-timeout-config-volume
            mountPath: /opt/central-ledger/config
        - name: centralledger-handler-timeout-sidecar
          image: "mojaloop/event-sidecar:v9.5.1"
          imagePullPolicy: Always
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop-centralledger-handler-timeout-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: mojaloop-centralledger-handler-timeout-config-volume
          configMap:
            name: mojaloop-centralledger-handler-timeout-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: mojaloop-centralledger-handler-timeout-sidecar-volume
          configMap:
            name: mojaloop-centralledger-handler-timeout-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-centralledger-handler-transfer-fulfil
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-11.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-transfer-fulfil
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-transfer-fulfil
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: 11.2.3
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-transfer-fulfil-11.0.0
      annotations:
        prometheus.io/port: "3001"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mojaloop-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server mojaloop-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-transfer-fulfil
          image: "mojaloop/central-ledger:v11.2.3"
          imagePullPolicy: Always
          command: ["node", "src/handlers/index.js", "handler", "--fulfil"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
          volumeMounts:
          - name: mojaloop-centralledger-handler-transfer-fulfil-config-volume
            mountPath: /opt/central-ledger/config
        - name: centralledger-handler-transfer-fulfil-sidecar
          image: "mojaloop/event-sidecar:v9.5.1"
          imagePullPolicy: Always
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop-centralledger-handler-transfer-fulfil-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: mojaloop-centralledger-handler-transfer-fulfil-config-volume
          configMap:
            name: mojaloop-centralledger-handler-transfer-fulfil-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: mojaloop-centralledger-handler-transfer-fulfil-sidecar-volume
          configMap:
            name: mojaloop-centralledger-handler-transfer-fulfil-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-get/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-centralledger-handler-transfer-get
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-get-11.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-transfer-get
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-transfer-get
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: 11.2.3
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-transfer-get-11.0.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mojaloop-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server mojaloop-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-transfer-get
          image: "mojaloop/central-ledger:v11.2.3"
          imagePullPolicy: Always
          command: ["node", "src/handlers/index.js", "handler", "--get"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
          volumeMounts:
          - name: mojaloop-centralledger-handler-transfer-get-config-volume
            mountPath: /opt/central-ledger/config
      volumes:
        - name: mojaloop-centralledger-handler-transfer-get-config-volume
          configMap:
            name: mojaloop-centralledger-handler-transfer-get-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-centralledger-handler-transfer-position
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-11.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-transfer-position
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-transfer-position
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: 11.2.3
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-transfer-position-11.0.0
      annotations:
        prometheus.io/port: "3001"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mojaloop-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server mojaloop-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-transfer-position
          image: "mojaloop/central-ledger:v11.2.3"
          imagePullPolicy: Always
          command: ["node", "src/handlers/index.js", "handler", "--position"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
          volumeMounts:
          - name: mojaloop-centralledger-handler-transfer-position-config-volume
            mountPath: /opt/central-ledger/config
        - name: centralledger-handler-transfer-position-sidecar
          image: "mojaloop/event-sidecar:v9.5.1"
          imagePullPolicy: Always
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop-centralledger-handler-transfer-position-sidecar-volum
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: mojaloop-centralledger-handler-transfer-position-config-volume
          configMap:
            name: mojaloop-centralledger-handler-transfer-position-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: mojaloop-centralledger-handler-transfer-position-sidecar-volum
          configMap:
            name: mojaloop-centralledger-handler-transfer-position-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-centralledger-handler-transfer-prepare
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-11.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-handler-transfer-prepare
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-handler-transfer-prepare
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: 11.2.3
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-handler-transfer-prepare-11.0.0
      annotations:
        prometheus.io/port: "3001"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mojaloop-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server mojaloop-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: centralledger-handler-transfer-prepare
          image: "mojaloop/central-ledger:v11.2.3"
          imagePullPolicy: Always
          command: ["node", "src/handlers/index.js", "handler", "--prepare"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
          volumeMounts:
          - name: mojaloop-centralledger-handler-transfer-prepare-config-volume
            mountPath: /opt/central-ledger/config
        - name: centralledger-handler-transfer-prepare-sidecar
          image: "mojaloop/event-sidecar:v9.5.1"
          imagePullPolicy: Always
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop-centralledger-handler-transfer-prepare-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: mojaloop-centralledger-handler-transfer-prepare-config-volume
          configMap:
            name: mojaloop-centralledger-handler-transfer-prepare-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
        - name: mojaloop-centralledger-handler-transfer-prepare-sidecar-volume
          configMap:
            name: mojaloop-centralledger-handler-transfer-prepare-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-centralledger-service
  labels:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-service-11.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralledger-service
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralledger-service
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: 11.2.2
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralledger-service-11.0.0
      annotations:
        prometheus.io/port: "3001"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - "until mysql -h mojaloop-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger   -e 'select version()' ; do echo waiting for MySQL; sleep 2; done;"
        - name: run-migration
          image: mojaloop/central-ledger:v11.2.3
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - npm run migrate
          env:
            - name: "CLEDG_MIGRATIONS__RUN_DATA_MIGRATIONS"
              value: "true"
          volumeMounts:
            - name: mojaloop-centralledger-service-config-volume
              mountPath: /opt/central-ledger/config
      containers:
        - name: centralledger-service
          image: mojaloop/central-ledger:v11.2.3
          imagePullPolicy: Always
          command: ["node", "src/api/index.js"]
          ports:
            - name: http-api
              containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
          volumeMounts:
          - name: mojaloop-centralledger-service-config-volume
            mountPath: /opt/central-ledger/config
      volumes:
        - name: mojaloop-centralledger-service-config-volume
          configMap:
            name: mojaloop-centralledger-service-config
            items:
            - key: default.json
              path: default.json
            - key: knexfile.js
              path: knexfile.js
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/templates/deployment-kafka-exporter.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-kafka-exporter
  labels:
    helm.sh/chart: kafka-0.21.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kafka-monitor
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: mojaloop
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: kafka-monitor
      app.kubernetes.io/name: kafka
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9308"
      labels:
        helm.sh/chart: kafka-0.21.2
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: kafka-monitor
        app.kubernetes.io/name: kafka
        app.kubernetes.io/instance: mojaloop
    spec:
      containers:
      - image: "danielqsj/kafka-exporter:v1.0.1"
        name: kafka-exporter
        args:
          - --kafka.server=mojaloop-kafka:9092
          - --web.listen-address=:9308
        ports:
          - containerPort: 9308
        resources:
          {}
---
# Source: mojaloop/charts/central/charts/centralsettlement/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-centralsettlement
  labels:
    app.kubernetes.io/name: centralsettlement
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 10.5.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-11.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: centralsettlement
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: centralsettlement
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: 10.5.0
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: centralsettlement-11.0.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mojaloop-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
      containers:
        - name: centralsettlement
          image: "mojaloop/central-settlement:v10.5.0"
          imagePullPolicy: Always
          ports:
            - name: http-api
              containerPort: 3007
          env: 
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
          volumeMounts:
          - name: mojaloop-centralsettlement-config-volume
            mountPath: /opt/central-settlement/config
      volumes:
        - name: mojaloop-centralsettlement-config-volume
          configMap:
            name: mojaloop-centralsettlement-config
            items:
            - key: default.json
              path: default.json
#            - key: knexfile.js
#              path: knexfile.js
---
# Source: mojaloop/charts/finance-portal-settlement-management/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-finance-portal-settlement-management
  labels:
    app.kubernetes.io/name: finance-portal-settlement-management
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 9.2.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-settlement-management-11.0.0
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: finance-portal-settlement-management
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: finance-portal-settlement-management
        app.kubernetes.io/instance: mojaloop
    spec:
      initContainers:
        - name: operator-settlement-init
          image: mojaloop/operator-settlement
          imagePullPolicy: 
          command:
            - sh
            - "-c"
            - "mysql -h mojaloop-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger < /opt/operator-settlement/init.sql"
        - name: settlement-management-init
          image: mojaloop/settlement-management
          imagePullPolicy: 
          command:
            - sh
            - "-c"
            - "mysql -h mojaloop-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger < /opt/settlement-management/init.sql"
      containers:
      - name: operator-settlement
        image: "mojaloop/operator-settlement:v9.2.1"
        imagePullPolicy: Always
        ports:
        - name: operator
          containerPort: 3000
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: operator
        readinessProbe:
          httpGet:
            path: /
            port: operator
        envFrom:
        - configMapRef:
            name: mojaloop-finance-portal-settlement-management
        - secretRef:
            name: mojaloop-finance-portal-settlement-management
        resources: {}
      - name: settlement-management
        image: "mojaloop/settlement-management:v8.8.2"
        imagePullPolicy: Always
        ports:
          - name: management
            containerPort: 5000
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: management
        readinessProbe:
          httpGet:
            path: /
            port: management
        envFrom:
          - configMapRef:
              name: mojaloop-finance-portal-settlement-management
          - secretRef:
              name: mojaloop-finance-portal-settlement-management
      imagePullSecrets:
        - name: pull-secrets
---
# Source: mojaloop/charts/finance-portal/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-finance-portal
  labels:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 10.4.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-11.0.0
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: finance-portal
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: finance-portal
        app.kubernetes.io/instance: mojaloop
    spec:
      initContainers:
      containers:
      - name: backend
        image: "mojaloop/finance-portal-backend-service:v10.4.0"
        imagePullPolicy: Always
        ports:
        - name: backend
          containerPort: 3000
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: backend
        readinessProbe:
          httpGet:
            path: /
            port: backend
        envFrom:
        - configMapRef:
            name: mojaloop-finance-portal
        - secretRef:
            name: mojaloop-finance-portal
        volumeMounts:
          - name: mojaloop-finance-portal-secrets-volume
            mountPath: /opt/finance-portal-backend-service/secrets
            readOnly: true
        resources:
      - name: frontend
        image: "mojaloop/finance-portal-ui:v10.4.0"
        imagePullPolicy: Always
        ports:
        - name: frontend
          containerPort: 80
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: frontend
        readinessProbe:
          httpGet:
            path: /
            port: frontend
        envFrom:
        - configMapRef:
            name: mojaloop-finance-portal
        - secretRef:
            name: mojaloop-finance-portal
      ## Pod scheduling preferences.
      ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
      affinity: {}

      ## Node labels for pod assignment
      ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
      nodeSelector: {}

      ## Set toleration for scheduler
      ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
      tolerations: []
      volumes:
        - name: mojaloop-finance-portal-secrets-volume
          secret:
            secretName: mojaloop-finance-portal-certs
            defaultMode: 511
      imagePullSecrets:
      - name: pull-secrets
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-ml-api-adapter-handler-notification
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-11.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ml-api-adapter-handler-notification
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ml-api-adapter-handler-notification
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: 11.1.2
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: ml-api-adapter-handler-notification-11.0.0
      annotations:
        prometheus.io/port: "3000"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server mojaloop-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: ml-api-adapter-handler-notification
          image: "mojaloop/ml-api-adapter:v11.1.2"
          imagePullPolicy: Always
          command: ["node", "src/handlers/index.js", "handler", "--notification"]
          ports:
            - containerPort: 3000
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop-ml-api-adapter-handler-notification-config-volume
              mountPath: /opt/ml-api-adapter/config
            - name: jws-signing-key
              mountPath: /opt/ml-api-adapter/secrets
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
        - name: ml-api-adapter-handler-notification-sidecar
          image: "mojaloop/event-sidecar:v9.5.1"
          imagePullPolicy: Always
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop-ml-api-adapter-handler-notification-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: jws-signing-key
          secret:
            secretName: mojaloop-ml-api-adapter-handler-notification-jws-signing-key
        - name: mojaloop-ml-api-adapter-handler-notification-config-volume
          configMap:
            name: mojaloop-ml-api-adapter-handler-notification-config
            items:
              - key: default.json
                path: default.json
        - name: mojaloop-ml-api-adapter-handler-notification-sidecar-volume
          configMap:
            name: mojaloop-ml-api-adapter-handler-notification-sidecar
            items:
              - key: default.json
                path: default.json
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-ml-api-adapter-service
  labels:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.0.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-service-11.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ml-api-adapter-service
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ml-api-adapter-service
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: 11.0.3
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: ml-api-adapter-service-11.0.0
      annotations:
        prometheus.io/port: "3000"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: wait-for-kafka
          image: solsson/kafka:latest
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - "until ./bin/kafka-broker-api-versions.sh --bootstrap-server mojaloop-kafka:9092; do echo waiting for Kafka; sleep 2; done;"
          env:
      containers:
        - name: ml-api-adapter-service
          image: "mojaloop/ml-api-adapter:v11.1.2"
          imagePullPolicy: Always
          command: ["node", "src/api/index.js"]
          ports:
            - containerPort: 3000
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop-ml-api-adapter-service-config-volume
              mountPath: /opt/ml-api-adapter/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0
        - name: ml-api-adapter-service-sidecar
          image: "mojaloop/event-sidecar:v9.5.1"
          imagePullPolicy: Always
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop-ml-api-adapter-service-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: mojaloop-ml-api-adapter-service-config-volume
          configMap:
            name: mojaloop-ml-api-adapter-service-config
            items:
            - key: default.json
              path: default.json
        - name: mojaloop-ml-api-adapter-service-sidecar-volume
          configMap:
            name: mojaloop-ml-api-adapter-service-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-sim-payeefsp-scheme-adapter
  labels:
    app.kubernetes.io/name: mojaloop-sim-payeefsp-scheme-adapter
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: mojaloop-sim-payeefsp-scheme-adapter
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mojaloop-sim-payeefsp-scheme-adapter
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: "11.1.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-11.1.0
    spec:
      volumes:
      - name: jws-private-key
        secret:
          secretName: mojaloop-sim-payeefsp-jws-priv-key
      - name: jws-public-keys
        configMap:
          name: mojaloop-sim-jws-public-keys
      - name: tls-secrets
        secret:
          secretName: mojaloop-sim-payeefsp-tls-creds
      initContainers:
      
      containers:
      - name: scheme-adapter
        image: "mojaloop/sdk-scheme-adapter:v11.3.0"
        imagePullPolicy: Always
        ports:
          - name: inboundapi
            containerPort: 4000
            protocol: TCP
          - name: outboundapi
            containerPort: 4001
            protocol: TCP
          - name: testapi
            containerPort: 4002
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        volumeMounts:
        - name: jws-public-keys
          mountPath: /jwsVerificationKeys
        - name: jws-private-key
          mountPath: "/jwsSigningKey/"
        - name: tls-secrets
          mountPath: "/secrets/"
        env:
        - name: CACHE_HOST
          value: mojaloop-sim-payeefsp-cache
        - name: BACKEND_ENDPOINT
          value: mojaloop-sim-payeefsp-backend:3000
        - name: DFSP_ID
          value: "payeefsp"
        - name: IN_CA_CERT_PATH
          value: "/secrets/inbound-cacert.pem"
        - name: IN_SERVER_CERT_PATH
          value: "/secrets/inbound-cert.pem"
        - name: IN_SERVER_KEY_PATH
          value: "/secrets/inbound-key.pem"
        - name: OUT_CA_CERT_PATH
          value: "/secrets/outbound-cacert.pem"
        - name: OUT_CLIENT_CERT_PATH
          value: "/secrets/outbound-cert.pem"
        - name: OUT_CLIENT_KEY_PATH
          value: "/secrets/outbound-key.pem"
        - name: JWS_SIGNING_KEY_PATH
          value: "/jwsSigningKey/private.key"
        - name: ALLOW_TRANSFER_WITHOUT_QUOTE
          value: "false"
        - name: ALS_ENDPOINT
          value: "mojaloop-account-lookup-service"
        - name: AUTO_ACCEPT_PARTY
          value: "true"
        - name: AUTO_ACCEPT_QUOTES
          value: "true"
        - name: BULK_QUOTES_ENDPOINT
          value: "mojaloop-bulk-quoting-service"
        - name: BULK_TRANSFERS_ENDPOINT
          value: "mojaloop-bulk-api-adapter-service"
        - name: CACHE_PORT
          value: "6379"
        - name: CHECK_ILP
          value: "true"
        - name: ENABLE_OAUTH_TOKEN_ENDPOINT
          value: "false"
        - name: ENABLE_TEST_FEATURES
          value: "true"
        - name: EXPIRY_SECONDS
          value: "60"
        - name: ILP_SECRET
          value: "Quaixohyaesahju3thivuiChai5cahng"
        - name: INBOUND_LISTEN_PORT
          value: "4000"
        - name: INBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: JWS_SIGN
          value: "true"
        - name: JWS_SIGNING_KEY_PATH
          value: "/jwsSigningKey.key"
        - name: JWS_SIGN_PUT_PARTIES
          value: "true"
        - name: JWS_VERIFICATION_KEYS_DIRECTORY
          value: "/jwsVerificationKeys"
        - name: LOG_INDENT
          value: "0"
        - name: OAUTH_CLIENT_KEY
          value: ""
        - name: OAUTH_CLIENT_SECRET
          value: ""
        - name: OAUTH_REFRESH_SECONDS
          value: "3600"
        - name: OAUTH_TOKEN_ENDPOINT
          value: ""
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_KEY
          value: "test-client-key"
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET
          value: "test-client-secret"
        - name: OAUTH_TOKEN_ENDPOINT_LISTEN_PORT
          value: "6000"
        - name: OUTBOUND_LISTEN_PORT
          value: "4001"
        - name: OUTBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: PEER_ENDPOINT
          value: "mojaloop-switch"
        - name: QUOTES_ENDPOINT
          value: "mojaloop-quoting-service"
        - name: REJECT_EXPIRED_QUOTE_RESPONSES
          value: "false"
        - name: REJECT_EXPIRED_TRANSFER_FULFILS
          value: "false"
        - name: REJECT_TRANSFERS_ON_EXPIRED_QUOTES
          value: "false"
        - name: REQUEST_PROCESSING_TIMEOUT_SECONDS
          value: "30"
        - name: RESERVE_NOTIFICATION
          value: "false"
        - name: RESOURCE_VERSIONS
          value: "transfers=1.0,quotes=1.0"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: TEST_LISTEN_PORT
          value: "4002"
        - name: TEST_MUTUAL_TLS_ENABLED
          value: "false"
        - name: TRANSACTION_REQUESTS_ENDPOINT
          value: "mojaloop-transaction-requests-service"
        - name: TRANSFERS_ENDPOINT
          value: "mojaloop-ml-api-adapter-service"
        - name: USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP
          value: "false"
        - name: VALIDATE_INBOUND_JWS
          value: "false"
        - name: VALIDATE_INBOUND_PUT_PARTIES_JWS
          value: "true"
        - name: WS02_BEARER_TOKEN
          value: "7718fa9b-be13-3fe7-87f0-a12cf1628168"
        - name: WSO2_AUTH_FAILURE_REQUEST_RETRIES
          value: "0"
        resources:
          null
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-sim-payeefsp-backend
  labels:
    app.kubernetes.io/name: mojaloop-sim-payeefsp-backend
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: mojaloop-sim-payeefsp-backend
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mojaloop-sim-payeefsp-backend
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: "11.1.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-11.1.0
    spec:
      initContainers:
      
      containers:
      - name: backend
        image: "mojaloop/mojaloop-simulator:v11.2.1"
        imagePullPolicy: Always
        ports:
          - name: simapi
            containerPort: 3000 # these are hard-coded in the service
            protocol: TCP
          - name: reportapi
            containerPort: 3002 # these are hard-coded in the service
            protocol: TCP
          - name: testapi
            containerPort: 3003 # these are hard-coded in the service
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        env:
        - name: OUTBOUND_ENDPOINT
          value: "http://mojaloop-sim-payeefsp-scheme-adapter:4001"
        - name: SCHEME_NAME
          value: "mojaloop-sim-payeefsp"
        - name: DFSP_ID
          value: "payeefsp"
        - name: CA_CERT_PATH
          value: "./secrets/cacert.pem"
        - name: FEE_MULTIPLIER
          value: "0.05"
        - name: HTTPS_ENABLED
          value: "false"
        - name: LOG_INDENT
          value: "0"
        - name: MODEL_DATABASE
          value: "./model.sqlite"
        - name: MUTUAL_TLS_ENABLED
          value: "false"
        - name: REPORT_API_LISTEN_PORT
          value: "3002"
        - name: RULES_FILE
          value: "/rules/rules.json"
        - name: SERVER_CERT_PATH
          value: "./secrets/servercert.pem"
        - name: SERVER_KEY_PATH
          value: "./secrets/serverkey.pem"
        - name: SIMULATOR_API_LISTEN_PORT
          value: "3000"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: SQLITE_LOG_FILE
          value: "./log.sqlite"
        - name: TEST_API_LISTEN_PORT
          value: "3003"
        resources:
          null
        volumeMounts:
        - name: mojaloop-sim-rules
          mountPath: /rules/
      volumes:
      - name: mojaloop-sim-rules
        configMap:
          name: mojaloop-sim-payeefsp-rules
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-sim-payeefsp-cache
  labels:
    app.kubernetes.io/name: mojaloop-sim-payeefsp-cache
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: mojaloop-sim-payeefsp-cache
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mojaloop-sim-payeefsp-cache
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: "11.1.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-11.1.0
    spec:
      initContainers:
      
      containers:
      - name: cache
        image: "redis:5.0.4-alpine"
        imagePullPolicy: Always
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        resources:
            null
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-sim-payerfsp-scheme-adapter
  labels:
    app.kubernetes.io/name: mojaloop-sim-payerfsp-scheme-adapter
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: mojaloop-sim-payerfsp-scheme-adapter
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mojaloop-sim-payerfsp-scheme-adapter
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: "11.1.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-11.1.0
    spec:
      volumes:
      - name: jws-private-key
        secret:
          secretName: mojaloop-sim-payerfsp-jws-priv-key
      - name: jws-public-keys
        configMap:
          name: mojaloop-sim-jws-public-keys
      - name: tls-secrets
        secret:
          secretName: mojaloop-sim-payerfsp-tls-creds
      initContainers:
      
      containers:
      - name: scheme-adapter
        image: "mojaloop/sdk-scheme-adapter:v11.3.0"
        imagePullPolicy: Always
        ports:
          - name: inboundapi
            containerPort: 4000
            protocol: TCP
          - name: outboundapi
            containerPort: 4001
            protocol: TCP
          - name: testapi
            containerPort: 4002
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        volumeMounts:
        - name: jws-public-keys
          mountPath: /jwsVerificationKeys
        - name: jws-private-key
          mountPath: "/jwsSigningKey/"
        - name: tls-secrets
          mountPath: "/secrets/"
        env:
        - name: CACHE_HOST
          value: mojaloop-sim-payerfsp-cache
        - name: BACKEND_ENDPOINT
          value: mojaloop-sim-payerfsp-backend:3000
        - name: DFSP_ID
          value: "payerfsp"
        - name: IN_CA_CERT_PATH
          value: "/secrets/inbound-cacert.pem"
        - name: IN_SERVER_CERT_PATH
          value: "/secrets/inbound-cert.pem"
        - name: IN_SERVER_KEY_PATH
          value: "/secrets/inbound-key.pem"
        - name: OUT_CA_CERT_PATH
          value: "/secrets/outbound-cacert.pem"
        - name: OUT_CLIENT_CERT_PATH
          value: "/secrets/outbound-cert.pem"
        - name: OUT_CLIENT_KEY_PATH
          value: "/secrets/outbound-key.pem"
        - name: JWS_SIGNING_KEY_PATH
          value: "/jwsSigningKey/private.key"
        - name: ALLOW_TRANSFER_WITHOUT_QUOTE
          value: "false"
        - name: ALS_ENDPOINT
          value: "mojaloop-account-lookup-service"
        - name: AUTO_ACCEPT_PARTY
          value: "true"
        - name: AUTO_ACCEPT_QUOTES
          value: "true"
        - name: BULK_QUOTES_ENDPOINT
          value: "mojaloop-bulk-quoting-service"
        - name: BULK_TRANSFERS_ENDPOINT
          value: "mojaloop-bulk-api-adapter-service"
        - name: CACHE_PORT
          value: "6379"
        - name: CHECK_ILP
          value: "true"
        - name: ENABLE_OAUTH_TOKEN_ENDPOINT
          value: "false"
        - name: ENABLE_TEST_FEATURES
          value: "true"
        - name: EXPIRY_SECONDS
          value: "60"
        - name: ILP_SECRET
          value: "Quaixohyaesahju3thivuiChai5cahng"
        - name: INBOUND_LISTEN_PORT
          value: "4000"
        - name: INBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: JWS_SIGN
          value: "true"
        - name: JWS_SIGNING_KEY_PATH
          value: "/jwsSigningKey.key"
        - name: JWS_SIGN_PUT_PARTIES
          value: "true"
        - name: JWS_VERIFICATION_KEYS_DIRECTORY
          value: "/jwsVerificationKeys"
        - name: LOG_INDENT
          value: "0"
        - name: OAUTH_CLIENT_KEY
          value: ""
        - name: OAUTH_CLIENT_SECRET
          value: ""
        - name: OAUTH_REFRESH_SECONDS
          value: "3600"
        - name: OAUTH_TOKEN_ENDPOINT
          value: ""
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_KEY
          value: "test-client-key"
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET
          value: "test-client-secret"
        - name: OAUTH_TOKEN_ENDPOINT_LISTEN_PORT
          value: "6000"
        - name: OUTBOUND_LISTEN_PORT
          value: "4001"
        - name: OUTBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: PEER_ENDPOINT
          value: "mojaloop-switch"
        - name: QUOTES_ENDPOINT
          value: "mojaloop-quoting-service"
        - name: REJECT_EXPIRED_QUOTE_RESPONSES
          value: "false"
        - name: REJECT_EXPIRED_TRANSFER_FULFILS
          value: "false"
        - name: REJECT_TRANSFERS_ON_EXPIRED_QUOTES
          value: "false"
        - name: REQUEST_PROCESSING_TIMEOUT_SECONDS
          value: "30"
        - name: RESERVE_NOTIFICATION
          value: "false"
        - name: RESOURCE_VERSIONS
          value: "transfers=1.0,quotes=1.0"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: TEST_LISTEN_PORT
          value: "4002"
        - name: TEST_MUTUAL_TLS_ENABLED
          value: "false"
        - name: TRANSACTION_REQUESTS_ENDPOINT
          value: "mojaloop-transaction-requests-service"
        - name: TRANSFERS_ENDPOINT
          value: "mojaloop-ml-api-adapter-service"
        - name: USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP
          value: "false"
        - name: VALIDATE_INBOUND_JWS
          value: "false"
        - name: VALIDATE_INBOUND_PUT_PARTIES_JWS
          value: "true"
        - name: WS02_BEARER_TOKEN
          value: "7718fa9b-be13-3fe7-87f0-a12cf1628168"
        - name: WSO2_AUTH_FAILURE_REQUEST_RETRIES
          value: "0"
        resources:
          null
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-sim-payerfsp-backend
  labels:
    app.kubernetes.io/name: mojaloop-sim-payerfsp-backend
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: mojaloop-sim-payerfsp-backend
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mojaloop-sim-payerfsp-backend
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: "11.1.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-11.1.0
    spec:
      initContainers:
      
      containers:
      - name: backend
        image: "mojaloop/mojaloop-simulator:v11.2.1"
        imagePullPolicy: Always
        ports:
          - name: simapi
            containerPort: 3000 # these are hard-coded in the service
            protocol: TCP
          - name: reportapi
            containerPort: 3002 # these are hard-coded in the service
            protocol: TCP
          - name: testapi
            containerPort: 3003 # these are hard-coded in the service
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        env:
        - name: OUTBOUND_ENDPOINT
          value: "http://mojaloop-sim-payerfsp-scheme-adapter:4001"
        - name: SCHEME_NAME
          value: "mojaloop-sim-payerfsp"
        - name: DFSP_ID
          value: "payerfsp"
        - name: CA_CERT_PATH
          value: "./secrets/cacert.pem"
        - name: FEE_MULTIPLIER
          value: "0.05"
        - name: HTTPS_ENABLED
          value: "false"
        - name: LOG_INDENT
          value: "0"
        - name: MODEL_DATABASE
          value: "./model.sqlite"
        - name: MUTUAL_TLS_ENABLED
          value: "false"
        - name: REPORT_API_LISTEN_PORT
          value: "3002"
        - name: RULES_FILE
          value: "/rules/rules.json"
        - name: SERVER_CERT_PATH
          value: "./secrets/servercert.pem"
        - name: SERVER_KEY_PATH
          value: "./secrets/serverkey.pem"
        - name: SIMULATOR_API_LISTEN_PORT
          value: "3000"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: SQLITE_LOG_FILE
          value: "./log.sqlite"
        - name: TEST_API_LISTEN_PORT
          value: "3003"
        resources:
          null
        volumeMounts:
        - name: mojaloop-sim-rules
          mountPath: /rules/
      volumes:
      - name: mojaloop-sim-rules
        configMap:
          name: mojaloop-sim-payerfsp-rules
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-sim-payerfsp-cache
  labels:
    app.kubernetes.io/name: mojaloop-sim-payerfsp-cache
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: mojaloop-sim-payerfsp-cache
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mojaloop-sim-payerfsp-cache
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: "11.1.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-11.1.0
    spec:
      initContainers:
      
      containers:
      - name: cache
        image: "redis:5.0.4-alpine"
        imagePullPolicy: Always
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        resources:
            null
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-sim-testfsp1-scheme-adapter
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp1-scheme-adapter
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: mojaloop-sim-testfsp1-scheme-adapter
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mojaloop-sim-testfsp1-scheme-adapter
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: "11.1.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-11.1.0
    spec:
      volumes:
      - name: jws-private-key
        secret:
          secretName: mojaloop-sim-testfsp1-jws-priv-key
      - name: jws-public-keys
        configMap:
          name: mojaloop-sim-jws-public-keys
      - name: tls-secrets
        secret:
          secretName: mojaloop-sim-testfsp1-tls-creds
      initContainers:
      
      containers:
      - name: scheme-adapter
        image: "mojaloop/sdk-scheme-adapter:v11.3.0"
        imagePullPolicy: Always
        ports:
          - name: inboundapi
            containerPort: 4000
            protocol: TCP
          - name: outboundapi
            containerPort: 4001
            protocol: TCP
          - name: testapi
            containerPort: 4002
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        volumeMounts:
        - name: jws-public-keys
          mountPath: /jwsVerificationKeys
        - name: jws-private-key
          mountPath: "/jwsSigningKey/"
        - name: tls-secrets
          mountPath: "/secrets/"
        env:
        - name: CACHE_HOST
          value: mojaloop-sim-testfsp1-cache
        - name: BACKEND_ENDPOINT
          value: mojaloop-sim-testfsp1-backend:3000
        - name: DFSP_ID
          value: "testfsp1"
        - name: IN_CA_CERT_PATH
          value: "/secrets/inbound-cacert.pem"
        - name: IN_SERVER_CERT_PATH
          value: "/secrets/inbound-cert.pem"
        - name: IN_SERVER_KEY_PATH
          value: "/secrets/inbound-key.pem"
        - name: OUT_CA_CERT_PATH
          value: "/secrets/outbound-cacert.pem"
        - name: OUT_CLIENT_CERT_PATH
          value: "/secrets/outbound-cert.pem"
        - name: OUT_CLIENT_KEY_PATH
          value: "/secrets/outbound-key.pem"
        - name: JWS_SIGNING_KEY_PATH
          value: "/jwsSigningKey/private.key"
        - name: ALLOW_TRANSFER_WITHOUT_QUOTE
          value: "false"
        - name: ALS_ENDPOINT
          value: "mojaloop-account-lookup-service"
        - name: AUTO_ACCEPT_PARTY
          value: "true"
        - name: AUTO_ACCEPT_QUOTES
          value: "true"
        - name: BULK_QUOTES_ENDPOINT
          value: "mojaloop-bulk-quoting-service"
        - name: BULK_TRANSFERS_ENDPOINT
          value: "mojaloop-bulk-api-adapter-service"
        - name: CACHE_PORT
          value: "6379"
        - name: CHECK_ILP
          value: "true"
        - name: ENABLE_OAUTH_TOKEN_ENDPOINT
          value: "false"
        - name: ENABLE_TEST_FEATURES
          value: "true"
        - name: EXPIRY_SECONDS
          value: "60"
        - name: ILP_SECRET
          value: "Quaixohyaesahju3thivuiChai5cahng"
        - name: INBOUND_LISTEN_PORT
          value: "4000"
        - name: INBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: JWS_SIGN
          value: "true"
        - name: JWS_SIGNING_KEY_PATH
          value: "/jwsSigningKey.key"
        - name: JWS_SIGN_PUT_PARTIES
          value: "true"
        - name: JWS_VERIFICATION_KEYS_DIRECTORY
          value: "/jwsVerificationKeys"
        - name: LOG_INDENT
          value: "0"
        - name: OAUTH_CLIENT_KEY
          value: ""
        - name: OAUTH_CLIENT_SECRET
          value: ""
        - name: OAUTH_REFRESH_SECONDS
          value: "3600"
        - name: OAUTH_TOKEN_ENDPOINT
          value: ""
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_KEY
          value: "test-client-key"
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET
          value: "test-client-secret"
        - name: OAUTH_TOKEN_ENDPOINT_LISTEN_PORT
          value: "6000"
        - name: OUTBOUND_LISTEN_PORT
          value: "4001"
        - name: OUTBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: PEER_ENDPOINT
          value: "mojaloop-switch"
        - name: QUOTES_ENDPOINT
          value: "mojaloop-quoting-service"
        - name: REJECT_EXPIRED_QUOTE_RESPONSES
          value: "false"
        - name: REJECT_EXPIRED_TRANSFER_FULFILS
          value: "false"
        - name: REJECT_TRANSFERS_ON_EXPIRED_QUOTES
          value: "false"
        - name: REQUEST_PROCESSING_TIMEOUT_SECONDS
          value: "30"
        - name: RESERVE_NOTIFICATION
          value: "false"
        - name: RESOURCE_VERSIONS
          value: "transfers=1.0,quotes=1.0"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: TEST_LISTEN_PORT
          value: "4002"
        - name: TEST_MUTUAL_TLS_ENABLED
          value: "false"
        - name: TRANSACTION_REQUESTS_ENDPOINT
          value: "mojaloop-transaction-requests-service"
        - name: TRANSFERS_ENDPOINT
          value: "mojaloop-ml-api-adapter-service"
        - name: USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP
          value: "false"
        - name: VALIDATE_INBOUND_JWS
          value: "false"
        - name: VALIDATE_INBOUND_PUT_PARTIES_JWS
          value: "true"
        - name: WS02_BEARER_TOKEN
          value: "7718fa9b-be13-3fe7-87f0-a12cf1628168"
        - name: WSO2_AUTH_FAILURE_REQUEST_RETRIES
          value: "0"
        resources:
          null
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-sim-testfsp1-backend
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp1-backend
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: mojaloop-sim-testfsp1-backend
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mojaloop-sim-testfsp1-backend
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: "11.1.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-11.1.0
    spec:
      initContainers:
      
      containers:
      - name: backend
        image: "mojaloop/mojaloop-simulator:v11.2.1"
        imagePullPolicy: Always
        ports:
          - name: simapi
            containerPort: 3000 # these are hard-coded in the service
            protocol: TCP
          - name: reportapi
            containerPort: 3002 # these are hard-coded in the service
            protocol: TCP
          - name: testapi
            containerPort: 3003 # these are hard-coded in the service
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        env:
        - name: OUTBOUND_ENDPOINT
          value: "http://mojaloop-sim-testfsp1-scheme-adapter:4001"
        - name: SCHEME_NAME
          value: "mojaloop-sim-testfsp1"
        - name: DFSP_ID
          value: "testfsp1"
        - name: CA_CERT_PATH
          value: "./secrets/cacert.pem"
        - name: FEE_MULTIPLIER
          value: "0.05"
        - name: HTTPS_ENABLED
          value: "false"
        - name: LOG_INDENT
          value: "0"
        - name: MODEL_DATABASE
          value: "./model.sqlite"
        - name: MUTUAL_TLS_ENABLED
          value: "false"
        - name: REPORT_API_LISTEN_PORT
          value: "3002"
        - name: RULES_FILE
          value: "/rules/rules.json"
        - name: SERVER_CERT_PATH
          value: "./secrets/servercert.pem"
        - name: SERVER_KEY_PATH
          value: "./secrets/serverkey.pem"
        - name: SIMULATOR_API_LISTEN_PORT
          value: "3000"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: SQLITE_LOG_FILE
          value: "./log.sqlite"
        - name: TEST_API_LISTEN_PORT
          value: "3003"
        resources:
          null
        volumeMounts:
        - name: mojaloop-sim-rules
          mountPath: /rules/
      volumes:
      - name: mojaloop-sim-rules
        configMap:
          name: mojaloop-sim-testfsp1-rules
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-sim-testfsp1-cache
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp1-cache
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: mojaloop-sim-testfsp1-cache
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mojaloop-sim-testfsp1-cache
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: "11.1.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-11.1.0
    spec:
      initContainers:
      
      containers:
      - name: cache
        image: "redis:5.0.4-alpine"
        imagePullPolicy: Always
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        resources:
            null
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-sim-testfsp2-scheme-adapter
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp2-scheme-adapter
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: mojaloop-sim-testfsp2-scheme-adapter
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mojaloop-sim-testfsp2-scheme-adapter
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: "11.1.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-11.1.0
    spec:
      volumes:
      - name: jws-private-key
        secret:
          secretName: mojaloop-sim-testfsp2-jws-priv-key
      - name: jws-public-keys
        configMap:
          name: mojaloop-sim-jws-public-keys
      - name: tls-secrets
        secret:
          secretName: mojaloop-sim-testfsp2-tls-creds
      initContainers:
      
      containers:
      - name: scheme-adapter
        image: "mojaloop/sdk-scheme-adapter:v11.3.0"
        imagePullPolicy: Always
        ports:
          - name: inboundapi
            containerPort: 4000
            protocol: TCP
          - name: outboundapi
            containerPort: 4001
            protocol: TCP
          - name: testapi
            containerPort: 4002
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        volumeMounts:
        - name: jws-public-keys
          mountPath: /jwsVerificationKeys
        - name: jws-private-key
          mountPath: "/jwsSigningKey/"
        - name: tls-secrets
          mountPath: "/secrets/"
        env:
        - name: CACHE_HOST
          value: mojaloop-sim-testfsp2-cache
        - name: BACKEND_ENDPOINT
          value: mojaloop-sim-testfsp2-backend:3000
        - name: DFSP_ID
          value: "testfsp2"
        - name: IN_CA_CERT_PATH
          value: "/secrets/inbound-cacert.pem"
        - name: IN_SERVER_CERT_PATH
          value: "/secrets/inbound-cert.pem"
        - name: IN_SERVER_KEY_PATH
          value: "/secrets/inbound-key.pem"
        - name: OUT_CA_CERT_PATH
          value: "/secrets/outbound-cacert.pem"
        - name: OUT_CLIENT_CERT_PATH
          value: "/secrets/outbound-cert.pem"
        - name: OUT_CLIENT_KEY_PATH
          value: "/secrets/outbound-key.pem"
        - name: JWS_SIGNING_KEY_PATH
          value: "/jwsSigningKey/private.key"
        - name: ALLOW_TRANSFER_WITHOUT_QUOTE
          value: "false"
        - name: ALS_ENDPOINT
          value: "mojaloop-account-lookup-service"
        - name: AUTO_ACCEPT_PARTY
          value: "true"
        - name: AUTO_ACCEPT_QUOTES
          value: "true"
        - name: BULK_QUOTES_ENDPOINT
          value: "mojaloop-bulk-quoting-service"
        - name: BULK_TRANSFERS_ENDPOINT
          value: "mojaloop-bulk-api-adapter-service"
        - name: CACHE_PORT
          value: "6379"
        - name: CHECK_ILP
          value: "true"
        - name: ENABLE_OAUTH_TOKEN_ENDPOINT
          value: "false"
        - name: ENABLE_TEST_FEATURES
          value: "true"
        - name: EXPIRY_SECONDS
          value: "60"
        - name: ILP_SECRET
          value: "Quaixohyaesahju3thivuiChai5cahng"
        - name: INBOUND_LISTEN_PORT
          value: "4000"
        - name: INBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: JWS_SIGN
          value: "true"
        - name: JWS_SIGNING_KEY_PATH
          value: "/jwsSigningKey.key"
        - name: JWS_SIGN_PUT_PARTIES
          value: "true"
        - name: JWS_VERIFICATION_KEYS_DIRECTORY
          value: "/jwsVerificationKeys"
        - name: LOG_INDENT
          value: "0"
        - name: OAUTH_CLIENT_KEY
          value: ""
        - name: OAUTH_CLIENT_SECRET
          value: ""
        - name: OAUTH_REFRESH_SECONDS
          value: "3600"
        - name: OAUTH_TOKEN_ENDPOINT
          value: ""
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_KEY
          value: "test-client-key"
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET
          value: "test-client-secret"
        - name: OAUTH_TOKEN_ENDPOINT_LISTEN_PORT
          value: "6000"
        - name: OUTBOUND_LISTEN_PORT
          value: "4001"
        - name: OUTBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: PEER_ENDPOINT
          value: "mojaloop-switch"
        - name: QUOTES_ENDPOINT
          value: "mojaloop-quoting-service"
        - name: REJECT_EXPIRED_QUOTE_RESPONSES
          value: "false"
        - name: REJECT_EXPIRED_TRANSFER_FULFILS
          value: "false"
        - name: REJECT_TRANSFERS_ON_EXPIRED_QUOTES
          value: "false"
        - name: REQUEST_PROCESSING_TIMEOUT_SECONDS
          value: "30"
        - name: RESERVE_NOTIFICATION
          value: "false"
        - name: RESOURCE_VERSIONS
          value: "transfers=1.0,quotes=1.0"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: TEST_LISTEN_PORT
          value: "4002"
        - name: TEST_MUTUAL_TLS_ENABLED
          value: "false"
        - name: TRANSACTION_REQUESTS_ENDPOINT
          value: "mojaloop-transaction-requests-service"
        - name: TRANSFERS_ENDPOINT
          value: "mojaloop-ml-api-adapter-service"
        - name: USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP
          value: "false"
        - name: VALIDATE_INBOUND_JWS
          value: "false"
        - name: VALIDATE_INBOUND_PUT_PARTIES_JWS
          value: "true"
        - name: WS02_BEARER_TOKEN
          value: "7718fa9b-be13-3fe7-87f0-a12cf1628168"
        - name: WSO2_AUTH_FAILURE_REQUEST_RETRIES
          value: "0"
        resources:
          null
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-sim-testfsp2-backend
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp2-backend
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: mojaloop-sim-testfsp2-backend
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mojaloop-sim-testfsp2-backend
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: "11.1.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-11.1.0
    spec:
      initContainers:
      
      containers:
      - name: backend
        image: "mojaloop/mojaloop-simulator:v11.2.1"
        imagePullPolicy: Always
        ports:
          - name: simapi
            containerPort: 3000 # these are hard-coded in the service
            protocol: TCP
          - name: reportapi
            containerPort: 3002 # these are hard-coded in the service
            protocol: TCP
          - name: testapi
            containerPort: 3003 # these are hard-coded in the service
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        env:
        - name: OUTBOUND_ENDPOINT
          value: "http://mojaloop-sim-testfsp2-scheme-adapter:4001"
        - name: SCHEME_NAME
          value: "mojaloop-sim-testfsp2"
        - name: DFSP_ID
          value: "testfsp2"
        - name: CA_CERT_PATH
          value: "./secrets/cacert.pem"
        - name: FEE_MULTIPLIER
          value: "0.05"
        - name: HTTPS_ENABLED
          value: "false"
        - name: LOG_INDENT
          value: "0"
        - name: MODEL_DATABASE
          value: "./model.sqlite"
        - name: MUTUAL_TLS_ENABLED
          value: "false"
        - name: REPORT_API_LISTEN_PORT
          value: "3002"
        - name: RULES_FILE
          value: "/rules/rules.json"
        - name: SERVER_CERT_PATH
          value: "./secrets/servercert.pem"
        - name: SERVER_KEY_PATH
          value: "./secrets/serverkey.pem"
        - name: SIMULATOR_API_LISTEN_PORT
          value: "3000"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: SQLITE_LOG_FILE
          value: "./log.sqlite"
        - name: TEST_API_LISTEN_PORT
          value: "3003"
        resources:
          null
        volumeMounts:
        - name: mojaloop-sim-rules
          mountPath: /rules/
      volumes:
      - name: mojaloop-sim-rules
        configMap:
          name: mojaloop-sim-testfsp2-rules
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-sim-testfsp2-cache
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp2-cache
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: mojaloop-sim-testfsp2-cache
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mojaloop-sim-testfsp2-cache
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: "11.1.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-11.1.0
    spec:
      initContainers:
      
      containers:
      - name: cache
        image: "redis:5.0.4-alpine"
        imagePullPolicy: Always
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        resources:
            null
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-sim-testfsp3-scheme-adapter
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp3-scheme-adapter
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: mojaloop-sim-testfsp3-scheme-adapter
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mojaloop-sim-testfsp3-scheme-adapter
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: "11.1.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-11.1.0
    spec:
      volumes:
      - name: jws-private-key
        secret:
          secretName: mojaloop-sim-testfsp3-jws-priv-key
      - name: jws-public-keys
        configMap:
          name: mojaloop-sim-jws-public-keys
      - name: tls-secrets
        secret:
          secretName: mojaloop-sim-testfsp3-tls-creds
      initContainers:
      
      containers:
      - name: scheme-adapter
        image: "mojaloop/sdk-scheme-adapter:v11.3.0"
        imagePullPolicy: Always
        ports:
          - name: inboundapi
            containerPort: 4000
            protocol: TCP
          - name: outboundapi
            containerPort: 4001
            protocol: TCP
          - name: testapi
            containerPort: 4002
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        volumeMounts:
        - name: jws-public-keys
          mountPath: /jwsVerificationKeys
        - name: jws-private-key
          mountPath: "/jwsSigningKey/"
        - name: tls-secrets
          mountPath: "/secrets/"
        env:
        - name: CACHE_HOST
          value: mojaloop-sim-testfsp3-cache
        - name: BACKEND_ENDPOINT
          value: mojaloop-sim-testfsp3-backend:3000
        - name: DFSP_ID
          value: "testfsp3"
        - name: IN_CA_CERT_PATH
          value: "/secrets/inbound-cacert.pem"
        - name: IN_SERVER_CERT_PATH
          value: "/secrets/inbound-cert.pem"
        - name: IN_SERVER_KEY_PATH
          value: "/secrets/inbound-key.pem"
        - name: OUT_CA_CERT_PATH
          value: "/secrets/outbound-cacert.pem"
        - name: OUT_CLIENT_CERT_PATH
          value: "/secrets/outbound-cert.pem"
        - name: OUT_CLIENT_KEY_PATH
          value: "/secrets/outbound-key.pem"
        - name: JWS_SIGNING_KEY_PATH
          value: "/jwsSigningKey/private.key"
        - name: ALLOW_TRANSFER_WITHOUT_QUOTE
          value: "false"
        - name: ALS_ENDPOINT
          value: "mojaloop-account-lookup-service"
        - name: AUTO_ACCEPT_PARTY
          value: "true"
        - name: AUTO_ACCEPT_QUOTES
          value: "true"
        - name: BULK_QUOTES_ENDPOINT
          value: "mojaloop-bulk-quoting-service"
        - name: BULK_TRANSFERS_ENDPOINT
          value: "mojaloop-bulk-api-adapter-service"
        - name: CACHE_PORT
          value: "6379"
        - name: CHECK_ILP
          value: "true"
        - name: ENABLE_OAUTH_TOKEN_ENDPOINT
          value: "false"
        - name: ENABLE_TEST_FEATURES
          value: "true"
        - name: EXPIRY_SECONDS
          value: "60"
        - name: ILP_SECRET
          value: "Quaixohyaesahju3thivuiChai5cahng"
        - name: INBOUND_LISTEN_PORT
          value: "4000"
        - name: INBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: JWS_SIGN
          value: "true"
        - name: JWS_SIGNING_KEY_PATH
          value: "/jwsSigningKey.key"
        - name: JWS_SIGN_PUT_PARTIES
          value: "true"
        - name: JWS_VERIFICATION_KEYS_DIRECTORY
          value: "/jwsVerificationKeys"
        - name: LOG_INDENT
          value: "0"
        - name: OAUTH_CLIENT_KEY
          value: ""
        - name: OAUTH_CLIENT_SECRET
          value: ""
        - name: OAUTH_REFRESH_SECONDS
          value: "3600"
        - name: OAUTH_TOKEN_ENDPOINT
          value: ""
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_KEY
          value: "test-client-key"
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET
          value: "test-client-secret"
        - name: OAUTH_TOKEN_ENDPOINT_LISTEN_PORT
          value: "6000"
        - name: OUTBOUND_LISTEN_PORT
          value: "4001"
        - name: OUTBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: PEER_ENDPOINT
          value: "mojaloop-switch"
        - name: QUOTES_ENDPOINT
          value: "mojaloop-quoting-service"
        - name: REJECT_EXPIRED_QUOTE_RESPONSES
          value: "false"
        - name: REJECT_EXPIRED_TRANSFER_FULFILS
          value: "false"
        - name: REJECT_TRANSFERS_ON_EXPIRED_QUOTES
          value: "false"
        - name: REQUEST_PROCESSING_TIMEOUT_SECONDS
          value: "30"
        - name: RESERVE_NOTIFICATION
          value: "false"
        - name: RESOURCE_VERSIONS
          value: "transfers=1.0,quotes=1.0"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: TEST_LISTEN_PORT
          value: "4002"
        - name: TEST_MUTUAL_TLS_ENABLED
          value: "false"
        - name: TRANSACTION_REQUESTS_ENDPOINT
          value: "mojaloop-transaction-requests-service"
        - name: TRANSFERS_ENDPOINT
          value: "mojaloop-ml-api-adapter-service"
        - name: USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP
          value: "false"
        - name: VALIDATE_INBOUND_JWS
          value: "false"
        - name: VALIDATE_INBOUND_PUT_PARTIES_JWS
          value: "true"
        - name: WS02_BEARER_TOKEN
          value: "7718fa9b-be13-3fe7-87f0-a12cf1628168"
        - name: WSO2_AUTH_FAILURE_REQUEST_RETRIES
          value: "0"
        resources:
          null
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-sim-testfsp3-backend
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp3-backend
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: mojaloop-sim-testfsp3-backend
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mojaloop-sim-testfsp3-backend
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: "11.1.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-11.1.0
    spec:
      initContainers:
      
      containers:
      - name: backend
        image: "mojaloop/mojaloop-simulator:v11.2.1"
        imagePullPolicy: Always
        ports:
          - name: simapi
            containerPort: 3000 # these are hard-coded in the service
            protocol: TCP
          - name: reportapi
            containerPort: 3002 # these are hard-coded in the service
            protocol: TCP
          - name: testapi
            containerPort: 3003 # these are hard-coded in the service
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        env:
        - name: OUTBOUND_ENDPOINT
          value: "http://mojaloop-sim-testfsp3-scheme-adapter:4001"
        - name: SCHEME_NAME
          value: "mojaloop-sim-testfsp3"
        - name: DFSP_ID
          value: "testfsp3"
        - name: CA_CERT_PATH
          value: "./secrets/cacert.pem"
        - name: FEE_MULTIPLIER
          value: "0.05"
        - name: HTTPS_ENABLED
          value: "false"
        - name: LOG_INDENT
          value: "0"
        - name: MODEL_DATABASE
          value: "./model.sqlite"
        - name: MUTUAL_TLS_ENABLED
          value: "false"
        - name: REPORT_API_LISTEN_PORT
          value: "3002"
        - name: RULES_FILE
          value: "/rules/rules.json"
        - name: SERVER_CERT_PATH
          value: "./secrets/servercert.pem"
        - name: SERVER_KEY_PATH
          value: "./secrets/serverkey.pem"
        - name: SIMULATOR_API_LISTEN_PORT
          value: "3000"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: SQLITE_LOG_FILE
          value: "./log.sqlite"
        - name: TEST_API_LISTEN_PORT
          value: "3003"
        resources:
          null
        volumeMounts:
        - name: mojaloop-sim-rules
          mountPath: /rules/
      volumes:
      - name: mojaloop-sim-rules
        configMap:
          name: mojaloop-sim-testfsp3-rules
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-sim-testfsp3-cache
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp3-cache
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: mojaloop-sim-testfsp3-cache
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mojaloop-sim-testfsp3-cache
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: "11.1.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-11.1.0
    spec:
      initContainers:
      
      containers:
      - name: cache
        image: "redis:5.0.4-alpine"
        imagePullPolicy: Always
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        resources:
            null
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-sim-testfsp4-scheme-adapter
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp4-scheme-adapter
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: mojaloop-sim-testfsp4-scheme-adapter
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mojaloop-sim-testfsp4-scheme-adapter
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: "11.1.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-11.1.0
    spec:
      volumes:
      - name: jws-private-key
        secret:
          secretName: mojaloop-sim-testfsp4-jws-priv-key
      - name: jws-public-keys
        configMap:
          name: mojaloop-sim-jws-public-keys
      - name: tls-secrets
        secret:
          secretName: mojaloop-sim-testfsp4-tls-creds
      initContainers:
      
      containers:
      - name: scheme-adapter
        image: "mojaloop/sdk-scheme-adapter:v11.3.0"
        imagePullPolicy: Always
        ports:
          - name: inboundapi
            containerPort: 4000
            protocol: TCP
          - name: outboundapi
            containerPort: 4001
            protocol: TCP
          - name: testapi
            containerPort: 4002
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
        volumeMounts:
        - name: jws-public-keys
          mountPath: /jwsVerificationKeys
        - name: jws-private-key
          mountPath: "/jwsSigningKey/"
        - name: tls-secrets
          mountPath: "/secrets/"
        env:
        - name: CACHE_HOST
          value: mojaloop-sim-testfsp4-cache
        - name: BACKEND_ENDPOINT
          value: mojaloop-sim-testfsp4-backend:3000
        - name: DFSP_ID
          value: "testfsp4"
        - name: IN_CA_CERT_PATH
          value: "/secrets/inbound-cacert.pem"
        - name: IN_SERVER_CERT_PATH
          value: "/secrets/inbound-cert.pem"
        - name: IN_SERVER_KEY_PATH
          value: "/secrets/inbound-key.pem"
        - name: OUT_CA_CERT_PATH
          value: "/secrets/outbound-cacert.pem"
        - name: OUT_CLIENT_CERT_PATH
          value: "/secrets/outbound-cert.pem"
        - name: OUT_CLIENT_KEY_PATH
          value: "/secrets/outbound-key.pem"
        - name: JWS_SIGNING_KEY_PATH
          value: "/jwsSigningKey/private.key"
        - name: ALLOW_TRANSFER_WITHOUT_QUOTE
          value: "false"
        - name: ALS_ENDPOINT
          value: "mojaloop-account-lookup-service"
        - name: AUTO_ACCEPT_PARTY
          value: "true"
        - name: AUTO_ACCEPT_QUOTES
          value: "true"
        - name: BULK_QUOTES_ENDPOINT
          value: "mojaloop-bulk-quoting-service"
        - name: BULK_TRANSFERS_ENDPOINT
          value: "mojaloop-bulk-api-adapter-service"
        - name: CACHE_PORT
          value: "6379"
        - name: CHECK_ILP
          value: "true"
        - name: ENABLE_OAUTH_TOKEN_ENDPOINT
          value: "false"
        - name: ENABLE_TEST_FEATURES
          value: "true"
        - name: EXPIRY_SECONDS
          value: "60"
        - name: ILP_SECRET
          value: "Quaixohyaesahju3thivuiChai5cahng"
        - name: INBOUND_LISTEN_PORT
          value: "4000"
        - name: INBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: JWS_SIGN
          value: "true"
        - name: JWS_SIGNING_KEY_PATH
          value: "/jwsSigningKey.key"
        - name: JWS_SIGN_PUT_PARTIES
          value: "true"
        - name: JWS_VERIFICATION_KEYS_DIRECTORY
          value: "/jwsVerificationKeys"
        - name: LOG_INDENT
          value: "0"
        - name: OAUTH_CLIENT_KEY
          value: ""
        - name: OAUTH_CLIENT_SECRET
          value: ""
        - name: OAUTH_REFRESH_SECONDS
          value: "3600"
        - name: OAUTH_TOKEN_ENDPOINT
          value: ""
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_KEY
          value: "test-client-key"
        - name: OAUTH_TOKEN_ENDPOINT_CLIENT_SECRET
          value: "test-client-secret"
        - name: OAUTH_TOKEN_ENDPOINT_LISTEN_PORT
          value: "6000"
        - name: OUTBOUND_LISTEN_PORT
          value: "4001"
        - name: OUTBOUND_MUTUAL_TLS_ENABLED
          value: "false"
        - name: PEER_ENDPOINT
          value: "mojaloop-switch"
        - name: QUOTES_ENDPOINT
          value: "mojaloop-quoting-service"
        - name: REJECT_EXPIRED_QUOTE_RESPONSES
          value: "false"
        - name: REJECT_EXPIRED_TRANSFER_FULFILS
          value: "false"
        - name: REJECT_TRANSFERS_ON_EXPIRED_QUOTES
          value: "false"
        - name: REQUEST_PROCESSING_TIMEOUT_SECONDS
          value: "30"
        - name: RESERVE_NOTIFICATION
          value: "false"
        - name: RESOURCE_VERSIONS
          value: "transfers=1.0,quotes=1.0"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: TEST_LISTEN_PORT
          value: "4002"
        - name: TEST_MUTUAL_TLS_ENABLED
          value: "false"
        - name: TRANSACTION_REQUESTS_ENDPOINT
          value: "mojaloop-transaction-requests-service"
        - name: TRANSFERS_ENDPOINT
          value: "mojaloop-ml-api-adapter-service"
        - name: USE_QUOTE_SOURCE_FSP_AS_TRANSFER_PAYEE_FSP
          value: "false"
        - name: VALIDATE_INBOUND_JWS
          value: "false"
        - name: VALIDATE_INBOUND_PUT_PARTIES_JWS
          value: "true"
        - name: WS02_BEARER_TOKEN
          value: "7718fa9b-be13-3fe7-87f0-a12cf1628168"
        - name: WSO2_AUTH_FAILURE_REQUEST_RETRIES
          value: "0"
        resources:
          null
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-sim-testfsp4-backend
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp4-backend
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: mojaloop-sim-testfsp4-backend
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mojaloop-sim-testfsp4-backend
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: "11.1.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-11.1.0
    spec:
      initContainers:
      
      containers:
      - name: backend
        image: "mojaloop/mojaloop-simulator:v11.2.1"
        imagePullPolicy: Always
        ports:
          - name: simapi
            containerPort: 3000 # these are hard-coded in the service
            protocol: TCP
          - name: reportapi
            containerPort: 3002 # these are hard-coded in the service
            protocol: TCP
          - name: testapi
            containerPort: 3003 # these are hard-coded in the service
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        env:
        - name: OUTBOUND_ENDPOINT
          value: "http://mojaloop-sim-testfsp4-scheme-adapter:4001"
        - name: SCHEME_NAME
          value: "mojaloop-sim-testfsp4"
        - name: DFSP_ID
          value: "testfsp4"
        - name: CA_CERT_PATH
          value: "./secrets/cacert.pem"
        - name: FEE_MULTIPLIER
          value: "0.05"
        - name: HTTPS_ENABLED
          value: "false"
        - name: LOG_INDENT
          value: "0"
        - name: MODEL_DATABASE
          value: "./model.sqlite"
        - name: MUTUAL_TLS_ENABLED
          value: "false"
        - name: REPORT_API_LISTEN_PORT
          value: "3002"
        - name: RULES_FILE
          value: "/rules/rules.json"
        - name: SERVER_CERT_PATH
          value: "./secrets/servercert.pem"
        - name: SERVER_KEY_PATH
          value: "./secrets/serverkey.pem"
        - name: SIMULATOR_API_LISTEN_PORT
          value: "3000"
        - name: SIM_BACKEND_SERVICE_NAME
          value: "sim-payeefsp-backend"
        - name: SIM_CACHE_SERVICE_NAME
          value: "sim-payeefsp-cache"
        - name: SIM_NAME
          value: "payeefsp"
        - name: SIM_SCHEME_ADAPTER_SERVICE_NAME
          value: "sim-payeefsp-scheme-adapter"
        - name: SQLITE_LOG_FILE
          value: "./log.sqlite"
        - name: TEST_API_LISTEN_PORT
          value: "3003"
        resources:
          null
        volumeMounts:
        - name: mojaloop-sim-rules
          mountPath: /rules/
      volumes:
      - name: mojaloop-sim-rules
        configMap:
          name: mojaloop-sim-testfsp4-rules
      imagePullSecrets:
        - name: dock-casa-secret
---
# Source: mojaloop/charts/mojaloop-simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-sim-testfsp4-cache
  labels:
    app.kubernetes.io/name: mojaloop-sim-testfsp4-cache
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: mojaloop-sim-testfsp4-cache
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mojaloop-sim-testfsp4-cache
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: "11.1.0"
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: mojaloop-simulator-11.1.0
    spec:
      initContainers:
      
      containers:
      - name: cache
        image: "redis:5.0.4-alpine"
        imagePullPolicy: Always
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli ping 5
        resources:
            null
---
# Source: mojaloop/charts/quoting-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-quoting-service
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.4
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-11.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: quoting-service
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: quoting-service
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: 11.1.4
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: quoting-service-11.0.0
    spec:
      initContainers:
        - name: wait-for-mysql
          image: mysql:latest
          imagePullPolicy: Always
          command:
            - sh
            - "-c"
            - "until result=$(mysql -h mojaloop-centralledger-mysql -P 3306 -u central_ledger --password=oyMxgZChuu  central_ledger -ss -N -e 'select is_locked from migration_lock;') && eval 'echo is_locked=$result' && if [ -z $result ]; then false; fi && if [ $result -ne 0 ]; then false; fi; do echo waiting for MySQL; sleep 2; done;"
      containers:
        - name: quoting-service
          image: "mojaloop/quoting-service:v11.1.4"
          imagePullPolicy: Always
          ports:
            - name: http-api
              containerPort: 3002
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: 
            - name: CSL_LOG_TRANSPORT
              value: "file"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "false"
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojaloop"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "true"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: "log,trace"
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: LIB_RESOURCE_VERSIONS
              value: transfers=1.0,participants=1.0,quotes=1.0

          volumeMounts:
          - name: mojaloop-quoting-service-config-volume
            mountPath: /opt/quoting-service/config
          - name: jws-signing-key
            mountPath: /opt/quoting-service/secrets
        - name: quoting-service-sidecar
          image: "mojaloop/event-sidecar:v9.5.1"
          imagePullPolicy: Always
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop-quoting-service-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: info
      volumes:
        - name: jws-signing-key
          secret:
            secretName: mojaloop-quoting-service-jws-signing-key
        - name: mojaloop-quoting-service-config-volume
          configMap:
            name: mojaloop-quoting-service-config
            items:
            - key: default.json
              path: default.json
#            - key: knexfile.js
#              path: knexfile.js
            - key: rules.json
              path: rules.json
        - name: mojaloop-quoting-service-sidecar-volume
          configMap:
            name: mojaloop-quoting-service-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/simulator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-simulator
  labels:
    app.kubernetes.io/name: simulator
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: simulator-11.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: simulator
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: simulator
        app.kubernetes.io/instance: mojaloop
      annotations:
        checksum/config: 9c09661cd5558e925d1529dcb580f6fe1afa13ddbf63cd1c9000eab6b426dd7c
        prometheus.io/port: "8444"
        prometheus.io/scrape: "true"
    spec:
      containers:
        - name: simulator
          image: "mojaloop/simulator:v11.0.2"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8444
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: 8444
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 8444
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: mojaloop-simulator-config
                  key: LOG_LEVEL
            - name: PARTIES_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: mojaloop-simulator-config
                  key: PARTIES_ENDPOINT
            - name: QUOTES_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: mojaloop-simulator-config
                  key: QUOTES_ENDPOINT
            - name: TRANSFERS_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: mojaloop-simulator-config
                  key: TRANSFERS_ENDPOINT
            - name: BULK_TRANSFERS_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: mojaloop-simulator-config
                  key: BULK_TRANSFERS_ENDPOINT
            - name: TRANSACTION_REQUESTS_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: mojaloop-simulator-config
                  key: TRANSACTION_REQUESTS_ENDPOINT
            - name: TRANSFERS_FULFIL_RESPONSE_DISABLED
              valueFrom:
                configMapKeyRef:
                  name: mojaloop-simulator-config
                  key: TRANSFERS_FULFIL_RESPONSE_DISABLED
            - name: TRANSFERS_FULFILMENT
              valueFrom:
                configMapKeyRef:
                  name: mojaloop-simulator-config
                  key: TRANSFERS_FULFILMENT
            - name: TRANSFERS_CONDITION
              valueFrom:
                configMapKeyRef:
                  name: mojaloop-simulator-config
                  key: TRANSFERS_CONDITION
            - name: TRANSFERS_ILPPACKET
              valueFrom:
                configMapKeyRef:
                  name: mojaloop-simulator-config
                  key: TRANSFERS_ILPPACKET
            - name: MOCK_JWS_SIGNATURE
              valueFrom:
                configMapKeyRef:
                  name: mojaloop-simulator-config
                  key: MOCK_JWS_SIGNATURE
            - name: METRICS_DISABLED
              valueFrom:
                configMapKeyRef:
                  name: mojaloop-simulator-config
                  key: METRICS_DISABLED
            - name: METRICS_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: mojaloop-simulator-config
                  key: METRICS_PREFIX
            - name: METRICS_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: mojaloop-simulator-config
                  key: METRICS_TIMEOUT
            - name: METRICS_SERVICENAME
              valueFrom:
                configMapKeyRef:
                  name: mojaloop-simulator-config
                  key: METRICS_SERVICENAME
            - name: EVENT_SDK_VENDOR_PREFIX
              value: "mojasim"
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: "false"
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: log,trace
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: "false"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:warn, log:error"
---
# Source: mojaloop/charts/transaction-requests-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mojaloop-transaction-requests-service
  labels:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: transaction-requests-service-11.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: transaction-requests-service
      app.kubernetes.io/instance: mojaloop
  template:
    metadata:
      labels:
        app.kubernetes.io/name: transaction-requests-service
        app.kubernetes.io/instance: mojaloop
        app.kubernetes.io/version: 11.1.2
        app.kubernetes.io/managed-by: Helm
        helm.sh/chart: transaction-requests-service-11.0.0
    spec:
      initContainers: []
      containers:
        - name: transaction-requests-service
          image: "mojaloop/transaction-requests-service:v11.1.2"
          imagePullPolicy: Always
          command: ["node", "src/index.js", "api"]
          ports:
            - name: http-api
              containerPort: 4000
          readinessProbe:
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 60
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 60
            periodSeconds: 15
          env:
            - name: LOG_LEVEL
              value: info
            - name: CSL_LOG_TRANSPORT
              value: file
            - name: EVENT_SDK_LOG_FILTER
              value: 
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: 
            - name: EVENT_SDK_SIDECAR_DISABLED
              value: "false"
            - name: EVENT_SDK_SERVER_HOST
              value: "localhost"
            - name: EVENT_SDK_SERVER_PORT
              value: "50051"
            - name: EVENT_SDK_VENDOR_PREFIX
              value: 
            - name: EVENT_SDK_TRACESTATE_HEADER_ENABLED
              value: 
            - name: EVENT_SDK_ASYNC_OVERRIDE_EVENTS
              value: 
            - name: EVENT_SDK_TRACEID_PER_VENDOR
              value: 
          volumeMounts:
            - name: mojaloop-transaction-requests-service-config-volume
              mountPath: /opt/transaction-requests-service/config
        - name: transaction-requests-service-sidecar
          image: "mojaloop/event-sidecar:v9.5.1"
          imagePullPolicy: Always
          command: ["npm", "run", "start"]
          ports:
            - containerPort: 4001
          readinessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 120
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 4001
            initialDelaySeconds: 90
            periodSeconds: 15
          volumeMounts:
            - name: mojaloop-transaction-requests-service-sidecar-volume
              mountPath: /opt/event-sidecar/config
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_FILTER
              value: "error, warn, info"
            - name: EVENT_SDK_LOG_FILTER
              value: "audit:*, log:info, log:warn, log:error"
            - name: EVENT_SDK_LOG_METADATA_ONLY
              value: "true"
      volumes:
        - name: mojaloop-transaction-requests-service-config-volume
          configMap:
            name: mojaloop-transaction-requests-service-config
            items:
              - key: default.json
                path: default.json
        - name: mojaloop-transaction-requests-service-sidecar-volume
          configMap:
            name: mojaloop-transaction-requests-service-sidecar
            items:
            - key: default.json
              path: default.json
---
# Source: mojaloop/charts/account-lookup-service/charts/mysql/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mojaloop-account-lookup-mysql
  labels:
    app: mojaloop-account-lookup-mysql
    release: "mojaloop"
    heritage: "Helm"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mojaloop-account-lookup-mysql
      release: "mojaloop"
  serviceName: mojaloop-account-lookup-mysql
  template:
    metadata:
      labels:
        app: mojaloop-account-lookup-mysql
        chart: "mysql-1.0.4"
        release: "mojaloop"
        heritage: "Helm"
    spec:
      initContainers:
      - name: "remove-lost-found"
        image: "busybox:1.25.0"
        imagePullPolicy: IfNotPresent
        command:
        - "rm"
        - "-fr"
        - "/var/lib/mysql/lost+found"
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
      containers:
      - name: database
        image: "percona/percona-xtradb-cluster:5.7.19"
        imagePullPolicy: "Always"
        command:
        - "/bin/bash"
        - "/startup-scripts/entrypoint.sh"
        resources:
          null
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mojaloop-account-lookup-mysql
              key: mysql-root-password
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mojaloop-account-lookup-mysql
              key: mysql-password
        - name: XTRABACKUP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mojaloop-account-lookup-mysql
              key: xtrabackup-password
        - name: MYSQL_USER
          value: "account_lookup"
        - name: MYSQL_DATABASE
          value: "account_lookup"
        - name: ALLOW_ROOT_FROM
          value: "%"
        - name: CLUSTER_NAME
          value: mojaloop-account-lookup-mysql
        - name: SHORT_CLUSTER_NAME
          value: mojaloop-account-lookup-mysql
        - name: K8S_SERVICE_NAME
          value: mojaloop-account-lookup-mysql-repl
        - name: PXC_STRICT_MODE
          value: "ENFORCING"
        - name: DEBUG
          value: "true"
        ports:
        - name: mysql
          containerPort: 3306
        - name: galera-repl
          containerPort: 4567
        - name: state-transfer
          containerPort: 4568
        - name: state-snapshot
          containerPort: 4444
        livenessProbe:
          exec:
            command:
              - "/bin/bash"
              - "-c"
              - "mysqladmin ping || test -e /var/lib/mysql/sst_in_progress"
          initialDelaySeconds: 30
          timeoutSeconds: 2
        readinessProbe:
          exec:
            command: ["mysql", "-h", "127.0.0.1", "-e", "SELECT 1"]
          initialDelaySeconds: 30
          timeoutSeconds: 2
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        - name: mysql-startup-scripts
          mountPath: /startup-scripts
        - name: mysql-config-files
          mountPath: /etc/mysql/conf.d
        - name: slash-root
          mountPath: /root
        - name: var-log
          mountPath: /var/log
      
      - name: "logs"
        image: "busybox:1.25.0"
        imagePullPolicy: IfNotPresent
        command:
        - "tail"
        - "-f"
        - "/var/log/mysqld.log"
        volumeMounts:
        - name: var-log
          mountPath: /var/log
      
      
      - name: metrics
        image: prom/mysqld-exporter:v0.11.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: metrics
          containerPort: 9104
        volumeMounts:
        - name: slash-root
          mountPath: /root
        livenessProbe:
          exec:
            command: ["wget","-q","-O","-","localhost:9104"]
          initialDelaySeconds: 30
          timeoutSeconds: 2
        readinessProbe:
          exec:
            command: ["wget","-q","-O","-","localhost:9104"]
          initialDelaySeconds: 30
          timeoutSeconds: 2
      
      volumes:
      - name: slash-root
        emptyDir: {}
      - name: var-log
        emptyDir: {}
      - name: mysql-config-files
        configMap:
          name: mojaloop-account-lookup-mysql-config-files
      - name: mysql-startup-scripts
        configMap:
          name: mojaloop-account-lookup-mysql-startup-scripts
      - name: mysql-data
        emptyDir: {}
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/charts/zookeeper/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mojaloop-zookeeper
  labels:
    app: zookeeper
    chart: zookeeper-2.1.0
    release: mojaloop
    heritage: Helm
    component: server
spec:
  serviceName: mojaloop-zookeeper-headless
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
      release: mojaloop
      component: server
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: zookeeper
        release: mojaloop
        component: server
    spec:
      terminationGracePeriodSeconds: 1800
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:

        - name: zookeeper
          image: "zookeeper:3.5.5"
          imagePullPolicy: IfNotPresent
          command: 
             - "/bin/bash"
             - "-xec"
             - "/config-scripts/run"
          ports:
            - name: client
              containerPort: 2181
              protocol: TCP
            - name: election
              containerPort: 3888
              protocol: TCP
            - name: server
              containerPort: 2888
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - sh
                - /config-scripts/ok
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 2
            successThreshold: 1
          readinessProbe:
            exec:
              command:
                - sh
                - /config-scripts/ready
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 2
            successThreshold: 1
          env:
            - name: ZK_REPLICAS
              value: "1"
            - name: JMXAUTH
              value: "false"
            - name: JMXDISABLE
              value: "false"
            - name: JMXPORT
              value: "1099"
            - name: JMXSSL
              value: "false"
            - name: ZK_HEAP_SIZE
              value: "1G"
            - name: ZK_SYNC_LIMIT
              value: "10"
            - name: ZK_TICK_TIME
              value: "2000"
            - name: ZOO_AUTOPURGE_PURGEINTERVAL
              value: "0"
            - name: ZOO_AUTOPURGE_SNAPRETAINCOUNT
              value: "3"
            - name: ZOO_INIT_LIMIT
              value: "5"
            - name: ZOO_MAX_CLIENT_CNXNS
              value: "60"
            - name: ZOO_PORT
              value: "2181"
            - name: ZOO_STANDALONE_ENABLED
              value: "false"
            - name: ZOO_TICK_TIME
              value: "2000"
          resources:
            {}
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /config-scripts
      volumes:
        - name: config
          configMap:
            name: mojaloop-zookeeper
            defaultMode: 0555
        - name: data
          emptyDir: {}
---
# Source: mojaloop/charts/central/charts/centralledger/charts/kafka/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mojaloop-kafka
  labels:
    helm.sh/chart: kafka-0.21.2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: kafka-broker
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: mojaloop
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: kafka-broker
      app.kubernetes.io/name: kafka
      app.kubernetes.io/instance: mojaloop
  serviceName: mojaloop-kafka-headless
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: OnDelete
  replicas: 1
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5556"
      labels:
        helm.sh/chart: kafka-0.21.2
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: kafka-broker
        app.kubernetes.io/name: kafka
        app.kubernetes.io/instance: mojaloop
    spec:
      containers:
      - name: metrics
        image: "solsson/kafka-prometheus-jmx-exporter@sha256:a23062396cd5af1acdf76512632c20ea6be76885dfc20cd9ff40fb23846557e8"
        command:
        - sh
        - -exc
        - |
          trap "exit 0" TERM; \
          while :; do \
          java \
          -XX:+UnlockExperimentalVMOptions \
          -XX:+UseCGroupMemoryLimitForHeap \
          -XX:MaxRAMFraction=1 \
          -XshowSettings:vm \
          -jar \
          jmx_prometheus_httpserver.jar \
          "5556" \
          /etc/jmx-kafka/jmx-kafka-prometheus.yml & \
          wait $! || sleep 3; \
          done
        ports:
        - containerPort: 5556
          name: prometheus
        resources:
          {}
        volumeMounts:
        - name: jmx-config
          mountPath: /etc/jmx-kafka
      - name: kafka-broker
        image: "confluentinc/cp-kafka:5.0.1"
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          exec:
            command:
              - sh
              - -ec
              - /usr/bin/jps | /bin/grep -q SupportedKafka
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: kafka
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        ports:
        - containerPort: 9092
          name: kafka
        - containerPort: 5555
          name: jmx
        resources:
          {}
        env:
        - name: JMX_PORT
          value: "5555"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KAFKA_HEAP_OPTS
          value: -Xmx1G -Xms1G
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "mojaloop-zookeeper:2181"
        - name: KAFKA_LOG_DIRS
          value: "/opt/kafka/data/logs"
        - name: "KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE"
          value: "false"
        - name: "KAFKA_DEFAULT_REPLICATION_FACTOR"
          value: "1"
        - name: "KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR"
          value: "1"
        - name: KAFKA_JMX_PORT
          value: "5555"
        # This is required because the Downward API does not yet support identification of
        # pod numbering in statefulsets. Thus, we are required to specify a command which
        # allows us to extract the pod ID for usage as the Kafka Broker ID.
        # See: https://github.com/kubernetes/kubernetes/issues/31218
        command:
        - sh
        - -exc
        - |
          unset KAFKA_PORT && \
          export KAFKA_BROKER_ID=${POD_NAME##*-} && \
          export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${POD_IP}:9092 && \
          exec /etc/confluent/docker/run
        volumeMounts:
        - name: datadir
          mountPath: "/opt/kafka/data"
      volumes:
      - name: datadir
        emptyDir: {}
      - name: jmx-config
        configMap:
          name: mojaloop-kafka-metrics
      terminationGracePeriodSeconds: 60
---
# Source: mojaloop/charts/central/charts/centralledger/charts/mysql/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mojaloop-centralledger-mysql
  labels:
    app: mojaloop-centralledger-mysql
    release: "mojaloop"
    heritage: "Helm"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mojaloop-centralledger-mysql
      release: "mojaloop"
  serviceName: mojaloop-centralledger-mysql
  template:
    metadata:
      labels:
        app: mojaloop-centralledger-mysql
        chart: "mysql-1.0.4"
        release: "mojaloop"
        heritage: "Helm"
    spec:
      initContainers:
      - name: "remove-lost-found"
        image: "busybox:1.25.0"
        imagePullPolicy: IfNotPresent
        command:
        - "rm"
        - "-fr"
        - "/var/lib/mysql/lost+found"
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
      containers:
      - name: database
        image: "percona/percona-xtradb-cluster:5.7.19"
        imagePullPolicy: "Always"
        command:
        - "/bin/bash"
        - "/startup-scripts/entrypoint.sh"
        resources:
          null
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mojaloop-centralledger-mysql
              key: mysql-root-password
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mojaloop-centralledger-mysql
              key: mysql-password
        - name: XTRABACKUP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mojaloop-centralledger-mysql
              key: xtrabackup-password
        - name: MYSQL_USER
          value: "central_ledger"
        - name: MYSQL_DATABASE
          value: "central_ledger"
        - name: ALLOW_ROOT_FROM
          value: "%"
        - name: CLUSTER_NAME
          value: mojaloop-centralledger-mysql
        - name: SHORT_CLUSTER_NAME
          value: mojaloop-centralledger-mysql
        - name: K8S_SERVICE_NAME
          value: mojaloop-centralledger-mysql-repl
        - name: PXC_STRICT_MODE
          value: "ENFORCING"
        - name: DEBUG
          value: "true"
        ports:
        - name: mysql
          containerPort: 3306
        - name: galera-repl
          containerPort: 4567
        - name: state-transfer
          containerPort: 4568
        - name: state-snapshot
          containerPort: 4444
        livenessProbe:
          exec:
            command:
              - "/bin/bash"
              - "-c"
              - "mysqladmin ping || test -e /var/lib/mysql/sst_in_progress"
          initialDelaySeconds: 30
          timeoutSeconds: 2
        readinessProbe:
          exec:
            command: ["mysql", "-h", "127.0.0.1", "-e", "SELECT 1"]
          initialDelaySeconds: 30
          timeoutSeconds: 2
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        - name: mysql-startup-scripts
          mountPath: /startup-scripts
        - name: mysql-config-files
          mountPath: /etc/mysql/conf.d
        - name: slash-root
          mountPath: /root
        - name: var-log
          mountPath: /var/log
      
      - name: "logs"
        image: "busybox:1.25.0"
        imagePullPolicy: IfNotPresent
        command:
        - "tail"
        - "-f"
        - "/var/log/mysqld.log"
        volumeMounts:
        - name: var-log
          mountPath: /var/log
      
      
      - name: metrics
        image: prom/mysqld-exporter:v0.11.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: metrics
          containerPort: 9104
        volumeMounts:
        - name: slash-root
          mountPath: /root
        livenessProbe:
          exec:
            command: ["wget","-q","-O","-","localhost:9104"]
          initialDelaySeconds: 30
          timeoutSeconds: 2
        readinessProbe:
          exec:
            command: ["wget","-q","-O","-","localhost:9104"]
          initialDelaySeconds: 30
          timeoutSeconds: 2
      
      volumes:
      - name: slash-root
        emptyDir: {}
      - name: var-log
        emptyDir: {}
      - name: mysql-config-files
        configMap:
          name: mojaloop-centralledger-mysql-config-files
      - name: mysql-startup-scripts
        configMap:
          name: mojaloop-centralledger-mysql-startup-scripts
      - name: mysql-data
        emptyDir: {}
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service-admin/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop-account-lookup-service-admin
  labels:
    app.kubernetes.io/name: account-lookup-service-admin
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-admin-11.0.0
spec:
  rules:
    - host: "account-lookup-service-admin.local"
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop-account-lookup-service-admin
              servicePort: http-admin
---
# Source: mojaloop/charts/account-lookup-service/charts/account-lookup-service/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop-account-lookup-service
  labels:
    app.kubernetes.io/name: account-lookup-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: account-lookup-service-11.0.0
spec:
  rules:
    - host: "account-lookup-service.local"
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop-account-lookup-service
              servicePort: http-api
---
# Source: mojaloop/charts/central/charts/centraleventprocessor/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop-centraleventprocessor
  labels:
    app.kubernetes.io/name: centraleventprocessor
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 10.5.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centraleventprocessor-11.0.0
spec:
  rules:
    - host: "central-event-processor.local"
      http:
        paths:
          - path: 
            backend:
              serviceName: mojaloop-centraleventprocessor
              servicePort: http
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-admin-transfer/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop-centralledger-handler-admin-transfer
  labels:
    app.kubernetes.io/name: centralledger-handler-admin-transfer
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-admin-transfer-11.0.0
  annotations:
      nginx.ingress.kubernetes.io/rewrite-target: "/"
spec:
  rules:
    - host: central-ledger-admin-transfer.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop-centralledger-handler-admin-transfer
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-timeout/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop-centralledger-handler-timeout
  labels:
    app.kubernetes.io/name: centralledger-handler-timeout
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-timeout-11.0.0
  annotations:
      nginx.ingress.kubernetes.io/rewrite-target: "/"
spec:
  rules:
    - host: central-ledger-timeout.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop-centralledger-handler-timeout
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-fulfil/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop-centralledger-handler-transfer-fulfil
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-fulfil
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-fulfil-11.0.0
  annotations:
      nginx.ingress.kubernetes.io/rewrite-target: "/"
spec:
  rules:
    - host: central-ledger-transfer-fulfil.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop-centralledger-handler-transfer-fulfil
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-get/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop-centralledger-handler-transfer-get
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-get
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-get-11.0.0
  annotations:
      nginx.ingress.kubernetes.io/rewrite-target: "/"
spec:
  rules:
    - host: central-ledger-transfer-get.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop-centralledger-handler-transfer-get
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-position/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop-centralledger-handler-transfer-position
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-position
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-position-11.0.0
  annotations:
      nginx.ingress.kubernetes.io/rewrite-target: "/"
spec:
  rules:
    - host: central-ledger-transfer-position.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop-centralledger-handler-transfer-position
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-handler-transfer-prepare/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop-centralledger-handler-transfer-prepare
  labels:
    app.kubernetes.io/name: centralledger-handler-transfer-prepare
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-handler-transfer-prepare-11.0.0
  annotations:
      nginx.ingress.kubernetes.io/rewrite-target: "/"
spec:
  rules:
    - host: central-ledger-transfer-prepare.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop-centralledger-handler-transfer-prepare
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralledger/charts/centralledger-service/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop-centralledger-service
  labels:
    app.kubernetes.io/name: centralledger-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.2.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralledger-service-11.0.0
  annotations:
      nginx.ingress.kubernetes.io/rewrite-target: "/"
spec:
  rules:
    - host: central-ledger.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop-centralledger-service
              servicePort: 80
---
# Source: mojaloop/charts/central/charts/centralsettlement/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop-centralsettlement
  labels:
    app.kubernetes.io/name: centralsettlement
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 10.5.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: centralsettlement-11.0.0
  annotations:
      nginx.ingress.kubernetes.io/rewrite-target: "/"
spec:
  rules:
    - host: central-settlement.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop-centralsettlement
              servicePort: 80
---
# Source: mojaloop/charts/finance-portal-settlement-management/templates/operator-settlement-ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop-finance-portal-settlement-management-operator-settlement
  labels:
    app.kubernetes.io/name: finance-portal-settlement-management
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 9.2.1
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-settlement-management-11.0.0
  annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/rewrite-target: "/"
spec:
  rules:
    - host: operator-settlement.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop-finance-portal-settlement-management
              servicePort: 80
---
# Source: mojaloop/charts/finance-portal/templates/backend-ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop-finance-portal-backend
  labels:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 10.4.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-11.0.0
  annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/rewrite-target: "/"
spec:
  rules:
    - host: finance-portal.local
      http:
        paths:
          - path: /admin-portal-backend/(.*)
            backend:
              serviceName: mojaloop-finance-portal
              servicePort: 3000
---
# Source: mojaloop/charts/finance-portal/templates/frontend-ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop-finance-portal-frontend
  labels:
    app.kubernetes.io/name: finance-portal
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 10.4.0
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: finance-portal-11.0.0
  annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/rewrite-target: "/"
spec:
  rules:
    - host: finance-portal.local
      http:
        paths:
          - path: /(.*)
            backend:
              serviceName: mojaloop-finance-portal
              servicePort: 80
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-handler-notification/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop-ml-api-adapter-handler-notification
  labels:
    app.kubernetes.io/name: ml-api-adapter-handler-notification
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-handler-notification-11.0.0
  annotations:
      nginx.ingress.kubernetes.io/rewrite-target: "/"
spec:
  rules:
    - host: ml-api-adapter-notification.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop-ml-api-adapter-handler-notification
              servicePort: 80
---
# Source: mojaloop/charts/ml-api-adapter/charts/ml-api-adapter-service/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop-ml-api-adapter-service
  labels:
    app.kubernetes.io/name: ml-api-adapter-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.0.3
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: ml-api-adapter-service-11.0.0
  annotations:
      nginx.ingress.kubernetes.io/rewrite-target: "/"
spec:
  rules:
    - host: ml-api-adapter.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop-ml-api-adapter-service
              servicePort: 80
---
# Source: mojaloop/charts/mojaloop-simulator/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop-sim-simulators
  labels:
    app.kubernetes.io/name: simulators
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: "11.1.0"
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: mojaloop-simulator-11.1.0
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
      - host: sim-payeefsp.local
        http:
          paths:
          - path: /sim/payeefsp/outbound(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-payeefsp-scheme-adapter
              servicePort: outboundapi
          - path: /sim/payeefsp/inbound(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-payeefsp-scheme-adapter
              servicePort: inboundapi
          - path: /sim/payeefsp/sdktest(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-payeefsp-scheme-adapter
              servicePort: testapi
          - path: /sim/payeefsp/test(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-payeefsp-backend
              servicePort: testapi
      - host: sim-payerfsp.local
        http:
          paths:
          - path: /sim/payerfsp/outbound(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-payerfsp-scheme-adapter
              servicePort: outboundapi
          - path: /sim/payerfsp/inbound(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-payerfsp-scheme-adapter
              servicePort: inboundapi
          - path: /sim/payerfsp/sdktest(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-payerfsp-scheme-adapter
              servicePort: testapi
          - path: /sim/payerfsp/test(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-payerfsp-backend
              servicePort: testapi
      - host: sim-testfsp1.local
        http:
          paths:
          - path: /sim/testfsp1/outbound(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-testfsp1-scheme-adapter
              servicePort: outboundapi
          - path: /sim/testfsp1/inbound(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-testfsp1-scheme-adapter
              servicePort: inboundapi
          - path: /sim/testfsp1/sdktest(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-testfsp1-scheme-adapter
              servicePort: testapi
          - path: /sim/testfsp1/test(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-testfsp1-backend
              servicePort: testapi
      - host: sim-testfsp2.local
        http:
          paths:
          - path: /sim/testfsp2/outbound(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-testfsp2-scheme-adapter
              servicePort: outboundapi
          - path: /sim/testfsp2/inbound(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-testfsp2-scheme-adapter
              servicePort: inboundapi
          - path: /sim/testfsp2/sdktest(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-testfsp2-scheme-adapter
              servicePort: testapi
          - path: /sim/testfsp2/test(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-testfsp2-backend
              servicePort: testapi
      - host: sim-testfsp3.local
        http:
          paths:
          - path: /sim/testfsp3/outbound(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-testfsp3-scheme-adapter
              servicePort: outboundapi
          - path: /sim/testfsp3/inbound(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-testfsp3-scheme-adapter
              servicePort: inboundapi
          - path: /sim/testfsp3/sdktest(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-testfsp3-scheme-adapter
              servicePort: testapi
          - path: /sim/testfsp3/test(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-testfsp3-backend
              servicePort: testapi
      - host: sim-testfsp4.local
        http:
          paths:
          - path: /sim/testfsp4/outbound(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-testfsp4-scheme-adapter
              servicePort: outboundapi
          - path: /sim/testfsp4/inbound(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-testfsp4-scheme-adapter
              servicePort: inboundapi
          - path: /sim/testfsp4/sdktest(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-testfsp4-scheme-adapter
              servicePort: testapi
          - path: /sim/testfsp4/test(/|$)(.*)
            backend:
              serviceName: mojaloop-sim-testfsp4-backend
              servicePort: testapi
---
# Source: mojaloop/charts/quoting-service/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop-quoting-service
  labels:
    app.kubernetes.io/name: quoting-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.4
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: quoting-service-11.0.0
  annotations:
      nginx.ingress.kubernetes.io/rewrite-target: "/"
spec:
  rules:
    - host: quoting-service.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop-quoting-service
              servicePort: 80
---
# Source: mojaloop/charts/simulator/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop-simulator
  labels:
    app.kubernetes.io/name: simulator
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.0.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: simulator-11.0.0
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: moja-simulator.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop-simulator
              servicePort: http
---
# Source: mojaloop/charts/transaction-requests-service/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mojaloop-transaction-requests-service
  labels:
    app.kubernetes.io/name: transaction-requests-service
    app.kubernetes.io/instance: mojaloop
    app.kubernetes.io/version: 11.1.2
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: transaction-requests-service-11.0.0
  annotations:
      nginx.ingress.kubernetes.io/rewrite-target: "/"
spec:
  rules:
    - host: transaction-request-service.local
      http:
        paths:
          - path: /
            backend:
              serviceName: mojaloop-transaction-requests-service
              servicePort: 80

